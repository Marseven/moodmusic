{"version":3,"file":"web-player-routes-dbad0bdd.js","sources":["../../../node_modules/@tanstack/query-core/build/lib/infiniteQueryObserver.mjs","../../../node_modules/@tanstack/react-query/build/lib/useInfiniteQuery.mjs","../../../common/resources/client/ui/infinite-scroll/use-infinite-data.ts","../../../resources/client/web-player/channels/requests/use-paginated-channel-content.ts","../../../common/resources/client/ui/infinite-scroll/infinite-scroll-sentinel.tsx","../../../node_modules/fscreen/dist/fscreen.esm.js","../../../common/resources/client/player/utils/el-is-in-fullscreen.ts","../../../common/resources/client/player/providers/player-provider.ts","../../../common/resources/client/player/utils/is-same-media.ts","../../../common/resources/client/player/providers/youtube-provider.ts","../../../common/resources/client/utils/array/shuffle-array.ts","../../../common/resources/client/player/player-local-storage.ts","../../../common/resources/client/player/providers/html-video-provider.ts","../../../common/resources/client/utils/array/prepend-to-array-at-index.ts","../../../common/resources/client/player/utils/reset-media-session.ts","../../../common/resources/client/player/player-queue.ts","../../../common/resources/client/player/handle-player-keybinds.ts","../../../common/resources/client/player/init-player-media-session.ts","../../../common/resources/client/player/player-store.tsx","../../../common/resources/client/player/player-context.tsx","../../../common/resources/client/player/hooks/use-player-store.tsx","../../../common/resources/client/player/hooks/use-player-actions.ts","../../../resources/client/web-player/requests/load-media-item-tracks.ts","../../../resources/client/web-player/tracks/utils/track-to-media-item.ts","../../../resources/client/web-player/tracks/equalizer-image/equalizer-white.gif","../../../resources/client/web-player/tracks/equalizer-image/equalizer-black.gif","../../../resources/client/web-player/tracks/equalizer-image/equalizer-image.tsx","../../../resources/client/web-player/playable-item/playback-toggle-button.tsx","../../../resources/client/web-player/queue-group-id.ts","../../../resources/client/web-player/playable-item/playable-grid-item.tsx","../../../resources/client/web-player/playlists/requests/use-auth-user-playlists.ts","../../../resources/client/web-player/playlists/requests/use-add-tracks-to-playlist.ts","../../../resources/client/web-player/state/global-dialog-store.ts","../../../resources/client/web-player/use-auth-click-capture.ts","../../../resources/client/web-player/context-dialog/playlist-panel.tsx","../../../resources/client/web-player/context-dialog/context-dialog-layout.tsx","../../../resources/client/web-player/library/state/create-countable-store.ts","../../../resources/client/web-player/library/state/likes-store.ts","../../../resources/client/web-player/library/requests/use-add-items-to-library.ts","../../../resources/client/web-player/library/requests/use-remove-items-from-library.ts","../../../resources/client/web-player/context-dialog/toggle-in-library-menu-button.tsx","../../../resources/client/web-player/context-dialog/copy-link-menu-button.tsx","../../../resources/client/web-player/artists/use-artist-permissions.ts","../../../resources/client/web-player/artists/requests/use-delete-artist.ts","../../../resources/client/web-player/radio/get-radio-link.ts","../../../resources/client/web-player/tracks/context-dialog/use-should-show-radio-button.ts","../../../resources/client/web-player/sharing/share-media-dialog.tsx","../../../resources/client/web-player/context-dialog/share-media-button.tsx","../../../resources/client/web-player/artists/artist-context-dialog.tsx","../../../resources/client/web-player/library/like-icon-button.tsx","../../../resources/client/web-player/artists/artist-grid-item.tsx","../../../resources/client/web-player/albums/use-album-permissions.ts","../../../resources/client/web-player/context-dialog/add-to-queue-menu-button.tsx","../../../resources/client/web-player/library/state/reposts-store.ts","../../../resources/client/web-player/reposts/use-toggle-repost.ts","../../../resources/client/web-player/context-dialog/toggle-repost-menu-button.tsx","../../../resources/client/web-player/albums/album-context-dialog.tsx","../../../resources/client/web-player/albums/album-grid-item.tsx","../../../resources/client/web-player/genres/genre-image.tsx","../../../resources/client/web-player/genres/genre-grid-item.tsx","../../../resources/client/web-player/tracks/hooks/use-track-permissions.ts","../../../resources/client/web-player/tracks/requests/use-delete-tracks.ts","../../../resources/client/web-player/tracks/context-dialog/track-context-dialog.tsx","../../../resources/client/web-player/tracks/track-grid-item.tsx","../../../resources/client/web-player/playlists/playlist-image.tsx","../../../resources/client/web-player/playlists/hooks/use-playlist-permissions.ts","../../../resources/client/web-player/playlists/hooks/use-is-following-playlist.ts","../../../resources/client/web-player/playlists/requests/use-delete-playlist.ts","../../../resources/client/web-player/playlists/requests/use-follow-playlist.ts","../../../resources/client/web-player/playlists/requests/use-unfollow-playlist.ts","../../../resources/client/web-player/playlists/playlist-context-dialog.tsx","../../../resources/client/web-player/playlists/playlist-page/follow-playlist-button.tsx","../../../resources/client/web-player/playlists/playlist-grid-item.tsx","../../../resources/client/web-player/users/user-default.svg","../../../resources/client/web-player/users/user-image.tsx","../../../resources/client/web-player/users/user-grid-item.tsx","../../../resources/client/web-player/channels/channel-content-grid-item.tsx","../../../resources/client/web-player/channels/antenna-icon.tsx","../../../resources/client/web-player/channels/channel-heading.tsx","../../../resources/client/web-player/channels/channel-content-grid.tsx","../../../resources/client/web-player/tracks/track-table/use-track-table-meta.ts","../../../resources/client/web-player/tracks/hooks/use-is-track-cued.ts","../../../resources/client/web-player/tracks/hooks/use-is-track-playing.ts","../../../resources/client/web-player/tracks/track-table/toggle-playback-column.tsx","../../../resources/client/web-player/tracks/track-table/track-name-column.tsx","../../../resources/client/web-player/tracks/context-dialog/table-track-context-dialog.tsx","../../../resources/client/web-player/tracks/track-table/track-options-column.tsx","../../../resources/client/web-player/tracks/track-table/track-table.tsx","../../../resources/client/web-player/playlists/virtual-table-body.tsx","../../../resources/client/web-player/channels/channel-track-table.tsx","../../../resources/client/web-player/tracks/requests/use-track-wave-data.ts","../../../resources/client/web-player/tracks/waveform/draw-waveform.ts","../../../resources/client/web-player/player-controls/seekbar/use-base-seekbar.ts","../../../resources/client/web-player/player-controls/seekbar/use-track-seekbar.ts","../../../resources/client/web-player/tracks/waveform/comment-bar-context.tsx","../../../resources/client/web-player/tracks/waveform/comment-bar.tsx","../../../resources/client/web-player/tracks/waveform/waveform.tsx","../../../resources/client/web-player/player-controls/seekbar/track-seekbar.tsx","../../../resources/client/web-player/tracks/utils/track-is-locally-uploaded.ts","../../../common/resources/client/comments/requests/use-create-comment.ts","../../../common/resources/client/comments/new-comment-form.tsx","../../../resources/client/web-player/tracks/waveform/comment-bar-new-comment-form.tsx","../../../resources/client/web-player/library/like-button.tsx","../../../resources/client/web-player/reposts/repost-button.tsx","../../../resources/client/web-player/tracks/media-item-stats.tsx","../../../resources/client/web-player/tracks/track-actions-bar.tsx","../../../resources/client/web-player/tracks/track-list/track-list-item.tsx","../../../resources/client/web-player/tracks/track-list/track-list.tsx","../../../resources/client/web-player/channels/channel-track-list.tsx","../../../node_modules/just-debounce-it/index.mjs","../../../resources/client/web-player/channels/channel-content-carousel.tsx","../../../resources/client/web-player/channels/channel-content.tsx","../../../common/resources/client/admin/ads/ad-host.tsx","../../../resources/client/web-player/channels/channel-page.tsx","../../../resources/client/web-player/tracks/requests/find-youtube-videos-for-track.ts","../../../resources/client/web-player/state/player-overlay-store.ts","../../../resources/client/web-player/state/player-store-options.ts","../../../resources/client/web-player/layout/sidenav.tsx","../../../common/resources/client/player/hooks/use-is-media-playing.ts","../../../resources/client/web-player/layout/queue-sidenav.tsx","../../../resources/client/web-player/search/search-autocomplete.tsx","../../../resources/client/web-player/player-controls/use-cued-track.ts","../../../resources/client/web-player/tracks/track-table/skip-previous-filled.tsx","../../../resources/client/web-player/tracks/track-table/skip-next-filled.tsx","../../../resources/client/web-player/player-controls/mobile-player-controls.tsx","../../../resources/client/web-player/player-controls/seekbar/main-seekbar.tsx","../../../resources/client/web-player/player-controls/playback-controls.tsx","../../../resources/client/web-player/tracks/lyrics/requests/use-lyrics.ts","../../../resources/client/web-player/tracks/lyrics/lyrics-dialog.tsx","../../../resources/client/web-player/player-controls/lyrics-button.tsx","../../../resources/client/web-player/player-controls/download-track-button.tsx","../../../resources/client/web-player/player-controls/desktop-player-controls.tsx","../../../resources/client/web-player/overlay/player-overlay.tsx","../../../resources/client/web-player/layout/web-player-layout.tsx","../../../resources/client/web-player/layout/media-page-header-layout.tsx","../../../common/resources/client/ui/remote-favicon.tsx","../../../resources/client/web-player/user-profile/profile-links.tsx","../../../resources/client/web-player/user-profile/profile-description.tsx","../../../resources/client/web-player/artists/artist-page/artist-page-header.tsx","../../../resources/client/web-player/artists/artist-page/discography-panel/top-tracks-table.tsx","../../../resources/client/web-player/artists/requests/use-artist-albums.ts","../../../resources/client/web-player/artists/artist-page/discography-panel/no-discography-message.tsx","../../../resources/client/web-player/artists/artist-page/discography-panel/artist-albums-list.tsx","../../../resources/client/web-player/artists/artist-page/discography-panel/artist-albums-grid.tsx","../../../resources/client/web-player/artists/artist-page/discography-panel/discography-tab.tsx","../../../resources/client/web-player/artists/artist-page/similar-artists-panel.tsx","../../../node_modules/linkify-string/dist/linkify-string.es.js","../../../common/resources/client/utils/hooks/use-linkified-string.ts","../../../resources/client/web-player/artists/artist-page/artist-about-panel.tsx","../../../resources/client/web-player/artists/artist-page/artist-tracks-panel.tsx","../../../resources/client/web-player/albums/album-list/album-list-item.tsx","../../../resources/client/web-player/albums/album-list/album-list.tsx","../../../resources/client/web-player/artists/artist-page/artist-albums-panel.tsx","../../../resources/client/web-player/artists/artist-page/use-artist-page-tabs.tsx","../../../resources/client/web-player/users/user-follows-store.ts","../../../resources/client/web-player/users/use-follow-user.ts","../../../resources/client/web-player/users/use-unfollow-user.ts","../../../resources/client/web-player/artists/artist-page/followers-panel/follower-list-item.tsx","../../../resources/client/web-player/artists/artist-page/artist-followers-panel.tsx","../../../resources/client/web-player/artists/artist-page/artist-page-tabs.tsx","../../../resources/client/web-player/artists/artist-page/artist-page.tsx","../../../resources/client/web-player/playlists/requests/use-playlist.ts","../../../common/resources/client/ui/images/avatar-group.tsx","../../../resources/client/web-player/layout/bullet-separated-items.tsx","../../../resources/client/web-player/playlists/playlist-page/playlist-page-header.tsx","../../../resources/client/web-player/playlists/requests/use-remove-tracks-from-playlist.ts","../../../resources/client/web-player/playlists/playlist-page/playlist-track-context-dialog.tsx","../../../common/resources/client/utils/array/move-multiple-items-in-array.ts","../../../resources/client/web-player/playlists/requests/use-reorder-playlist-tracks.ts","../../../resources/client/web-player/playlists/playlist-page/playlist-table-row.tsx","../../../resources/client/web-player/layout/media-page-no-results-message.tsx","../../../resources/client/web-player/playlists/playlist-page/playlist-page.tsx","../../../common/resources/client/comments/requests/use-comments.ts","../../../common/resources/client/comments/comment-list/comment-list-item.tsx","../../../common/resources/client/comments/comment-list/comment-list.tsx","../../../resources/client/web-player/tracks/truncated-description.tsx","../../../resources/client/web-player/albums/album-page.tsx","../../../resources/client/web-player/library/requests/use-user-liked-tracks.ts","../../../resources/client/web-player/library/library-tracks-page.tsx","../../../resources/client/web-player/library/library-page-sort-dropdown.tsx","../../../resources/client/web-player/library/requests/use-user-liked-albums.ts","../../../resources/client/web-player/library/library-albums-page.tsx","../../../resources/client/web-player/library/requests/use-user-liked-artists.ts","../../../resources/client/web-player/library/library-artists-page.tsx","../../../resources/client/web-player/library/library-history-page.tsx","../../../resources/client/web-player/tracks/track-page.tsx","../../../resources/client/web-player/user-profile/requests/use-user-profile.tsx","../../../resources/client/web-player/user-profile/panels/profile-reposts-panel.tsx","../../../resources/client/web-player/user-profile/panels/profile-tracks-panel.tsx","../../../resources/client/web-player/library/requests/use-user-playlists.ts","../../../resources/client/web-player/user-profile/panels/profile-playlists-panel.tsx","../../../resources/client/web-player/user-profile/panels/profile-albums-panel.tsx","../../../resources/client/web-player/user-profile/panels/profile-artists-panel.tsx","../../../resources/client/web-player/user-profile/panels/profile-followers-panel.tsx","../../../resources/client/web-player/user-profile/panels/profile-followed-users-panel.tsx","../../../resources/client/web-player/user-profile/requests/use-update-user-profile.ts","../../../resources/client/web-player/user-profile/edit-profile-dialog.tsx","../../../resources/client/web-player/user-profile/header/profile-header.tsx","../../../resources/client/web-player/user-profile/user-profile-page.tsx","../../../resources/client/web-player/genres/tag-media-page.tsx","../../../resources/client/web-player/radio/requests/use-radio-recommendations.ts","../../../resources/client/web-player/radio/radio-page.tsx","../../../resources/client/web-player/search/search-results-page.tsx","../../../resources/client/web-player/library/library-page.tsx","../../../resources/client/web-player/library/library-playlists-page.tsx","../../../resources/client/web-player/tracks/track-embed.tsx","../../../resources/client/web-player/albums/album-embed.tsx","../../../resources/client/web-player/channels/homepage-channel-page.tsx","../../../resources/client/web-player/web-player-routes.tsx"],"sourcesContent":["import { QueryObserver } from './queryObserver.mjs';\nimport { infiniteQueryBehavior, hasNextPage, hasPreviousPage } from './infiniteQueryBehavior.mjs';\n\nclass InfiniteQueryObserver extends QueryObserver {\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    super.setOptions({ ...options,\n      behavior: infiniteQueryBehavior()\n    }, notifyOptions);\n  }\n\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n\n  fetchNextPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  createResult(query, options) {\n    var _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet, _state$data, _state$data2;\n\n    const {\n      state\n    } = query;\n    const result = super.createResult(query, options);\n    const {\n      isFetching,\n      isRefetching\n    } = result;\n    const isFetchingNextPage = isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward';\n    const isFetchingPreviousPage = isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward';\n    return { ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n  }\n\n}\n\nexport { InfiniteQueryObserver };\n//# sourceMappingURL=infiniteQueryObserver.mjs.map\n","import { parseQueryArgs, InfiniteQueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.mjs';\n\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const options = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(options, InfiniteQueryObserver);\n}\n\nexport { useInfiniteQuery };\n//# sourceMappingURL=useInfiniteQuery.mjs.map\n","import {useInfiniteQuery, UseInfiniteQueryResult} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {\n  hasNextPage,\n  PaginationResponse,\n} from '@common/http/backend-response/pagination-response';\nimport {useMemo, useState} from 'react';\nimport {SortDescriptor} from '@common/ui/tables/types/sort-descriptor';\nimport {GetDatatableDataParams} from '@common/datatable/requests/paginated-resources';\nimport {QueryKey} from '@tanstack/query-core/src/types';\n\nexport type UseInfiniteDataResult<T> = UseInfiniteQueryResult<\n  PaginationResponse<T>\n> & {\n  items: T[];\n  totalItems: number | null;\n  sortDescriptor: SortDescriptor;\n  setSortDescriptor: (sortDescriptor: SortDescriptor) => void;\n  searchQuery: string;\n  setSearchQuery: (searchQuery: string) => void;\n};\n\nfunction buildQueryKey(\n  {\n    queryKey,\n    defaultOrderDir,\n    defaultOrderBy,\n    queryParams,\n  }: UseInfiniteDataProps<any>,\n  sortDescriptor: SortDescriptor,\n  searchQuery: string = ''\n) {\n  // make sure to always set default order dir and col so query keys are consistent\n  if (!sortDescriptor.orderBy) {\n    sortDescriptor.orderBy = defaultOrderBy;\n  }\n  if (!sortDescriptor.orderDir) {\n    sortDescriptor.orderDir = defaultOrderDir;\n  }\n  return [...queryKey, sortDescriptor, searchQuery, queryParams];\n}\n\ninterface Response<T> extends BackendResponse {\n  pagination: PaginationResponse<T>;\n}\n\nexport interface UseInfiniteDataProps<T> {\n  initialPage?: PaginationResponse<T> | null;\n  queryKey: QueryKey;\n  queryParams?: Record<string, string | number>;\n  endpoint: string;\n  defaultOrderBy?: SortDescriptor['orderBy'];\n  defaultOrderDir?: SortDescriptor['orderDir'];\n  // whether user can sort items manually (table header, dropdown, etc)\n  willSortOrFilter?: boolean;\n  // ordering is not available with cursor pagination\n  paginate?: 'simple' | 'lengthAware' | 'cursor';\n  transformResponse?: (response: Response<T>) => Response<T>;\n}\nexport function useInfiniteData<T>(\n  props: UseInfiniteDataProps<T>\n): UseInfiniteDataResult<T> {\n  const {\n    initialPage,\n    endpoint,\n    defaultOrderBy,\n    defaultOrderDir,\n    queryParams,\n    paginate,\n    transformResponse,\n    willSortOrFilter = false,\n  } = props;\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortDescriptor, setSortDescriptor] = useState<SortDescriptor>({\n    orderBy: defaultOrderBy,\n    orderDir: defaultOrderDir,\n  });\n\n  const query = useInfiniteQuery({\n    keepPreviousData: willSortOrFilter,\n    queryKey: buildQueryKey(props, sortDescriptor, searchQuery),\n    queryFn: ({pageParam}) => {\n      const params: GetDatatableDataParams = {\n        ...queryParams,\n        perPage: initialPage?.per_page,\n        query: searchQuery,\n        paginate,\n        ...sortDescriptor,\n      };\n      if (paginate === 'cursor') {\n        params.cursor = pageParam;\n      } else {\n        params.page = pageParam || 1;\n      }\n      return fetchData<T>(endpoint, params, transformResponse);\n    },\n    getNextPageParam: lastResponse => {\n      if (!hasNextPage(lastResponse.pagination)) {\n        return undefined;\n      }\n      if ('next_cursor' in lastResponse.pagination) {\n        return lastResponse.pagination.next_cursor;\n      }\n      return lastResponse.pagination.current_page + 1;\n    },\n    initialData: () => {\n      if (\n        !initialPage ||\n        // if sorting or search changed, remove initial data, so query is reset\n        sortDescriptor.orderBy !== defaultOrderBy ||\n        sortDescriptor.orderDir !== defaultOrderDir ||\n        !!searchQuery\n      ) {\n        return undefined;\n      }\n\n      return {\n        pageParams: [undefined, 1],\n        pages: [{pagination: initialPage}],\n      };\n    },\n  });\n\n  const items = useMemo(() => {\n    return query.data?.pages.flatMap(p => p.pagination.data) || [];\n  }, [query.data?.pages]);\n\n  const firstPage = query.data?.pages[0].pagination;\n  const totalItems =\n    firstPage && 'total' in firstPage && firstPage.total\n      ? firstPage.total\n      : null;\n\n  return {\n    ...query,\n    items,\n    totalItems,\n    sortDescriptor,\n    setSortDescriptor,\n    searchQuery,\n    setSearchQuery,\n  } as UseInfiniteDataResult<T>;\n}\n\nfunction fetchData<T>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  transformResponse?: UseInfiniteDataProps<T>['transformResponse']\n): Promise<Response<T>> {\n  return apiClient.get(endpoint, {params}).then(r => {\n    if (transformResponse) {\n      return transformResponse(r.data);\n    }\n    return r.data;\n  });\n}\n","import {Channel, ChannelContentItem} from '@app/web-player/channels/channel';\nimport {useParams} from 'react-router-dom';\nimport {\n  channelEndpoint,\n  channelQueryKey,\n} from '@app/web-player/channels/requests/use-channel';\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {SortDescriptor} from '@common/ui/tables/types/sort-descriptor';\n\nexport function usePaginatedChannelContent<\n  T extends ChannelContentItem = ChannelContentItem\n>(channel: Channel<T>) {\n  const {filter} = useParams();\n  const [defaultOrderBy = 'popularity', defaultOrderDir = 'desc'] = (\n    channel.config.contentOrder || ''\n  ).split(':');\n  return useInfiniteData<T>({\n    initialPage: channel.content,\n    queryKey: channelQueryKey(channel.id, {filter: filter || ''}),\n    endpoint: channelEndpoint(channel.id),\n    defaultOrderBy,\n    defaultOrderDir: defaultOrderDir as SortDescriptor['orderDir'],\n    paginate: 'simple',\n    queryParams: {\n      returnContentOnly: 'true',\n      //used for dynamically specifying channel content.\n      // In \"channel/1/jazz\" filter will be \"jazz\"\n      filter: filter || '',\n    },\n  });\n}\n","import {AnimatePresence, m} from 'framer-motion';\nimport {ProgressCircle} from '../progress/progress-circle';\nimport React, {Fragment, ReactNode, useEffect, useRef} from 'react';\nimport {opacityAnimation} from '../animation/opacity-animation';\nimport clsx from 'clsx';\nimport {UseInfiniteQueryResult} from '@tanstack/react-query/src/types';\n\nexport interface InfiniteScrollSentinelProps {\n  marginTop?: string;\n  children?: ReactNode;\n  renderSentinelAs?: string;\n  query: UseInfiniteQueryResult;\n}\nexport function InfiniteScrollSentinel({\n  query: {isInitialLoading, fetchNextPage, isFetchingNextPage, hasNextPage},\n  children,\n  marginTop = 'mt-24',\n  renderSentinelAs = 'span',\n}: InfiniteScrollSentinelProps) {\n  const sentinelRef = useRef<HTMLElement>(null);\n\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (\n        entry.isIntersecting &&\n        hasNextPage &&\n        !isFetchingNextPage &&\n        !isInitialLoading\n      ) {\n        fetchNextPage();\n      }\n    });\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [fetchNextPage, hasNextPage, isFetchingNextPage, isInitialLoading]);\n\n  // children might already be wrapper in AnimatePresence, nested\n  // it will cause issues, so only wrap default loader with it\n  const content = children ? (\n    isFetchingNextPage ? (\n      children\n    ) : null\n  ) : (\n    <AnimatePresence>\n      {isFetchingNextPage && (\n        <m.div\n          className={clsx('flex justify-center w-full', marginTop)}\n          {...opacityAnimation}\n        >\n          <ProgressCircle isIndeterminate aria-label=\"loading\" />\n        </m.div>\n      )}\n    </AnimatePresence>\n  );\n\n  const Sentinel = renderSentinelAs as any;\n  return (\n    <Fragment>\n      <Sentinel ref={sentinelRef} aria-hidden />\n      {content}\n    </Fragment>\n  );\n}\n","var key = {\r\n    fullscreenEnabled: 0,\r\n    fullscreenElement: 1,\r\n    requestFullscreen: 2,\r\n    exitFullscreen: 3,\r\n    fullscreenchange: 4,\r\n    fullscreenerror: 5,\r\n    fullscreen: 6\r\n};\r\nvar webkit = [\r\n    'webkitFullscreenEnabled',\r\n    'webkitFullscreenElement',\r\n    'webkitRequestFullscreen',\r\n    'webkitExitFullscreen',\r\n    'webkitfullscreenchange',\r\n    'webkitfullscreenerror',\r\n    '-webkit-full-screen',\r\n];\r\nvar moz = [\r\n    'mozFullScreenEnabled',\r\n    'mozFullScreenElement',\r\n    'mozRequestFullScreen',\r\n    'mozCancelFullScreen',\r\n    'mozfullscreenchange',\r\n    'mozfullscreenerror',\r\n    '-moz-full-screen',\r\n];\r\nvar ms = [\r\n    'msFullscreenEnabled',\r\n    'msFullscreenElement',\r\n    'msRequestFullscreen',\r\n    'msExitFullscreen',\r\n    'MSFullscreenChange',\r\n    'MSFullscreenError',\r\n    '-ms-fullscreen',\r\n];\r\n// so it doesn't throw if no window or document\r\nvar document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\r\nvar vendor = (('fullscreenEnabled' in document && Object.keys(key)) ||\r\n    (webkit[0] in document && webkit) ||\r\n    (moz[0] in document && moz) ||\r\n    (ms[0] in document && ms) ||\r\n    []);\r\nvar fscreen = {\r\n    requestFullscreen: function (element) { return element[vendor[key.requestFullscreen]](); },\r\n    requestFullscreenFunction: function (element) { return element[vendor[key.requestFullscreen]]; },\r\n    get exitFullscreen() { return document[vendor[key.exitFullscreen]].bind(document); },\r\n    get fullscreenPseudoClass() { return \":\" + vendor[key.fullscreen]; },\r\n    addEventListener: function (type, handler, options) { return document.addEventListener(vendor[key[type]], handler, options); },\r\n    removeEventListener: function (type, handler, options) { return document.removeEventListener(vendor[key[type]], handler, options); },\r\n    get fullscreenEnabled() { return Boolean(document[vendor[key.fullscreenEnabled]]); },\r\n    set fullscreenEnabled(val) { },\r\n    get fullscreenElement() { return document[vendor[key.fullscreenElement]]; },\r\n    set fullscreenElement(val) { },\r\n    get onfullscreenchange() { return document[(\"on\" + vendor[key.fullscreenchange]).toLowerCase()]; },\r\n    set onfullscreenchange(handler) { return document[(\"on\" + vendor[key.fullscreenchange]).toLowerCase()] = handler; },\r\n    get onfullscreenerror() { return document[(\"on\" + vendor[key.fullscreenerror]).toLowerCase()]; },\r\n    set onfullscreenerror(handler) { return document[(\"on\" + vendor[key.fullscreenerror]).toLowerCase()] = handler; },\r\n};\n\nexport default fscreen;\n//# sourceMappingURL=fscreen.esm.js.map\n","import fscreen from 'fscreen';\n\nexport function elIsInFullscreen(el: HTMLElement): boolean {\n  if (fscreen.fullscreenElement === el) return true;\n\n  try {\n    // Throws in iOS Safari...\n    return el.classList.contains((fscreen as any).fullscreenPseudoClass);\n  } catch (error) {\n    return false;\n  }\n}\n","import {MediaItem} from '@common/player/media-item';\nimport {PersistablePlayerState} from '@common/player/player-local-storage';\nimport {PlayerStoreOptions} from '@common/player/player-store-options';\nimport {elIsInFullscreen} from '@common/player/utils/el-is-in-fullscreen';\nimport fscreen from 'fscreen';\nimport {ProviderListeners} from '@common/player/player-state';\n\nexport abstract class PlayerProvider {\n  abstract name: MediaItem['provider'];\n\n  constructor(\n    public listeners: ProviderListeners,\n    public initialState: PersistablePlayerState,\n    public options: PlayerStoreOptions\n  ) {}\n\n  abstract play(media: MediaItem): Promise<void>;\n  abstract pause(): void;\n  abstract stop(): void;\n  abstract seek(time: number): void;\n  abstract getDuration(): number; // in seconds\n  abstract getCurrentTime(): number; // in seconds\n  abstract setVolume(volume: number): void;\n  abstract setMuted(isMuted: boolean): void;\n  abstract cueMedia(media: MediaItem): Promise<MediaItem>;\n  destroy() {\n    fscreen.removeEventListener(\n      'fullscreenchange',\n      this.fullscreenListener.bind(this)\n    );\n    fscreen.removeEventListener(\n      'fullscreenerror',\n      this.fullscreenListener.bind(this)\n    );\n  }\n\n  protected abstract getFullscreenEl(): HTMLElement | undefined;\n  protected fullscreenListener() {\n    const el = this.getFullscreenEl();\n    const isFullscreen = el != null && elIsInFullscreen(el);\n    if (isFullscreen) {\n      try {\n        screen.orientation.lock('landscape').catch(() => {});\n      } catch (e) {}\n    } else {\n      screen.orientation.unlock();\n    }\n\n    this.listeners.onFullscreenChange?.(el != null && elIsInFullscreen(el));\n  }\n  enterFullscreen() {\n    const el = this.getFullscreenEl();\n    if (el) {\n      fscreen.addEventListener(\n        'fullscreenchange',\n        this.fullscreenListener.bind(this)\n      );\n      fscreen.addEventListener(\n        'fullscreenerror',\n        this.fullscreenListener.bind(this)\n      );\n      fscreen.requestFullscreen(el);\n    }\n  }\n}\n","import {MediaItem} from '@common/player/media-item';\n\nexport function isSameMedia(a?: MediaItem, b?: MediaItem): boolean {\n  if (!a || !b) return false;\n  return a.id === b.id && a.groupId === b.groupId;\n}\n","import {PlayerProvider} from '@common/player/providers/player-provider';\nimport {YoutubeMediaItem} from '@common/player/media-item';\nimport lazyLoader from '@common/utils/http/lazy-loader';\nimport {Required} from 'utility-types';\nimport {isSameMedia} from '@common/player/utils/is-same-media';\n\nconst YoutubePlayerVars: YT.PlayerVars = {\n  autoplay: 0,\n  rel: 0,\n  showinfo: 0,\n  disablekb: 1,\n  controls: 0,\n  modestbranding: 1,\n  iv_load_policy: 3,\n  playsinline: 1,\n};\n\nexport class YoutubeProvider extends PlayerProvider {\n  name = 'youtube' as const;\n\n  youtube?: YT.Player;\n  cuedMedia?: YoutubeMediaItem;\n  protected containerEl?: HTMLDivElement;\n\n  async play(media: YoutubeMediaItem) {\n    await this.cueMedia(media);\n    this.youtube?.playVideo();\n  }\n\n  pause() {\n    this.youtube?.pauseVideo();\n  }\n\n  stop() {\n    this.youtube?.stopVideo();\n  }\n\n  seek(time: number) {\n    this.youtube?.seekTo(time, true);\n  }\n\n  getDuration(): number {\n    return this.youtube?.getDuration() || 0;\n  }\n\n  getCurrentTime(): number {\n    return this.youtube?.getCurrentTime() || 0;\n  }\n\n  setVolume(number: number) {\n    this.youtube?.setVolume(number);\n  }\n\n  setMuted(value: boolean) {\n    if (value) {\n      this.youtube?.mute();\n    } else {\n      this.youtube?.unMute();\n    }\n  }\n\n  async cueMedia(media: YoutubeMediaItem): Promise<any> {\n    if (isSameMedia(this.cuedMedia, media)) return;\n\n    this.cuedMedia = media;\n\n    const [, resolvedMedia] = await Promise.all([\n      loadYoutubePlayer(),\n      media.src === 'resolve'\n        ? this.options.youtube?.srcResolver?.(media)\n        : Promise.resolve(media),\n    ]);\n\n    if (!resolvedMedia?.src || !youtubePlayerIsLoaded()) {\n      this.listeners.onError?.();\n      return;\n    }\n\n    await this.cueYoutubeVideo(resolvedMedia as Required<YoutubeMediaItem>);\n  }\n\n  destroy() {\n    try {\n      super.destroy();\n      this.youtube?.destroy();\n    } catch (e) {\n      //\n    }\n    this.containerEl?.remove();\n    this.youtube = undefined;\n    this.cuedMedia = undefined;\n  }\n\n  async cueYoutubeVideo(media: Required<YoutubeMediaItem>) {\n    const currentYoutubeId = await this.getYoutubeId();\n    if (media.src !== currentYoutubeId) {\n      if (!this.youtube) {\n        // YouTube player not initialized yet, do it now\n        this.containerEl = document.createElement('div');\n        this.options.ref.current!.appendChild(this.containerEl);\n        await new Promise<void>(resolve => {\n          this.youtube = new YT.Player(this.containerEl!, {\n            videoId: media.src,\n            playerVars: YoutubePlayerVars,\n            events: {\n              onReady: () => {\n                if (this.initialState.muted) {\n                  this.setMuted(true);\n                }\n                this.setVolume(this.initialState.volume ?? 30);\n                resolve();\n              },\n              onError: this.listeners.onError,\n              onStateChange: this.onYoutubeStateChange.bind(this),\n            },\n          });\n        });\n      } else {\n        // YouTube player was initialized before, can just cue the video directly\n        this.youtube?.loadVideoById({\n          videoId: media.src,\n          suggestedQuality: this.options.youtube?.suggestedQuality,\n        });\n      }\n    }\n\n    this.cuedMedia = media;\n  }\n\n  public getYoutubeId(): string | undefined {\n    const url = this.youtube?.getVideoUrl?.();\n    return url ? url.split('v=')[1] : undefined;\n  }\n\n  protected onYoutubeStateChange(e: YT.OnStateChangeEvent) {\n    this.options.youtube?.onStateChange?.(e);\n    switch (e.data) {\n      case YT.PlayerState.ENDED:\n        this.listeners.onPlaybackEnd?.();\n        break;\n      case YT.PlayerState.PLAYING:\n        this.listeners.onPlay?.();\n        break;\n      case YT.PlayerState.BUFFERING:\n        this.listeners.onBuffering?.();\n        break;\n      case YT.PlayerState.PAUSED:\n        this.listeners.onPause?.();\n        break;\n    }\n  }\n\n  getFullscreenEl() {\n    return this.youtube?.getIframe();\n  }\n}\n\nfunction loadYoutubePlayer() {\n  return new Promise(resolve => {\n    if (youtubePlayerIsLoaded()) {\n      resolve(window.YT);\n      return;\n    } else {\n      lazyLoader.loadAsset('https://www.youtube.com/iframe_api', {\n        type: 'js',\n      });\n    }\n\n    const previous = window.onYouTubeIframeAPIReady;\n\n    window.onYouTubeIframeAPIReady = () => {\n      if (previous) {\n        previous();\n      }\n\n      resolve(window.YT);\n    };\n  });\n}\n\nfunction youtubePlayerIsLoaded(): boolean {\n  return window.YT && window.YT.Player && window.YT.Player instanceof Function;\n}\n","export function shuffleArray(items: any[], keepFirst = false) {\n  let first = keepFirst ? items.shift() : null;\n\n  let currentIndex = items.length,\n    temporaryValue,\n    randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    temporaryValue = items[currentIndex];\n    items[currentIndex] = items[randomIndex];\n    items[randomIndex] = temporaryValue;\n  }\n\n  if (first) {\n    items.unshift(first);\n  }\n\n  return [...items];\n}\n","import {getFromLocalStorage} from '@common/utils/hooks/local-storage';\nimport {PlayerStoreOptions} from '@common/player/player-store-options';\nimport {PlayerState} from '@common/player/player-state';\n\nexport interface PersistablePlayerState {\n  muted?: PlayerState['muted'];\n  repeat?: PlayerState['repeat'];\n  shuffling?: PlayerState['shuffling'];\n  volume?: PlayerState['volume'];\n}\n\nexport interface PlayerInitialData {\n  state?: PersistablePlayerState;\n  queue?: PlayerState['originalQueue'];\n  cuedMediaId?: string | number;\n}\n\nexport function getPlayerStateFromLocalStorage(\n  id: string | number,\n  options?: PlayerStoreOptions\n): PlayerInitialData {\n  const defaultVolume = options?.defaultVolume || 30;\n  return {\n    state: {\n      muted: getFromLocalStorage(`player.${id}.muted`) ?? false,\n      repeat: getFromLocalStorage(`player.${id}.repeat`) ?? 'all',\n      shuffling: getFromLocalStorage(`player.${id}.shuffling`) ?? false,\n      volume: getFromLocalStorage(`player.${id}.volume`) ?? defaultVolume,\n    },\n    queue: getFromLocalStorage(`player.${id}.queue`, []),\n    cuedMediaId: getFromLocalStorage(`player.${id}.cuedMediaId`),\n  };\n}\n","import {PlayerProvider} from '@common/player/providers/player-provider';\nimport {HtmlVideoMediaItem} from '@common/player/media-item';\nimport {isSameMedia} from '@common/player/utils/is-same-media';\n\nexport class HtmlVideoProvider extends PlayerProvider {\n  name = 'htmlVideo' as const;\n\n  protected element?: HTMLVideoElement;\n  protected cuedMedia?: HtmlVideoMediaItem;\n\n  async play(media: HtmlVideoMediaItem) {\n    await this.cueMedia(media);\n    try {\n      await this.element?.play();\n    } catch (e) {\n      this.listeners.onError?.(e);\n    }\n  }\n\n  pause() {\n    this.element?.pause();\n  }\n\n  stop() {\n    this.pause();\n    this.seek(0);\n  }\n\n  seek(time: number) {\n    if (time === Infinity || !this.element) return;\n    this.element.currentTime = time;\n  }\n\n  getDuration() {\n    return this.element?.seekable && this.element.seekable.length > 0\n      ? this.element?.seekable.end(0)\n      : 0;\n  }\n\n  getCurrentTime() {\n    return this.element?.currentTime || 0;\n  }\n\n  setVolume(volume: number) {\n    if (this.element) {\n      this.element.volume = volume / 100;\n    }\n  }\n\n  setMuted(isMuted: boolean) {\n    if (this.element) {\n      this.element.muted = isMuted;\n    }\n  }\n\n  async cueMedia(media: HtmlVideoMediaItem): Promise<any> {\n    if (isSameMedia(this.cuedMedia, media)) return;\n\n    this.createElement();\n\n    if (!this.element) {\n      this.listeners.onError?.();\n      return;\n    }\n\n    this.element.src = media.src;\n    if (media.image) {\n      this.element.poster = media.image;\n    }\n    this.cuedMedia = media;\n  }\n\n  getFullscreenEl() {\n    return this.element;\n  }\n\n  destroy() {\n    super.destroy();\n    if (this.element) {\n      this.element.remove();\n    }\n    this.element = undefined;\n    this.cuedMedia = undefined;\n  }\n\n  private createElement() {\n    if (this.element) return;\n\n    this.element = document.createElement('video');\n    this.element.setAttribute('playsinline', 'true');\n    this.element.setAttribute('oncontextmenu', 'return false;');\n    this.element.setAttribute('controlsList', 'nodownload');\n    this.element.id = 'html5-player';\n    this.options.ref.current?.appendChild(this.element);\n\n    this.setMuted(this.initialState.muted ?? false);\n    this.setVolume(this.initialState.volume ?? 30);\n\n    this.bindStateChangeEvents();\n  }\n\n  private bindStateChangeEvents() {\n    if (!this.element) return;\n    this.element.addEventListener('ended', () => {\n      this.listeners.onPlaybackEnd?.();\n    });\n\n    this.element.addEventListener('waiting', e => {\n      this.listeners.onBuffering?.();\n    });\n\n    this.element.addEventListener('playing', () => {\n      this.listeners.onPlay?.();\n    });\n\n    this.element.addEventListener('pause', () => {\n      this.listeners.onPause?.();\n    });\n\n    this.element.addEventListener('error', e => {\n      this.listeners.onError?.(e);\n    });\n  }\n}\n","export function prependToArrayAtIndex<T>(array: T[], toAdd: T[], index = 0): T[] {\n  const copyOfArray = [...array];\n  const tail = copyOfArray.splice(index + 1);\n  return [...copyOfArray, ...toAdd, ...tail];\n}\n","export function resetMediaSession() {\n  if ('mediaSession' in navigator) {\n    const actionHandlers: MediaSessionAction[] = [\n      'play',\n      'pause',\n      'previoustrack',\n      'nexttrack',\n      'stop',\n      'seekbackward',\n      'seekforward',\n      'seekto',\n    ];\n    actionHandlers.forEach(action =>\n      navigator.mediaSession.setActionHandler(action, null)\n    );\n    navigator.mediaSession.metadata = null;\n    navigator.mediaSession.playbackState = 'none';\n  }\n}\n","import {MediaItem} from '@common/player/media-item';\nimport {PlayerState} from '@common/player/player-state';\n\nexport function playerQueue(state: () => PlayerState) {\n  const getPointer = (): number => {\n    if (state().cuedMedia) {\n      return (\n        state().shuffledQueue.findIndex(\n          item => item.id === state().cuedMedia?.id\n        ) || 0\n      );\n    }\n    return 0;\n  };\n  const getCurrent = (): MediaItem | undefined => {\n    return state().shuffledQueue[getPointer()];\n  };\n  const getFirst = (): MediaItem | undefined => {\n    return state().shuffledQueue[0];\n  };\n  const getLast = (): MediaItem | undefined => {\n    return state().shuffledQueue[state().shuffledQueue.length - 1];\n  };\n  const getNext = (): MediaItem | undefined => {\n    return state().shuffledQueue[getPointer() + 1];\n  };\n  const getPrevious = (): MediaItem | undefined => {\n    return state().shuffledQueue[getPointer() - 1];\n  };\n  const isLast = (): boolean => {\n    return getPointer() === state().originalQueue.length - 1;\n  };\n\n  return {\n    getPointer,\n    getCurrent,\n    getFirst,\n    getLast,\n    getNext,\n    getPrevious,\n    isLast,\n  };\n}\n","import {PlayerState} from '@common/player/player-state';\nimport {isCtrlOrShiftPressed} from '@common/utils/keybinds/is-ctrl-or-shift-pressed';\n\nexport function handlePlayerKeybinds(\n  e: KeyboardEvent,\n  state: () => PlayerState\n) {\n  if (\n    ['input', 'textarea'].includes(\n      (e.target as HTMLElement)?.tagName.toLowerCase()\n    )\n  )\n    return;\n\n  if (e.key === ' ') {\n    e.preventDefault();\n    if (state().status === 'playing') {\n      state().pause();\n    } else {\n      state().play();\n    }\n  }\n\n  if (e.key === 'ArrowRight' && isCtrlOrShiftPressed(e)) {\n    e.preventDefault();\n    state().playNext();\n  }\n\n  if (e.key === 'ArrowLeft' && isCtrlOrShiftPressed(e)) {\n    e.preventDefault();\n    state().playPrevious();\n  }\n}\n","import {Optional} from 'utility-types';\nimport {PlayerState} from '@common/player/player-state';\nimport {PlayerStoreOptions} from '@common/player/player-store-options';\n\nexport function initPlayerMediaSession(\n  state: () => PlayerState,\n  options: PlayerStoreOptions\n) {\n  if ('mediaSession' in navigator) {\n    const actionHandlers: Optional<\n      Record<MediaSessionAction, MediaSessionActionHandler>\n    > = {\n      play: () => state().play(),\n      pause: () => state().pause(),\n      previoustrack: () => state().playPrevious(),\n      nexttrack: () => state().playNext(),\n      stop: () => state().stop(),\n      seekbackward: () => state().seek(state().getCurrentTime() - 10),\n      seekforward: () => state().seek(state().getCurrentTime() + 10),\n      seekto: details => state().seek(details.seekTime || 0),\n    };\n    for (const key in actionHandlers) {\n      try {\n        navigator.mediaSession.setActionHandler(\n          key as MediaSessionAction,\n          actionHandlers[key as MediaSessionAction]!\n        );\n      } catch (error) {}\n    }\n    const cuedMedia = state().cuedMedia;\n    if (cuedMedia) {\n      options.setMediaSessionMetadata?.(cuedMedia);\n    }\n  }\n}\n","import {createStore} from 'zustand';\nimport {immer} from 'zustand/middleware/immer';\nimport {YoutubeProvider} from '@common/player/providers/youtube-provider';\nimport {MediaItem} from '@common/player/media-item';\nimport {setInLocalStorage as _setInLocalStorage} from '@common/utils/hooks/local-storage';\nimport {shuffleArray} from '@common/utils/array/shuffle-array';\nimport {PlayerStoreOptions} from '@common/player/player-store-options';\nimport {\n  getPlayerStateFromLocalStorage,\n  PersistablePlayerState,\n} from '@common/player/player-local-storage';\nimport {HtmlVideoProvider} from '@common/player/providers/html-video-provider';\nimport fscreen from 'fscreen';\nimport {prependToArrayAtIndex} from '@common/utils/array/prepend-to-array-at-index';\nimport deepMerge from 'deepmerge';\nimport {resetMediaSession} from '@common/player/utils/reset-media-session';\nimport {playerQueue} from '@common/player/player-queue';\nimport {\n  PlayerState,\n  ProviderListeners,\n  RepeatMode,\n} from '@common/player/player-state';\nimport {handlePlayerKeybinds} from '@common/player/handle-player-keybinds';\nimport {initPlayerMediaSession} from '@common/player/init-player-media-session';\nimport {isSameMedia} from '@common/player/utils/is-same-media';\n\nexport const createPlayerStore = (\n  id: string | number,\n  options: PlayerStoreOptions\n) => {\n  const listeners = new Set<ProviderListeners>();\n  // add initial listeners from options, these will be present for the entire lifetime of the player\n  if (options.listeners) {\n    listeners.add(options.listeners);\n  }\n  // initialData from options should take priority over local storage data\n  const initialData = deepMerge(\n    getPlayerStateFromLocalStorage(id, options),\n    options.initialData || {}\n  );\n\n  const setInLocalStorage = (key: string, value: any) => {\n    _setInLocalStorage(`player.${id}.${key}`, value);\n  };\n\n  return createStore<PlayerState>()(\n    immer((set, get) => {\n      const queue = playerQueue(get);\n\n      const keybindsHandler = (e: KeyboardEvent) => {\n        handlePlayerKeybinds(e, get);\n      };\n\n      const selectAndCreateProvider = (name: MediaItem['provider']) => {\n        const storeListeners: ProviderListeners = {\n          onPlay: () => {\n            set(s => {\n              s.status = 'playing';\n            });\n            listeners.forEach(l => l.onPlay?.(get().cuedMedia));\n            const exactDuration = get().provider?.getDuration();\n            if (exactDuration) {\n              set(s => {\n                s.mediaDuration = exactDuration;\n              });\n            }\n          },\n          onPause: () => {\n            set(s => {\n              s.status = 'paused';\n            });\n            listeners.forEach(l => l.onPause?.());\n          },\n          onError: e => {\n            set(s => {\n              s.status = 'paused';\n            });\n            listeners.forEach(l => l.onError?.(e, get()));\n          },\n          onBuffering: () => {\n            set(s => {\n              s.status = 'buffering';\n            });\n            listeners.forEach(l => l.onBuffering?.());\n          },\n          onSeek: time => {\n            listeners.forEach(l => l.onSeek?.(time));\n          },\n          onPlaybackEnd: async () => {\n            const media = get().cuedMedia;\n            listeners.forEach(l => l.onPlaybackEnd?.(media));\n            if (queue.isLast() && options.loadMoreMediaItems) {\n              const items = await options.loadMoreMediaItems(media);\n              if (items?.length) {\n                get().appendToQueue(items);\n              }\n            }\n            get().playNext();\n          },\n          onCued: () => {\n            listeners.forEach(l => l.onCued?.(get().cuedMedia));\n          },\n          onFullscreenChange: isFullscreen => {\n            listeners.forEach(l => l.onFullscreenChange?.(isFullscreen));\n            set(s => {\n              s.isFullscreen = isFullscreen;\n            });\n          },\n        };\n\n        const currentState: PersistablePlayerState = {\n          ...initialData.state,\n          volume: get().volume,\n          muted: get().muted,\n          shuffling: get().shuffling,\n          repeat: get().repeat,\n        };\n\n        switch (name) {\n          case 'youtube':\n            return new YoutubeProvider(storeListeners, currentState, options);\n          case 'htmlVideo':\n            return new HtmlVideoProvider(storeListeners, currentState, options);\n        }\n      };\n\n      const initialQueue = initialData.queue || [];\n\n      return {\n        originalQueue: initialQueue,\n        shuffledQueue: initialData.state?.shuffling\n          ? shuffleArray(initialQueue)\n          : initialQueue,\n        status: 'uninitialized',\n        volume: initialData.state?.volume ?? 30,\n        setVolume: value => {\n          get().provider?.setVolume(value);\n          set(s => {\n            s.volume = value;\n          });\n          setInLocalStorage('volume', value);\n        },\n        muted: initialData.state?.muted ?? false,\n        setMuted: isMuted => {\n          get().provider?.setMuted(isMuted);\n          set(s => {\n            s.muted = isMuted;\n          });\n          setInLocalStorage('muted', isMuted);\n        },\n        repeat: initialData.state?.repeat ?? 'all',\n        toggleRepeatMode: () => {\n          let newRepeat: RepeatMode = 'all';\n          const currentRepeat = get().repeat;\n          if (currentRepeat === 'all') {\n            newRepeat = 'one';\n          } else if (currentRepeat === 'one') {\n            newRepeat = false;\n          }\n\n          set(s => {\n            s.repeat = newRepeat;\n          });\n          setInLocalStorage('repeat', newRepeat);\n        },\n        shuffling: initialData.state?.shuffling ?? false,\n        toggleShuffling: () => {\n          let newQueue: MediaItem[] = [];\n\n          if (get().shuffling) {\n            newQueue = get().originalQueue;\n          } else {\n            newQueue = shuffleArray([...get().shuffledQueue]);\n          }\n\n          set(s => {\n            s.shuffling = !s.shuffling;\n            s.shuffledQueue = newQueue;\n          });\n        },\n        mediaDuration: 0,\n        provider: null,\n        seek: time => {\n          get().provider?.seek(time);\n          listeners.forEach(l => l.onSeek?.(time));\n        },\n        subscribe: newListeners => {\n          listeners.add(newListeners);\n          return () => listeners.delete(newListeners);\n        },\n        getCurrentTime: () => {\n          return get().provider?.getCurrentTime() || 0;\n        },\n        play: async media => {\n          // get currently active queue item, if none is provided\n          if (media) {\n            await get().cue(media);\n          } else {\n            media = get().cuedMedia || queue.getCurrent();\n          }\n          // if no media to play, stop player and bail\n          if (!media) {\n            get().stop();\n            return;\n          }\n          const r = options.onBeforePlay?.(media);\n          if (!r?.preventPlayback) {\n            await get().provider?.play(media);\n          }\n        },\n        pause: () => {\n          get().provider?.pause();\n        },\n        stop: () => {\n          if (get().status !== 'playing') return;\n          get().pause();\n          get().seek(0);\n\n          set(s => {\n            s.status = 'paused';\n          });\n        },\n        playNext: async () => {\n          get().stop();\n          let media = queue.getCurrent();\n\n          if (get().repeat === 'all' && queue.isLast()) {\n            media = queue.getFirst();\n          } else if (get().repeat !== 'one') {\n            media = queue.getNext();\n          }\n\n          if (media) {\n            await get().play(media);\n          } else {\n            get().seek(0);\n            get().play();\n          }\n        },\n        playPrevious: async () => {\n          get().stop();\n          let media = queue.getCurrent();\n\n          if (get().repeat === 'all' && queue.getPointer() === 0) {\n            media = queue.getLast();\n          } else if (get().repeat !== 'one') {\n            media = queue.getPrevious();\n          }\n\n          if (media) {\n            await get().play(media);\n          } else {\n            get().seek(0);\n            get().play();\n          }\n        },\n        cue: async media => {\n          if (isSameMedia(media, get().cuedMedia)) return;\n\n          // select new provider (if needed) and destroy previous one\n          if (get().provider?.name !== media.provider) {\n            get().provider?.destroy();\n            const newProvider = selectAndCreateProvider(media.provider);\n            if (newProvider) {\n              set(s => {\n                return {...s, provider: newProvider};\n              });\n            }\n          }\n\n          set(s => {\n            s.cuedMedia = media;\n          });\n\n          await get().provider!.cueMedia(media);\n\n          // wait for provider to cue media before trying to get the duration\n          set(s => {\n            s.mediaDuration =\n              get().provider?.getDuration() || get().cuedMedia?.duration || 0;\n            s.status = 'paused';\n          });\n\n          if (media) {\n            options.setMediaSessionMetadata?.(media);\n          }\n\n          listeners.forEach(listener => listener.onCued?.(media));\n          // set status to \"paused\" and fire \"onPause\" event, as it might not\n          // fire from provider, if cueing from a track that was already paused\n          listeners.forEach(listener => listener.onPause?.());\n\n          setInLocalStorage('cuedMediaId', media.id);\n        },\n        async overrideQueue(\n          mediaItems: MediaItem[],\n          queuePointer: number = 0\n        ): Promise<any> {\n          if (!mediaItems?.length) return;\n          const items = [...mediaItems];\n          set(s => {\n            s.shuffledQueue = get().shuffling\n              ? shuffleArray(items, true)\n              : items;\n            s.originalQueue = items;\n          });\n          setInLocalStorage('queue', get().originalQueue.slice(0, 15));\n          const media =\n            queuePointer > -1 ? mediaItems[queuePointer] : queue.getCurrent();\n          if (media) {\n            return get().cue(media);\n          }\n        },\n        appendToQueue: (mediaItems, afterCuedMedia = true) => {\n          const shuffledNewItems = get().shuffling\n            ? shuffleArray([...mediaItems])\n            : [...mediaItems];\n          const index = afterCuedMedia ? queue.getPointer() : 0;\n          set(s => {\n            s.shuffledQueue = prependToArrayAtIndex(\n              s.shuffledQueue,\n              shuffledNewItems,\n              index\n            );\n            s.originalQueue = prependToArrayAtIndex(\n              s.originalQueue,\n              mediaItems,\n              index\n            );\n          });\n          setInLocalStorage('queue', get().originalQueue.slice(0, 15));\n        },\n        removeFromQueue: mediaItems => {\n          set(s => {\n            s.shuffledQueue = s.shuffledQueue.filter(\n              item => !mediaItems.find(m => isSameMedia(m, item))\n            );\n            s.originalQueue = s.originalQueue.filter(\n              item => !mediaItems.find(m => isSameMedia(m, item))\n            );\n          });\n          setInLocalStorage('queue', get().originalQueue.slice(0, 15));\n        },\n        isFullscreen: false,\n        enterFullscreen: () => {\n          get().provider?.enterFullscreen();\n        },\n        exitFullscreen: () => {\n          fscreen.exitFullscreen();\n        },\n        destroy: () => {\n          get().provider?.destroy();\n          options?.onDestroy?.();\n          resetMediaSession();\n          listeners.clear();\n          document.removeEventListener('keydown', keybindsHandler);\n        },\n        init: async () => {\n          const mediaToCue = initialData.queue?.find(\n            media => media.id === initialData.cuedMediaId\n          );\n          if (mediaToCue) {\n            await get().cue(mediaToCue);\n          }\n          initPlayerMediaSession(get, options);\n          document.addEventListener('keydown', keybindsHandler);\n        },\n      };\n    })\n  );\n};\n","import {createContext, ReactNode, useState} from 'react';\nimport {StoreApi} from 'zustand';\nimport {createPlayerStore} from '@common/player/player-store';\nimport {PlayerStoreOptions} from '@common/player/player-store-options';\nimport {PlayerState} from '@common/player/player-state';\n\nexport const PlayerStoreContext = createContext<StoreApi<PlayerState>>(null!);\n\ninterface PlayerContextProps {\n  children: ReactNode;\n  id: string | number;\n  options: PlayerStoreOptions;\n}\nexport function PlayerContext({children, id, options}: PlayerContextProps) {\n  //lazily create store object only once\n  const [store] = useState(() => {\n    return createPlayerStore(id, options);\n  });\n\n  return (\n    <PlayerStoreContext.Provider value={store as StoreApi<PlayerState>}>\n      {children}\n    </PlayerStoreContext.Provider>\n  );\n}\n","import {StoreApi, useStore} from 'zustand';\nimport {useContext} from 'react';\nimport {PlayerStoreContext} from '@common/player/player-context';\nimport {PlayerState} from '@common/player/player-state';\n\ntype ExtractState<S> = S extends {\n  getState: () => infer T;\n}\n  ? T\n  : never;\n\ntype UsePlayerStore = {\n  (): ExtractState<StoreApi<PlayerState>>;\n  <U>(\n    selector: (state: ExtractState<StoreApi<PlayerState>>) => U,\n    equalityFn?: (a: U, b: U) => boolean\n  ): U;\n};\n\n// @ts-ignore\nexport const usePlayerStore: UsePlayerStore = (selector, equalityFn) => {\n  const store = useContext(PlayerStoreContext);\n  return useStore(store, selector, equalityFn);\n};\n","import {useContext, useMemo} from 'react';\nimport {PlayerStoreContext} from '@common/player/player-context';\nimport {MediaItem} from '@common/player/media-item';\n\nexport function usePlayerActions() {\n  const store = useContext(PlayerStoreContext);\n\n  return useMemo(() => {\n    const s = store.getState();\n\n    const overrideQueueAndPlay = async (\n      mediaItems: MediaItem[],\n      queuePointer?: number\n    ) => {\n      await s.overrideQueue(mediaItems, queuePointer);\n      return s.play();\n    };\n\n    return {\n      play: s.play,\n      playNext: s.playNext,\n      playPrevious: s.playPrevious,\n      pause: s.pause,\n      subscribe: s.subscribe,\n      getCurrentTime: s.getCurrentTime,\n      seek: s.seek,\n      toggleRepeatMode: s.toggleRepeatMode,\n      toggleShuffling: s.toggleShuffling,\n      getState: store.getState,\n      setVolume: s.setVolume,\n      setMuted: s.setMuted,\n      overrideQueue: s.overrideQueue,\n      appendToQueue: s.appendToQueue,\n      removeFromQueue: s.removeFromQueue,\n      enterFullscreen: s.enterFullscreen,\n      exitFullscreen: s.exitFullscreen,\n      cue: s.cue,\n      overrideQueueAndPlay,\n    };\n  }, [store]);\n}\n","import {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Track} from '@app/web-player/tracks/track';\n\ninterface Response extends BackendResponse {\n  tracks: Track[];\n}\n\nexport async function loadMediaItemTracks(\n  queueId: string,\n  lastTrack?: Track\n): Promise<Response['tracks']> {\n  const query = {\n    queryKey: ['player/tracks', {queueId, trackId: lastTrack?.id}],\n    queryFn: async () => loadTracks(queueId, lastTrack),\n    staleTime: Infinity,\n  };\n\n  try {\n    const response =\n      queryClient.getQueryData<Response>(query.queryKey) ??\n      (await queryClient.fetchQuery(query));\n    return response?.tracks || [];\n  } catch (e) {\n    return [];\n  }\n}\n\nfunction loadTracks(queueId: string, lastTrack?: Track): Promise<Response> {\n  return apiClient\n    .post('player/tracks', {queueId, lastTrack})\n    .then(response => response.data);\n}\n","import {Track} from '@app/web-player/tracks/track';\nimport {MediaItem} from '@common/player/media-item';\nimport {getTrackImageSrc} from '@app/web-player/tracks/track-image/track-image';\nimport {Album} from '@app/web-player/albums/album';\n\nexport function trackToMediaItem(\n  track: Track,\n  queueGroupId?: string\n): MediaItem<Track> {\n  if (track.url) {\n    return {\n      id: track.id,\n      src: track.url,\n      provider: 'htmlVideo',\n      meta: track,\n      image: getTrackImageSrc(track),\n      duration: track.duration ? Math.round(track.duration / 1000) : undefined,\n      groupId: queueGroupId,\n    };\n  }\n\n  return {\n    id: track.id,\n    provider: 'youtube',\n    meta: track,\n    src: track.youtube_id ? track.youtube_id : 'resolve',\n    duration: track.duration ? Math.round(track.duration / 1000) : undefined,\n    groupId: queueGroupId,\n  };\n}\n\nexport function tracksToMediaItems(\n  tracks: Track[],\n  queueGroupId?: string,\n  album?: Album\n) {\n  return tracks.map(track => {\n    if (album && !track.album) {\n      track = {\n        ...track,\n        album: {...album, tracks: undefined},\n      };\n    }\n    return trackToMediaItem(track);\n  });\n}\n","export default \"__VITE_ASSET__11267b4b__\"","export default \"__VITE_ASSET__2dd5a730__\"","import white from './equalizer-white.gif';\nimport black from './equalizer-black.gif';\nimport clsx from 'clsx';\nimport {useIsDarkMode} from '@common/ui/themes/use-is-dark-mode';\n\ninterface EqualizerImageProps {\n  className?: string;\n  color?: 'black' | 'white';\n}\nexport function EqualizerImage({className, color}: EqualizerImageProps) {\n  const isDarkMode = useIsDarkMode();\n\n  if (!color) {\n    color = isDarkMode ? 'white' : 'black';\n  }\n\n  return (\n    <div\n      className={clsx('flex items-center justify-center w-20 h-20', className)}\n    >\n      <img\n        src={color === 'white' ? white : black}\n        alt=\"\"\n        className=\"w-12 h-12\"\n        aria-hidden\n      />\n    </div>\n  );\n}\n","import {ComponentPropsWithoutRef, useState} from 'react';\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {loadMediaItemTracks} from '@app/web-player/requests/load-media-item-tracks';\nimport {trackToMediaItem} from '@app/web-player/tracks/utils/track-to-media-item';\nimport {PauseIcon} from '@common/icons/material/Pause';\nimport {EqualizerImage} from '@app/web-player/tracks/equalizer-image/equalizer-image';\nimport {PlayArrowFilledIcon} from '@app/web-player/tracks/play-arrow-filled';\nimport {\n  ButtonColor,\n  ButtonVariant,\n} from '@common/ui/buttons/get-shared-button-style';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {Track} from '@app/web-player/tracks/track';\n\ninterface PlaybackToggleButtonProps {\n  queueId?: string;\n  // track that should be cued\n  track?: Track;\n  // queue should be overwritten with these tracks\n  tracks?: Track[];\n  radius?: string;\n  variant?: ButtonVariant;\n  color?: ButtonColor;\n  disabled?: boolean;\n  className?: string;\n  buttonType: 'icon' | 'text';\n  equalizerColor?: 'white' | 'black';\n}\nexport function PlaybackToggleButton({\n  queueId,\n  track,\n  tracks,\n  radius,\n  variant,\n  color,\n  disabled,\n  className,\n  buttonType,\n  equalizerColor = buttonType === 'text' ? 'white' : 'black',\n}: PlaybackToggleButtonProps) {\n  const [isHover, setIsHover] = useState(false);\n  const modelIsQueued = usePlayerStore(s => {\n    // specified queue ID is cued\n    if (s.cuedMedia && queueId && s.cuedMedia.groupId === queueId) {\n      return true;\n    }\n    // specified track is cued\n    if (s.cuedMedia && track && s.cuedMedia.meta.id === track.id) {\n      return true;\n    }\n    return false;\n  });\n  const isPlaying = usePlayerStore(s => s.status === 'playing');\n  const modelIsPlaying = isPlaying && modelIsQueued;\n  const player = usePlayerActions();\n\n  const statusIcon = modelIsPlaying ? (\n    isHover ? (\n      <PauseIcon />\n    ) : (\n      <EqualizerImage color={equalizerColor} />\n    )\n  ) : (\n    <PlayArrowFilledIcon />\n  );\n\n  const sharedProps: ComponentPropsWithoutRef<'button'> = {\n    disabled,\n    onPointerEnter: () => {\n      setIsHover(true);\n    },\n    onPointerLeave: () => {\n      setIsHover(false);\n    },\n    onClick: async () => {\n      if (modelIsPlaying) {\n        player.pause();\n      } else if (modelIsQueued) {\n        await player.play();\n      } else {\n        let newQueue: Track[] = [];\n        let newIndex: number = 0;\n        if (tracks) {\n          newQueue = [...tracks];\n          newIndex = track ? tracks.findIndex(t => t.id === track.id) : 0;\n        } else if (track) {\n          newQueue = [track];\n        } else {\n          newQueue = await loadMediaItemTracks(queueId!);\n        }\n        if (newQueue.length) {\n          await player.overrideQueueAndPlay(\n            newQueue.map(t => trackToMediaItem(t, queueId)),\n            newIndex\n          );\n        }\n      }\n    },\n  };\n\n  if (buttonType === 'icon') {\n    return (\n      <IconButton\n        {...sharedProps}\n        variant={variant}\n        color={color}\n        radius={radius}\n        className={className}\n      >\n        {statusIcon}\n      </IconButton>\n    );\n  }\n\n  return (\n    <Button\n      {...sharedProps}\n      variant={variant || 'flat'}\n      color={color || 'primary'}\n      radius={radius || 'rounded-full'}\n      startIcon={statusIcon}\n      className={className}\n    >\n      {modelIsPlaying ? <Trans message=\"Pause\" /> : <Trans message=\"Play\" />}\n    </Button>\n  );\n}\n","interface MediaItem {\n  id: number;\n  model_type: string;\n}\n\nexport function queueGroupId(\n  model: MediaItem,\n  kind: string = '*',\n  sortDescriptor?: {orderBy?: string; orderDir?: string}\n): string {\n  let base = `${model.model_type}.${model.id}.${kind}`;\n  if (sortDescriptor?.orderBy && sortDescriptor?.orderDir) {\n    base += `.${sortDescriptor.orderBy.replace('.', '^')}|${\n      sortDescriptor.orderDir\n    }`;\n  }\n  return base;\n}\n","import {cloneElement, ReactElement, ReactNode} from 'react';\nimport {IconButton, IconButtonProps} from '@common/ui/buttons/icon-button';\nimport {MoreHorizIcon} from '@common/icons/material/MoreHoriz';\nimport {PlayableModel} from '@app/web-player/playable-item/playable-model';\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {queueGroupId} from '@app/web-player/queue-group-id';\nimport clsx from 'clsx';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {Track, TRACK_MODEL} from '@app/web-player/tracks/track';\n\ninterface PlayableGridProps {\n  image: ReactElement;\n  title: ReactNode;\n  subtitle?: ReactNode;\n  model: PlayableModel;\n  newQueue?: Track[];\n  link: string;\n  likeButton?: ReactElement<IconButtonProps>;\n  contextDialog: ReactElement;\n  radius?: string;\n}\nexport function PlayableGridItem({\n  image,\n  title,\n  subtitle,\n  model,\n  newQueue,\n  link,\n  likeButton,\n  contextDialog,\n  radius = 'rounded',\n}: PlayableGridProps) {\n  const navigate = useNavigate();\n  return (\n    <div className=\"snap-start snap-normal\">\n      <DialogTrigger\n        type=\"popover\"\n        placement=\"bottom-start\"\n        triggerOnContextMenu\n      >\n        <div className=\"w-full relative isolate group\">\n          <div className=\"w-full aspect-square\" onClick={() => navigate(link)}>\n            {cloneElement(image, {\n              size: 'w-full h-full',\n              className: `${radius} shadow-md z-10`,\n            })}\n          </div>\n          <div\n            key=\"bg-overlay\"\n            className={`absolute top-0 left-0 w-full h-full bg-gradient-to-b from-transparent to-black/75 ${radius} z-20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none`}\n          />\n          <div\n            className={clsx(\n              'absolute bottom-0 left-0 w-full p-12 z-30 flex items-center gap-14',\n              radius === 'rounded-full' && 'justify-center'\n            )}\n          >\n            <PlaybackToggleButton\n              radius=\"rounded-full\"\n              className={clsx(\n                'shadow-md',\n                radius === 'rounded-full' && 'invisible group-hover:visible'\n              )}\n              variant=\"flat\"\n              color=\"white\"\n              buttonType=\"icon\"\n              track={model.model_type === TRACK_MODEL ? model : undefined}\n              tracks={newQueue}\n              queueId={queueGroupId(model)}\n            />\n\n            <DialogTrigger type=\"popover\">\n              <IconButton\n                className=\"invisible md:group-hover:visible\"\n                color=\"white\"\n              >\n                <MoreHorizIcon />\n              </IconButton>\n              {contextDialog}\n            </DialogTrigger>\n            {radius !== 'rounded-full' &&\n              likeButton &&\n              // 3 buttons won't fit if item is fully rounded\n              cloneElement(likeButton, {\n                className: 'invisible md:group-hover:visible ml-auto',\n                size: 'md',\n                color: 'white',\n              })}\n          </div>\n        </div>\n        {contextDialog}\n      </DialogTrigger>\n      <div\n        className={clsx(\n          radius === 'rounded-full' && 'text-center',\n          'text-sm mt-12'\n        )}\n      >\n        <div className=\"overflow-hidden overflow-ellipsis\">{title}</div>\n        <div className=\"text-muted mt-4 whitespace-nowrap overflow-hidden overflow-ellipsis\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Playlist} from '@app/web-player/playlists/playlist';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {useAuth} from '@common/auth/use-auth';\n\ninterface GetAuthUserPlaylistsResponse extends BackendResponse {\n  playlists: Playlist[];\n}\n\nexport function useAuthUserPlaylists() {\n  const {isLoggedIn, user} = useAuth();\n  return useQuery(\n    ['playlists', 'library', user?.id, 'compact'],\n    () => fetchPlaylists(),\n    {\n      enabled: isLoggedIn,\n      initialData: () => {\n        return {\n          playlists: getBootstrapData().playlists || [],\n        };\n      },\n    }\n  );\n}\n\nfunction fetchPlaylists(): Promise<GetAuthUserPlaylistsResponse> {\n  return apiClient\n    .get('users/me/playlists', {\n      params: {perPage: 30, orderBy: 'updated_at', orderDir: 'desc'},\n    })\n    .then(response => {\n      return {playlists: response.data.pagination.data};\n    });\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Playlist} from '@app/web-player/playlists/playlist';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {Track} from '@app/web-player/tracks/track';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  playlist: Playlist;\n}\n\ninterface Payload {\n  playlistId: number;\n  tracks: Track[];\n}\n\nexport function useAddTracksToPlaylist() {\n  return useMutation((payload: Payload) => addTracks(payload), {\n    onSuccess: (response, {tracks}) => {\n      toast(\n        message('Added [one 1 track|other :count tracks] to playlist', {\n          values: {count: tracks.length},\n        })\n      );\n      queryClient.invalidateQueries(['playlists', response.playlist.id]);\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction addTracks(payload: Payload): Promise<Response> {\n  const backendPayload = {\n    ids: payload.tracks.map(track => track.id),\n  };\n  return apiClient\n    .post(`playlists/${payload.playlistId}/tracks/add`, backendPayload)\n    .then(r => r.data);\n}\n","import create from 'zustand';\nimport {immer} from 'zustand/middleware/immer';\nimport React, {JSXElementConstructor} from 'react';\n\ninterface GlobalDialogState<\n  C extends JSXElementConstructor<unknown> = JSXElementConstructor<any>,\n  D = React.ComponentProps<C>\n> {\n  dialog: C | null;\n  data: D;\n  openDialog: (dialog: C, data?: D) => Promise<any>;\n  closeActiveDialog: (value: any) => void;\n  resolveClosePromise: null | ((value: any) => void);\n}\n\nexport const useGlobalDialogStore = create<GlobalDialogState>()(\n  immer((set, get) => ({\n    dialog: null,\n    data: undefined,\n    resolveClosePromise: null,\n    openDialog: (dialog, data) => {\n      return new Promise(resolve => {\n        set(state => {\n          state.dialog = dialog;\n          state.data = data;\n          state.resolveClosePromise = resolve;\n        });\n      });\n    },\n    closeActiveDialog: value => {\n      get().resolveClosePromise?.(value);\n      set(state => {\n        state.dialog = null;\n        state.data = undefined;\n        state.resolveClosePromise = null;\n      });\n    },\n  }))\n);\n\nexport const openGlobalDialog = useGlobalDialogStore.getState().openDialog;\nexport const closeGlobalDialog = (value: any) => {\n  useGlobalDialogStore.getState().closeActiveDialog(value);\n};\n","import {MouseEvent, useCallback} from 'react';\nimport {useAuth} from '@common/auth/use-auth';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\n\nexport function useAuthClickCapture() {\n  const dialogContext = useDialogContext();\n  const {isLoggedIn} = useAuth();\n  const navigate = useNavigate();\n\n  return useCallback(\n    (e: MouseEvent) => {\n      if (!isLoggedIn) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (dialogContext) {\n          dialogContext.close();\n        }\n\n        navigate('/login');\n      }\n    },\n    [navigate, isLoggedIn, dialogContext]\n  );\n}\n","import {useAuthUserPlaylists} from '@app/web-player/playlists/requests/use-auth-user-playlists';\nimport {m} from 'framer-motion';\nimport {Button} from '@common/ui/buttons/button';\nimport {KeyboardBackspaceIcon} from '@common/icons/material/KeyboardBackspace';\nimport {Trans} from '@common/i18n/trans';\nimport {\n  ContextMenuButton,\n  ContextMenuLayoutState,\n} from '@app/web-player/context-dialog/context-dialog-layout';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {KeyboardArrowRightIcon} from '@common/icons/material/KeyboardArrowRight';\nimport {useContext, useMemo} from 'react';\nimport {useAddTracksToPlaylist} from '@app/web-player/playlists/requests/use-add-tracks-to-playlist';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {openGlobalDialog} from '@app/web-player/state/global-dialog-store';\nimport {CreatePlaylistDialog} from '@app/web-player/playlists/crupdate-dialog/create-playlist-dialog';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {useAuth} from '@common/auth/use-auth';\nimport {useAuthClickCapture} from '@app/web-player/use-auth-click-capture';\n\nexport function PlaylistPanel() {\n  const {data} = useAuthUserPlaylists();\n  const {user} = useAuth();\n  const {close: closeMenu} = useDialogContext();\n  const {loadTracks, setPlaylistPanelIsActive} = useContext(\n    ContextMenuLayoutState\n  );\n  const addToPlaylist = useAddTracksToPlaylist();\n\n  // only show playlists user created or ones that are collaborative\n  const playlists = useMemo(() => {\n    return data.playlists.filter(\n      p => p.owner_id === user?.id || p.collaborative\n    );\n  }, [data, user]);\n\n  return (\n    <m.div\n      initial={{x: '100%', opacity: 0}}\n      animate={{x: 0, opacity: 1}}\n      exit={{x: '-100%', opacity: 0}}\n      transition={{type: 'tween', duration: 0.14}}\n    >\n      <div className=\"border-b pb-10 my-10 px-10\">\n        <Button\n          startIcon={<KeyboardBackspaceIcon />}\n          onClick={() => setPlaylistPanelIsActive(false)}\n        >\n          <Trans message=\"Back\" />\n        </Button>\n      </div>\n      <ul className=\"overflow-y-auto overflow-x-hidden max-h-350\">\n        <ContextMenuButton\n          startIcon={<AddIcon />}\n          onClick={async () => {\n            closeMenu();\n            const [playlist, tracks] = await Promise.all([\n              openGlobalDialog(CreatePlaylistDialog),\n              loadTracks(),\n            ]);\n            if (tracks.length && playlist) {\n              addToPlaylist.mutate({\n                playlistId: playlist.id,\n                tracks,\n              });\n            }\n          }}\n          className=\"text-primary\"\n        >\n          <Trans message=\"New playlist\" />\n        </ContextMenuButton>\n        {playlists.map(playlist => (\n          <ContextMenuButton\n            key={playlist.id}\n            onClick={async () => {\n              closeMenu();\n              const tracks = await loadTracks();\n              if (tracks?.length && !addToPlaylist.isLoading) {\n                addToPlaylist.mutate({\n                  playlistId: playlist.id,\n                  tracks,\n                });\n              } else {\n                toast(message('This item does not have tracks yet'));\n              }\n            }}\n          >\n            {playlist.name}\n          </ContextMenuButton>\n        ))}\n      </ul>\n    </m.div>\n  );\n}\n\nexport function PlaylistPanelButton() {\n  const authHandler = useAuthClickCapture();\n  const {playlistPanelIsActive, setPlaylistPanelIsActive} = useContext(\n    ContextMenuLayoutState\n  );\n  return (\n    <ContextMenuButton\n      endIcon={<KeyboardArrowRightIcon />}\n      onClickCapture={authHandler}\n      onClick={() => {\n        setPlaylistPanelIsActive(!playlistPanelIsActive);\n      }}\n    >\n      <Trans message=\"Add to playlist\" />\n    </ContextMenuButton>\n  );\n}\n","import {AnimatePresence} from 'framer-motion';\nimport {\n  cloneElement,\n  ComponentPropsWithRef,\n  createContext,\n  forwardRef,\n  ReactElement,\n  ReactNode,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {SvgIconProps} from '@common/icons/svg-icon';\nimport clsx from 'clsx';\nimport {PlaylistPanel} from '@app/web-player/context-dialog/playlist-panel';\nimport {Track} from '@app/web-player/tracks/track';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Link, To, useLocation} from 'react-router-dom';\nimport {usePrevious} from '@common/utils/hooks/use-previous';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\n\ninterface ContextMenuLayoutStateValue {\n  playlistPanelIsActive: boolean;\n  setPlaylistPanelIsActive: (value: boolean) => void;\n  loadTracks: () => Promise<Track[]>;\n}\nexport const ContextMenuLayoutState =\n  createContext<ContextMenuLayoutStateValue>(null!);\n\nexport interface ContextMenuLayoutProps {\n  image?: ReactElement<{className: string}> | null;\n  title?: ReactElement | null;\n  description?: ReactElement;\n  children: ReactNode;\n  loadTracks: () => Promise<Track[]>;\n}\nexport function ContextDialogLayout({\n  image,\n  title,\n  description,\n  children,\n  loadTracks,\n}: ContextMenuLayoutProps) {\n  const [playlistPanelIsActive, setPlaylistPanelIsActive] = useState(false);\n  const {close} = useDialogContext();\n  const contextValue: ContextMenuLayoutStateValue = useMemo(() => {\n    return {\n      playlistPanelIsActive,\n      setPlaylistPanelIsActive,\n      loadTracks,\n    };\n  }, [playlistPanelIsActive, loadTracks]);\n\n  const {pathname} = useLocation();\n\n  // close dialog on route change\n  const previousPathname = usePrevious(pathname);\n  useEffect(() => {\n    if (previousPathname && previousPathname !== pathname) {\n      close();\n    }\n  }, [pathname, previousPathname, close]);\n\n  const header =\n    image || title ? (\n      <div className=\"flex items-center gap-14 border-b p-14 mb-10\">\n        {image && cloneElement(image, {className: 'w-44 h-44 rounded'})}\n        <div className=\"whitespace-nowrap overflow-hidden overflow-ellipsis\">\n          {title}\n          {description && (\n            <div className=\"text-xs text-muted\">{description}</div>\n          )}\n        </div>\n      </div>\n    ) : null;\n\n  return (\n    <ContextMenuLayoutState.Provider value={contextValue}>\n      <Dialog size=\"xs\">\n        <DialogBody\n          padding=\"p-0\"\n          onContextMenu={e => {\n            e.preventDefault();\n            e.stopPropagation();\n          }}\n        >\n          <div className=\"pb-10\">\n            {header}\n            <AnimatePresence initial={false} mode=\"wait\">\n              {playlistPanelIsActive ? (\n                <PlaylistPanel key=\"playlist-panel\" />\n              ) : (\n                <ul key=\"menu\" className=\"text-base md:text-sm\">\n                  {children}\n                </ul>\n              )}\n            </AnimatePresence>\n          </div>\n        </DialogBody>\n      </Dialog>\n    </ContextMenuLayoutState.Provider>\n  );\n}\n\ninterface ButtonMenuItemProps\n  extends Omit<ComponentPropsWithRef<'button'>, 'type'> {\n  type?: 'button';\n}\n\ninterface LinkMenuItemProps\n  extends Omit<ComponentPropsWithRef<'link'>, 'type'> {\n  type?: 'link';\n}\n\ntype ContextMenuListItemProps = (ButtonMenuItemProps | LinkMenuItemProps) & {\n  children: ReactNode;\n  endIcon?: ReactElement<SvgIconProps>;\n  startIcon?: ReactElement<SvgIconProps>;\n  className?: string;\n  to?: To;\n};\nexport const ContextMenuButton = forwardRef<any, ContextMenuListItemProps>(\n  (\n    {\n      children,\n      endIcon,\n      startIcon,\n      className,\n      type = 'button',\n      to,\n      ...buttonProps\n    },\n    ref\n  ) => {\n    const Element = type === 'button' ? 'button' : Link;\n    return (\n      <li>\n        <Element\n          {...(buttonProps as any)}\n          to={to as any}\n          ref={ref}\n          className={clsx(\n            'flex items-center gap-12 py-12 px-20 hover:bg-hover cursor-pointer outline-none focus-visible:ring focus-visible:ring-inset w-full text-left',\n            className\n          )}\n        >\n          {startIcon}\n          <span className=\"mr-auto whitespace-nowrap overflow-hidden overflow-ellipsis min-w-0\">\n            {children}\n          </span>\n          {endIcon}\n        </Element>\n      </li>\n    );\n  }\n);\n","import create from 'zustand';\nimport {immer} from 'zustand/middleware/immer';\nimport {TRACK_MODEL} from '@app/web-player/tracks/track';\nimport {ALBUM_MODEL} from '@app/web-player/albums/album';\nimport {ARTIST_MODEL} from '@app/web-player/artists/artist';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {Likeable} from '@app/web-player/library/likeable';\n\ninterface State {\n  [TRACK_MODEL]: Record<number, boolean>;\n  [ALBUM_MODEL]: Record<number, boolean>;\n  [ARTIST_MODEL]: Record<number, boolean>;\n  has: (item: Likeable | Likeable[]) => boolean;\n  add: (items: Likeable[]) => void;\n  remove: (items: Likeable[]) => void;\n}\n\nexport function createCountableStore(key: 'likes' | 'reposts') {\n  const items = getBootstrapData()[key];\n  return create<State>()(\n    immer((set, get) => ({\n      track: items?.track || {},\n      album: items?.album || {},\n      artist: (items && 'artist' in items && items?.artist) || {},\n      has: item => {\n        const items = Array.isArray(item) ? item : [item];\n        return items.every(item => {\n          return get()[item.model_type][item.id];\n        });\n      },\n      add: items => {\n        // will only be adding items with the same\n        // type in one call, no need to group by type\n        const type = items[0].model_type;\n        set(state => {\n          items.forEach(item => {\n            state[type][item.id] = true;\n          });\n        });\n      },\n      remove: items => {\n        const type = items[0].model_type;\n        set(state => {\n          items.forEach(item => {\n            delete state[type][item.id];\n          });\n        });\n      },\n    }))\n  );\n}\n","import {createCountableStore} from '@app/web-player/library/state/create-countable-store';\n\nexport const useLibraryStore = createCountableStore('likes');\n\nexport const userLibrary = useLibraryStore.getState;\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {Likeable} from '@app/web-player/library/likeable';\nimport {userLibrary} from '@app/web-player/library/state/likes-store';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  likeables: Likeable[];\n}\n\nexport function useAddItemsToLibrary() {\n  return useMutation((payload: Payload) => addToLibrary(payload), {\n    onSuccess: (response, payload) => {\n      toast(getMessage(payload.likeables[0]));\n      userLibrary().add(payload.likeables);\n      // tracks/albums/artists\n      queryClient.invalidateQueries([`${payload.likeables[0]}s`, 'library']);\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction addToLibrary(payload: Payload): Promise<Response> {\n  const likeables = payload.likeables\n    .filter(likeable => {\n      return !userLibrary().has(likeable);\n    })\n    .map(likeable => {\n      return {\n        likeable_id: likeable.id,\n        likeable_type: likeable.model_type,\n      };\n    });\n  return apiClient\n    .post('users/me/add-to-library', {likeables})\n    .then(r => r.data);\n}\n\nfunction getMessage(likeable: Likeable) {\n  switch (likeable.model_type) {\n    case 'artist':\n      return message('Added to your artists');\n    case 'album':\n      return message('Added to your albums');\n    case 'track':\n      return message('Added to your liked songs');\n  }\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {Likeable} from '@app/web-player/library/likeable';\nimport {userLibrary} from '@app/web-player/library/state/likes-store';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  likeables: Likeable[];\n}\n\nexport function useRemoveItemsFromLibrary() {\n  return useMutation((payload: Payload) => addToLibrary(payload), {\n    onSuccess: (response, payload) => {\n      toast(getMessage(payload.likeables[0]));\n      userLibrary().remove(payload.likeables);\n      // tracks/albums/artists\n      queryClient.invalidateQueries([`${payload.likeables[0]}s`, 'library']);\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction addToLibrary(payload: Payload): Promise<Response> {\n  const likeables = payload.likeables\n    .filter(likeable => {\n      return userLibrary().has(likeable);\n    })\n    .map(likeable => {\n      return {\n        likeable_id: likeable.id,\n        likeable_type: likeable.model_type,\n      };\n    });\n  return apiClient\n    .post('users/me/remove-from-library', {likeables})\n    .then(r => r.data);\n}\n\nfunction getMessage(likeable: Likeable) {\n  switch (likeable.model_type) {\n    case 'artist':\n      return message('Removed from your artists');\n    case 'album':\n      return message('Removed from your albums');\n    case 'track':\n      return message('Removed from your liked songs');\n  }\n}\n","import {ContextMenuButton} from '@app/web-player/context-dialog/context-dialog-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {useAddItemsToLibrary} from '@app/web-player/library/requests/use-add-items-to-library';\nimport {useRemoveItemsFromLibrary} from '@app/web-player/library/requests/use-remove-items-from-library';\nimport {useLibraryStore} from '@app/web-player/library/state/likes-store';\nimport {Likeable} from '@app/web-player/library/likeable';\nimport {useAuthClickCapture} from '@app/web-player/use-auth-click-capture';\n\ninterface ToggleInLibraryMenuButtonProps {\n  items: Likeable[];\n}\nexport function ToggleInLibraryMenuButton({\n  items,\n}: ToggleInLibraryMenuButtonProps) {\n  const authHandler = useAuthClickCapture();\n  const {close: closeMenu} = useDialogContext();\n  const addToLibrary = useAddItemsToLibrary();\n  const removeFromLibrary = useRemoveItemsFromLibrary();\n  const allInLibrary = useLibraryStore(s => s.has(items));\n\n  if (allInLibrary) {\n    return (\n      <ContextMenuButton\n        onClickCapture={authHandler}\n        onClick={() => {\n          closeMenu();\n          removeFromLibrary.mutate({likeables: items});\n        }}\n      >\n        <Trans message=\"Remove from your music\" />\n      </ContextMenuButton>\n    );\n  }\n\n  return (\n    <ContextMenuButton\n      onClickCapture={authHandler}\n      onClick={() => {\n        closeMenu();\n        addToLibrary.mutate({likeables: items});\n      }}\n    >\n      <Trans message=\"Add to your music\" />\n    </ContextMenuButton>\n  );\n}\n","import useCopyClipboard from 'react-use-clipboard';\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\nimport {ReactNode} from 'react';\nimport {ContextMenuButton} from '@app/web-player/context-dialog/context-dialog-layout';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {Trans} from '@common/i18n/trans';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\n\ninterface CopyLinkMenuButtonProps {\n  link: string;\n  children: ReactNode;\n}\nexport function CopyLinkMenuButton({link, children}: CopyLinkMenuButtonProps) {\n  const {close: closeMenu} = useDialogContext();\n  const [, copyLink] = useCopyClipboard(link);\n\n  return (\n    <ContextMenuButton\n      onClick={() => {\n        copyLink();\n        closeMenu();\n        toast(message('Copied link to clipboard'));\n      }}\n    >\n      {children}\n    </ContextMenuButton>\n  );\n}\n","import {useMemo} from 'react';\nimport {useAuth} from '@common/auth/use-auth';\nimport {Artist} from '@app/web-player/artists/artist';\n\nexport function useArtistPermissions(artist: Artist) {\n  const {user, hasPermission} = useAuth();\n  return useMemo(() => {\n    const permissions = {\n      canEdit: false,\n      canDelete: false,\n    };\n    if (user?.id) {\n      const managesAlbum = !!user.artists?.find(a => artist.id);\n\n      permissions.canEdit =\n        hasPermission('artists.update') ||\n        hasPermission('music.update') ||\n        managesAlbum;\n\n      permissions.canDelete =\n        hasPermission('artists.delete') ||\n        hasPermission('music.delete') ||\n        managesAlbum;\n    }\n    return permissions;\n  }, [user, artist, hasPermission]);\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {useLocation} from 'react-router-dom';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useAuth} from '@common/auth/use-auth';\n\ninterface Response extends BackendResponse {}\n\nexport function useDeleteArtist(artistId: number | string) {\n  const {pathname} = useLocation();\n  const navigate = useNavigate();\n  const {getRedirectUri} = useAuth();\n\n  return useMutation(() => deleteArtist(artistId), {\n    onSuccess: () => {\n      toast(message('Artist deleted'));\n      // navigate to homepage if we are on this artist page currently\n      if (pathname.startsWith(`/artist/${artistId}`)) {\n        navigate(getRedirectUri());\n      }\n      queryClient.invalidateQueries(['tracks']);\n      queryClient.invalidateQueries(['albums']);\n      queryClient.invalidateQueries(['artists']);\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction deleteArtist(artistId: number | string): Promise<Response> {\n  return apiClient.delete(`artists/${artistId}`).then(r => r.data);\n}\n","import {slugifyString} from '@common/utils/string/slugify-string';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {RadioSeed} from '@app/web-player/radio/requests/use-radio-recommendations';\n\nexport function getRadioLink(\n  seed: RadioSeed,\n  {absolute}: {absolute?: boolean} = {}\n): string {\n  let link = `/radio/${seed.model_type}/${seed.id}/${slugifyString(seed.name)}`;\n  if (absolute) {\n    link = `${getBootstrapData().settings.base_url}${link}`;\n  }\n  return link;\n}\n","import {useSettings} from '@common/core/settings/use-settings';\n\nexport function useShouldShowRadioButton(): boolean {\n  const {player, artist_provider} = useSettings();\n  return !player?.hide_radio_button && artist_provider === 'spotify';\n}\n","import {Artist} from '@app/web-player/artists/artist';\nimport {Album} from '@app/web-player/albums/album';\nimport {Track} from '@app/web-player/tracks/track';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Tabs} from '@common/ui/tabs/tabs';\nimport {TabList} from '@common/ui/tabs/tab-list';\nimport {Tab} from '@common/ui/tabs/tab';\nimport {TabPanel, TabPanels} from '@common/ui/tabs/tab-panels';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {getArtistLink} from '@app/web-player/artists/artist-link';\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\nimport {getTrackLink} from '@app/web-player/tracks/track-link';\nimport {Button} from '@common/ui/buttons/button';\nimport {useRef} from 'react';\nimport useCopyClipboard from 'react-use-clipboard';\nimport {ShareMediaButtons} from '@app/web-player/sharing/share-media-buttons';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\n\ninterface Props {\n  item: Artist | Album | Track;\n}\nexport function ShareMediaDialog({item}: Props) {\n  const {close} = useDialogContext();\n  return (\n    <Dialog size=\"xl\">\n      <DialogHeader>\n        <Trans message=\"Share :name\" values={{name: item.name}} />\n      </DialogHeader>\n      <DialogBody>\n        {item.model_type === 'artist' ? (\n          <SharePanel item={item} />\n        ) : (\n          <Tabs>\n            <TabList>\n              <Tab>\n                <Trans message=\"Share\" />\n              </Tab>\n              <Tab>\n                <Trans message=\"Embed\" />\n              </Tab>\n            </TabList>\n            <TabPanels className=\"pt-20\">\n              <TabPanel>\n                <SharePanel item={item} />\n              </TabPanel>\n              <TabPanel>\n                <EmbedPanel item={item} />\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        )}\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Close\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n\nfunction EmbedPanel({item}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n  const link = `${getLink(item)}/embed`;\n  const height = item.model_type === 'track' ? 174 : 384;\n\n  const code = `<iframe width=\"100%\" height=\"${height}\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" src=\"${link}\"></iframe>`;\n\n  return (\n    <div>\n      {!isMobile && (\n        <iframe\n          src={link}\n          width=\"100%\"\n          height={height}\n          allow=\"autoplay; fullscreen; picture-in-picture\"\n          allowFullScreen\n        />\n      )}\n      <TextField\n        className=\"mt-20\"\n        inputElementType=\"textarea\"\n        readOnly\n        value={code}\n        rows={3}\n        onClick={e => {\n          e.currentTarget.focus();\n          e.currentTarget.select();\n        }}\n      />\n    </div>\n  );\n}\n\nfunction SharePanel({item}: Props) {\n  const link = getLink(item);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [copied, copyLink] = useCopyClipboard(link, {successDuration: 600});\n  return (\n    <div className=\"flex items-center gap-14\">\n      <MediaImage\n        item={item}\n        size=\"w-128 h-128\"\n        className=\"rounded object-cover flex-shrink-0 hidden md:block\"\n      />\n      <div className=\"flex-auto\">\n        <div className=\"text-xl mb-8\">{item.name}</div>\n        <TextField\n          className=\"mb-8\"\n          inputRef={inputRef}\n          readOnly\n          onClick={e => {\n            e.currentTarget.focus();\n            e.currentTarget.select();\n          }}\n          value={link}\n          endAppend={\n            <Button\n              variant=\"flat\"\n              color=\"primary\"\n              onClick={() => {\n                inputRef.current?.select();\n                copyLink();\n              }}\n            >\n              {copied ? <Trans message=\"Copied!\" /> : <Trans message=\"Copy\" />}\n            </Button>\n          }\n        />\n        <ShareMediaButtons\n          link={link}\n          image={'image' in item ? item.image : (item as any).image_small}\n          name={item.name}\n        />\n      </div>\n    </div>\n  );\n}\n\ninterface MediaImageProps {\n  item: Props['item'];\n  className?: string;\n  size?: string;\n}\nfunction MediaImage({item, className, size}: MediaImageProps) {\n  switch (item.model_type) {\n    case 'artist':\n      return (\n        <SmallArtistImage size={size} className={className} artist={item} />\n      );\n    case 'album':\n      return <AlbumImage size={size} className={className} album={item} />;\n    case 'track':\n      return <TrackImage size={size} className={className} track={item} />;\n  }\n}\n\nfunction getLink(item: Props['item']) {\n  switch (item.model_type) {\n    case 'artist':\n      return getArtistLink(item, {absolute: true});\n    case 'album':\n      return getAlbumLink(item, {absolute: true});\n    case 'track':\n      return getTrackLink(item, {absolute: true});\n  }\n}\n","import {ContextMenuButton} from '@app/web-player/context-dialog/context-dialog-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Track} from '@app/web-player/tracks/track';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {Album} from '@app/web-player/albums/album';\nimport {openGlobalDialog} from '@app/web-player/state/global-dialog-store';\nimport React from 'react';\nimport {ShareMediaDialog} from '@app/web-player/sharing/share-media-dialog';\n\ninterface Props {\n  item: Track | Album | Artist;\n}\nexport function ShareMediaButton({item}: Props) {\n  const {close: closeMenu} = useDialogContext();\n  return (\n    <ContextMenuButton\n      onClick={() => {\n        closeMenu();\n        openGlobalDialog(ShareMediaDialog, {\n          item,\n        });\n      }}\n    >\n      <Trans message=\"Share\" />\n    </ContextMenuButton>\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport {Track} from '@app/web-player/tracks/track';\nimport {\n  ContextDialogLayout,\n  ContextMenuButton,\n} from '@app/web-player/context-dialog/context-dialog-layout';\nimport React, {useCallback} from 'react';\nimport {ToggleInLibraryMenuButton} from '@app/web-player/context-dialog/toggle-in-library-menu-button';\nimport {CopyLinkMenuButton} from '@app/web-player/context-dialog/copy-link-menu-button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {openGlobalDialog} from '@app/web-player/state/global-dialog-store';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {useArtistPermissions} from '@app/web-player/artists/use-artist-permissions';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {ArtistLink, getArtistLink} from '@app/web-player/artists/artist-link';\nimport {useDeleteArtist} from '@app/web-player/artists/requests/use-delete-artist';\nimport {getRadioLink} from '@app/web-player/radio/get-radio-link';\nimport {useShouldShowRadioButton} from '@app/web-player/tracks/context-dialog/use-should-show-radio-button';\nimport {ShareMediaButton} from '@app/web-player/context-dialog/share-media-button';\n\ninterface ArtistContextDialogProps {\n  artist: Artist;\n}\nexport function ArtistContextDialog({artist}: ArtistContextDialogProps) {\n  const showRadioButton = useShouldShowRadioButton();\n  const {canEdit} = useArtistPermissions(artist);\n  const loadTracks = useCallback(() => {\n    return loadArtistTracks(artist);\n  }, [artist]);\n\n  return (\n    <ContextDialogLayout\n      image={<SmallArtistImage artist={artist} />}\n      title={<ArtistLink artist={artist} />}\n      loadTracks={loadTracks}\n    >\n      <ToggleInLibraryMenuButton items={[artist]} />\n      {showRadioButton && (\n        <ContextMenuButton type=\"link\" to={getRadioLink(artist)}>\n          <Trans message=\"Go to artist radio\" />\n        </ContextMenuButton>\n      )}\n      <CopyLinkMenuButton link={getArtistLink(artist, {absolute: true})}>\n        <Trans message=\"Copy artist link\" />\n      </CopyLinkMenuButton>\n      <ShareMediaButton item={artist} />\n      {canEdit && (\n        <ContextMenuButton\n          type=\"link\"\n          to={`/backstage/artists/${artist.id}/insights`}\n        >\n          <Trans message=\"Insights\" />\n        </ContextMenuButton>\n      )}\n      {canEdit && (\n        <ContextMenuButton\n          type=\"link\"\n          to={`/backstage/artists/${artist.id}/edit`}\n        >\n          <Trans message=\"Edit\" />\n        </ContextMenuButton>\n      )}\n      <DeleteButton artist={artist} />\n    </ContextDialogLayout>\n  );\n}\n\nfunction DeleteButton({artist}: ArtistContextDialogProps) {\n  const {close: closeMenu} = useDialogContext();\n  const deleteArtist = useDeleteArtist(artist.id);\n  const {canDelete} = useArtistPermissions(artist);\n\n  if (!canDelete) {\n    return null;\n  }\n\n  return (\n    <ContextMenuButton\n      disabled={deleteArtist.isLoading}\n      onClick={() => {\n        closeMenu();\n        openGlobalDialog(ConfirmationDialog, {\n          isDanger: true,\n          title: <Trans message=\"Delete artist\" />,\n          body: (\n            <Trans message=\"Are you sure you want to delete this artist?\" />\n          ),\n          confirm: <Trans message=\"Delete\" />,\n          onConfirm: () => {\n            deleteArtist.mutate();\n          },\n        });\n      }}\n    >\n      <Trans message=\"Delete\" />\n    </ContextMenuButton>\n  );\n}\n\n// tracks are never used/loaded in artist context dialog\nasync function loadArtistTracks(artist: Artist): Promise<Track[]> {\n  return Promise.resolve([]);\n}\n","import {useAddItemsToLibrary} from '@app/web-player/library/requests/use-add-items-to-library';\nimport {useRemoveItemsFromLibrary} from '@app/web-player/library/requests/use-remove-items-from-library';\nimport {useLibraryStore} from '@app/web-player/library/state/likes-store';\nimport {Likeable} from '@app/web-player/library/likeable';\nimport {IconButton, IconButtonProps} from '@common/ui/buttons/icon-button';\nimport {FavoriteIcon} from '@common/icons/material/Favorite';\nimport {FavoriteBorderIcon} from '@common/icons/material/FavoriteBorder';\nimport {useAuthClickCapture} from '@app/web-player/use-auth-click-capture';\n\ninterface LikeIconButtonProps\n  extends Omit<IconButtonProps, 'children' | 'disabled' | 'onClick'> {\n  likeable: Likeable;\n}\nexport function LikeIconButton({\n  likeable,\n  size = 'sm',\n  ...buttonProps\n}: LikeIconButtonProps) {\n  const authHandler = useAuthClickCapture();\n  const addToLibrary = useAddItemsToLibrary();\n  const removeFromLibrary = useRemoveItemsFromLibrary();\n  const isLiked = useLibraryStore(s => s.has(likeable));\n  const isLoading = addToLibrary.isLoading || removeFromLibrary.isLoading;\n\n  if (isLiked) {\n    return (\n      <IconButton\n        {...buttonProps}\n        size={size}\n        color=\"primary\"\n        disabled={isLoading}\n        onClickCapture={authHandler}\n        onClick={e => {\n          e.stopPropagation();\n          removeFromLibrary.mutate({likeables: [likeable]});\n        }}\n      >\n        <FavoriteIcon />\n      </IconButton>\n    );\n  }\n  return (\n    <IconButton\n      {...buttonProps}\n      size={size}\n      disabled={isLoading}\n      onClickCapture={authHandler}\n      onClick={e => {\n        e.stopPropagation();\n        addToLibrary.mutate({likeables: [likeable]});\n      }}\n    >\n      <FavoriteBorderIcon />\n    </IconButton>\n  );\n}\n","import {Artist} from '@app/web-player/artists/artist';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {PlayableGridItem} from '@app/web-player/playable-item/playable-grid-item';\nimport {ArtistContextDialog} from '@app/web-player/artists/artist-context-dialog';\nimport {ArtistLink, getArtistLink} from '@app/web-player/artists/artist-link';\nimport {LikeIconButton} from '@app/web-player/library/like-icon-button';\n\ninterface ArtistGridItemProps {\n  artist: Artist;\n  radius?: string;\n}\nexport function ArtistGridItem({\n  artist,\n  radius = 'rounded-full',\n}: ArtistGridItemProps) {\n  return (\n    <PlayableGridItem\n      image={<SmallArtistImage artist={artist} />}\n      title={<ArtistLink artist={artist} />}\n      model={artist}\n      link={getArtistLink(artist)}\n      likeButton={<LikeIconButton likeable={artist} />}\n      contextDialog={<ArtistContextDialog artist={artist} />}\n      radius={radius}\n    />\n  );\n}\n","import {Album} from '@app/web-player/albums/album';\nimport {useMemo} from 'react';\nimport {useAuth} from '@common/auth/use-auth';\n\nexport function useAlbumPermissions(album?: Album) {\n  const {user, hasPermission} = useAuth();\n  return useMemo(() => {\n    const permissions = {\n      canEdit: false,\n      canDelete: false,\n      managesAlbum: false,\n    };\n    if (user?.id && album) {\n      const albumArtistIds = album.artists?.map(a => a.id);\n      const managesAlbum =\n        album.owner_id === user.id ||\n        !!user.artists?.find(a => albumArtistIds?.includes(a.id as number));\n\n      permissions.canEdit =\n        hasPermission('albums.update') ||\n        hasPermission('music.update') ||\n        managesAlbum;\n\n      permissions.canDelete =\n        hasPermission('albums.delete') ||\n        hasPermission('music.delete') ||\n        managesAlbum;\n\n      permissions.managesAlbum = managesAlbum;\n    }\n    return permissions;\n  }, [user, album, hasPermission]);\n}\n","import {ContextMenuButton} from '@app/web-player/context-dialog/context-dialog-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {tracksToMediaItems} from '@app/web-player/tracks/utils/track-to-media-item';\nimport {queueGroupId} from '@app/web-player/queue-group-id';\nimport {Track} from '@app/web-player/tracks/track';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {Playlist} from '@app/web-player/playlists/playlist';\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\nimport {Album} from '@app/web-player/albums/album';\n\ntype MediaItem = Track[] | Album | Artist | Playlist;\n\ninterface AddToQueueButtonProps {\n  item: MediaItem;\n  loadTracks: () => Promise<Track[]>;\n}\nexport function AddToQueueButton({item, loadTracks}: AddToQueueButtonProps) {\n  const {close: closeMenu} = useDialogContext();\n  const player = usePlayerActions();\n\n  return (\n    <ContextMenuButton\n      onClick={async () => {\n        closeMenu();\n        const tracks = await loadTracks();\n        player.appendToQueue(\n          tracksToMediaItems(\n            tracks,\n            Array.isArray(item) ? undefined : queueGroupId(item)\n          )\n        );\n      }}\n    >\n      <Trans message=\"Add to queue\" />\n    </ContextMenuButton>\n  );\n}\n","import {createCountableStore} from '@app/web-player/library/state/create-countable-store';\n\nexport const useRepostsStore = createCountableStore('reposts');\n\nexport const userReposts = useRepostsStore.getState;\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {Track} from '@app/web-player/tracks/track';\nimport {Album} from '@app/web-player/albums/album';\nimport {userReposts} from '@app/web-player/library/state/reposts-store';\n\ninterface Response extends BackendResponse {\n  action: 'added' | 'removed';\n}\n\ninterface Payload {\n  repostable: Track | Album;\n}\n\nexport function useToggleRepost() {\n  return useMutation((payload: Payload) => toggleRepost(payload), {\n    onSuccess: (response, {repostable}) => {\n      if (response.action === 'added') {\n        userReposts().add([repostable]);\n      } else {\n        userReposts().remove([repostable]);\n      }\n      queryClient.invalidateQueries(['reposts']);\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction toggleRepost({repostable}: Payload): Promise<Response> {\n  const payload = {\n    repostable_id: repostable.id,\n    repostable_type: repostable.model_type,\n  };\n  return apiClient.post('reposts/toggle', payload).then(r => r.data);\n}\n","import {ContextMenuButton} from '@app/web-player/context-dialog/context-dialog-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Track} from '@app/web-player/tracks/track';\nimport {Album} from '@app/web-player/albums/album';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {useToggleRepost} from '@app/web-player/reposts/use-toggle-repost';\nimport {useRepostsStore} from '@app/web-player/library/state/reposts-store';\nimport {useAuthClickCapture} from '@app/web-player/use-auth-click-capture';\n\ninterface Props {\n  item: Track | Album;\n}\nexport function ToggleRepostMenuButton({item}: Props) {\n  const authHandler = useAuthClickCapture();\n  const {close: closeMenu} = useDialogContext();\n  const {player} = useSettings();\n  const toggleRepost = useToggleRepost();\n  const isReposted = useRepostsStore(s => s.has(item));\n  if (!player?.enable_repost) return null;\n\n  return (\n    <ContextMenuButton\n      onClickCapture={authHandler}\n      onClick={() => {\n        closeMenu();\n        toggleRepost.mutate({repostable: item});\n      }}\n    >\n      {isReposted ? <Trans message=\"Reposted\" /> : <Trans message=\"Repost\" />}\n    </ContextMenuButton>\n  );\n}\n","import {Album} from '@app/web-player/albums/album';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {AlbumLink, getAlbumLink} from '@app/web-player/albums/album-link';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {Trans} from '@common/i18n/trans';\nimport {loadMediaItemTracks} from '@app/web-player/requests/load-media-item-tracks';\nimport {queueGroupId} from '@app/web-player/queue-group-id';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {Track} from '@app/web-player/tracks/track';\nimport {\n  ContextDialogLayout,\n  ContextMenuButton,\n} from '@app/web-player/context-dialog/context-dialog-layout';\nimport {PlaylistPanelButton} from '@app/web-player/context-dialog/playlist-panel';\nimport {useAlbumPermissions} from '@app/web-player/albums/use-album-permissions';\nimport React, {useCallback} from 'react';\nimport {AddToQueueButton} from '@app/web-player/context-dialog/add-to-queue-menu-button';\nimport {ToggleInLibraryMenuButton} from '@app/web-player/context-dialog/toggle-in-library-menu-button';\nimport {CopyLinkMenuButton} from '@app/web-player/context-dialog/copy-link-menu-button';\nimport {useDeleteAlbum} from '@app/web-player/albums/requests/use-delete-album';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {openGlobalDialog} from '@app/web-player/state/global-dialog-store';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {ToggleRepostMenuButton} from '@app/web-player/context-dialog/toggle-repost-menu-button';\nimport {getArtistLink} from '@app/web-player/artists/artist-link';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {ShareMediaButton} from '@app/web-player/context-dialog/share-media-button';\n\ninterface AlbumContextMenuProps {\n  album: Album;\n}\nexport function AlbumContextDialog({album}: AlbumContextMenuProps) {\n  const {canEdit} = useAlbumPermissions(album);\n  const isMobile = useIsMobileMediaQuery();\n\n  const loadTracks = useCallback(() => {\n    return loadAlbumTracks(album);\n  }, [album]);\n\n  return (\n    <ContextDialogLayout\n      image={<AlbumImage album={album} />}\n      title={<AlbumLink album={album} />}\n      description={<ArtistLinks artists={album.artists} />}\n      loadTracks={loadTracks}\n    >\n      <AddToQueueButton item={album} loadTracks={loadTracks} />\n      <PlaylistPanelButton />\n      <ToggleInLibraryMenuButton items={[album]} />\n      {isMobile && album.artists?.[0] && (\n        <ContextMenuButton type=\"link\" to={getArtistLink(album.artists[0])}>\n          <Trans message=\"Go to artist\" />\n        </ContextMenuButton>\n      )}\n      {!isMobile && (\n        <CopyLinkMenuButton link={getAlbumLink(album, {absolute: true})}>\n          <Trans message=\"Copy album link\" />\n        </CopyLinkMenuButton>\n      )}\n      <ShareMediaButton item={album} />\n      <ToggleRepostMenuButton item={album} />\n      {canEdit && (\n        <ContextMenuButton\n          type=\"link\"\n          to={`/backstage/albums/${album.id}/insights`}\n        >\n          <Trans message=\"Insights\" />\n        </ContextMenuButton>\n      )}\n      {canEdit && (\n        <ContextMenuButton\n          type=\"link\"\n          to={`/backstage/albums/${album.id}/edit`}\n        >\n          <Trans message=\"Edit\" />\n        </ContextMenuButton>\n      )}\n      <DeleteButton album={album} />\n    </ContextDialogLayout>\n  );\n}\n\nfunction DeleteButton({album}: AlbumContextMenuProps) {\n  const {close: closeMenu} = useDialogContext();\n  const deleteAlbum = useDeleteAlbum();\n  const {canDelete} = useAlbumPermissions(album);\n\n  if (!canDelete) {\n    return null;\n  }\n\n  return (\n    <ContextMenuButton\n      disabled={deleteAlbum.isLoading}\n      onClick={() => {\n        closeMenu();\n        openGlobalDialog(ConfirmationDialog, {\n          isDanger: true,\n          title: <Trans message=\"Delete album\" />,\n          body: <Trans message=\"Are you sure you want to delete this album?\" />,\n          confirm: <Trans message=\"Delete\" />,\n          onConfirm: () => {\n            deleteAlbum.mutate({albumId: album.id});\n          },\n        });\n      }}\n    >\n      <Trans message=\"Delete\" />\n    </ContextMenuButton>\n  );\n}\n\nasync function loadAlbumTracks(album: Album): Promise<Track[]> {\n  // load album tracks if not loaded already\n  if (typeof album.tracks === 'undefined') {\n    const tracks = await loadMediaItemTracks(queueGroupId(album));\n    if (!tracks.length) {\n      toast(message('This album has no tracks yet.'));\n    }\n    return tracks;\n  }\n  return album.tracks;\n}\n","import {Album} from '@app/web-player/albums/album';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {PlayableGridItem} from '@app/web-player/playable-item/playable-grid-item';\nimport {AlbumLink, getAlbumLink} from '@app/web-player/albums/album-link';\nimport {AlbumContextDialog} from '@app/web-player/albums/album-context-dialog';\nimport {LikeIconButton} from '@app/web-player/library/like-icon-button';\n\ninterface AlbumGridItemProps {\n  album: Album;\n}\nexport function AlbumGridItem({album}: AlbumGridItemProps) {\n  return (\n    <PlayableGridItem\n      image={<AlbumImage album={album} />}\n      title={<AlbumLink album={album} />}\n      subtitle={<ArtistLinks artists={album.artists} />}\n      link={getAlbumLink(album)}\n      likeButton={<LikeIconButton likeable={album} />}\n      model={album}\n      contextDialog={<AlbumContextDialog album={album} />}\n    />\n  );\n}\n","import defaultImage from './../artists/artist-image/artist-default-image-small.jpg';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport clsx from 'clsx';\nimport {Genre} from '@app/web-player/genres/genre';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\ninterface GenreImageProps {\n  genre: Genre;\n  className?: string;\n  size?: string;\n}\nexport function GenreImage({genre, className, size}: GenreImageProps) {\n  const {trans} = useTrans();\n  return (\n    <img\n      className={clsx(className, size, 'object-cover bg-fg-base/4')}\n      draggable={false}\n      loading=\"lazy\"\n      src={getGenreImage(genre)}\n      alt={trans(message('Image for :name', {values: {name: genre.name}}))}\n    />\n  );\n}\n\nexport function getGenreImage(genre: Genre): string {\n  const data = getBootstrapData();\n  return genre?.image\n    ? `${data.settings.base_url}/${genre?.image}`\n    : defaultImage;\n}\n","import {Genre} from '@app/web-player/genres/genre';\nimport {GenreImage} from '@app/web-player/genres/genre-image';\nimport {Link} from 'react-router-dom';\nimport {getGenreLink} from '@app/web-player/genres/genre-link';\n\ninterface GenreGridItemProps {\n  genre: Genre;\n}\nexport function GenreGridItem({genre}: GenreGridItemProps) {\n  return (\n    <Link\n      to={getGenreLink(genre)}\n      className=\"block relative h-max after:bg-black/50 after:top-0 after:left-0 after:w-full after:h-full after:absolute rounded overflow-hidden cursor-pointer isolate\"\n    >\n      <GenreImage genre={genre} className=\"shadow-md w-full aspect-square\" />\n      <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-xl font-semibold capitalize text-white whitespace-nowrap overflow-hidden overflow-ellipsis max-w-[86%] z-20\">\n        {genre.name}\n      </div>\n    </Link>\n  );\n}\n","import {useMemo} from 'react';\nimport {useAuth} from '@common/auth/use-auth';\nimport {Track} from '@app/web-player/tracks/track';\n\nexport function useTrackPermissions(tracks: (Track | undefined)[]) {\n  const {user, hasPermission} = useAuth();\n\n  return useMemo(() => {\n    const permissions = {\n      canEdit: true,\n      canDelete: true,\n      managesTrack: true,\n    };\n    tracks.every(track => {\n      if (!track) {\n        permissions.canEdit = false;\n        permissions.canDelete = false;\n        permissions.managesTrack = false;\n        return;\n      }\n\n      const trackArtistIds = track.artists?.map(a => a.id);\n      const managesTrack =\n        track.owner_id === user?.id ||\n        !!user?.artists?.find(a => trackArtistIds?.includes(a.id as number));\n\n      if (!managesTrack) {\n        permissions.managesTrack = false;\n      }\n\n      if (\n        !hasPermission('tracks.update') &&\n        !hasPermission('music.update') &&\n        !managesTrack\n      ) {\n        permissions.canEdit = false;\n      }\n\n      if (\n        !hasPermission('tracks.delete') &&\n        !hasPermission('music.delete') &&\n        !managesTrack\n      ) {\n        permissions.canDelete = false;\n      }\n    });\n    return permissions;\n  }, [user, tracks, hasPermission]);\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {useLocation} from 'react-router-dom';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useAuth} from '@common/auth/use-auth';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  trackIds: number[];\n}\n\nexport function useDeleteTracks() {\n  const {pathname} = useLocation();\n  const navigate = useNavigate();\n  const {getRedirectUri} = useAuth();\n\n  return useMutation((payload: Payload) => deleteTracks(payload), {\n    onSuccess: (response, {trackIds}) => {\n      toast(\n        message('[one track|other :count tracks] deleted', {\n          values: {count: trackIds.length},\n        })\n      );\n      // navigate to homepage if we are on this track page currently\n      if (trackIds.some(trackId => pathname.startsWith(`/track/${trackId}`))) {\n        navigate(getRedirectUri());\n      }\n      queryClient.invalidateQueries(['tracks']);\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction deleteTracks({trackIds}: Payload): Promise<Response> {\n  return apiClient.delete(`tracks/${trackIds.join(',')}`).then(r => r.data);\n}\n","import {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {Trans} from '@common/i18n/trans';\nimport {Track} from '@app/web-player/tracks/track';\nimport {\n  ContextDialogLayout,\n  ContextMenuButton,\n  ContextMenuLayoutProps,\n} from '@app/web-player/context-dialog/context-dialog-layout';\nimport {PlaylistPanelButton} from '@app/web-player/context-dialog/playlist-panel';\nimport {CopyLinkMenuButton} from '@app/web-player/context-dialog/copy-link-menu-button';\nimport {getTrackLink, TrackLink} from '@app/web-player/tracks/track-link';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {useTrackPermissions} from '@app/web-player/tracks/hooks/use-track-permissions';\nimport {AddToQueueButton} from '@app/web-player/context-dialog/add-to-queue-menu-button';\nimport React, {Fragment, ReactNode, useCallback} from 'react';\nimport {ToggleInLibraryMenuButton} from '@app/web-player/context-dialog/toggle-in-library-menu-button';\nimport {ToggleRepostMenuButton} from '@app/web-player/context-dialog/toggle-repost-menu-button';\nimport {getRadioLink} from '@app/web-player/radio/get-radio-link';\nimport {useShouldShowRadioButton} from '@app/web-player/tracks/context-dialog/use-should-show-radio-button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {openGlobalDialog} from '@app/web-player/state/global-dialog-store';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {useDeleteTracks} from '@app/web-player/tracks/requests/use-delete-tracks';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {getArtistLink} from '@app/web-player/artists/artist-link';\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\nimport {ShareMediaButton} from '@app/web-player/context-dialog/share-media-button';\n\nexport interface TrackContextDialogProps {\n  tracks: Track[];\n  children?: (tracks: Track[]) => ReactNode;\n  showAddToQueueButton?: boolean;\n}\nexport function TrackContextDialog({\n  children,\n  tracks,\n  showAddToQueueButton = true,\n}: TrackContextDialogProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const firstTrack = tracks[0];\n  const {canEdit, canDelete} = useTrackPermissions(tracks);\n  const shouldShowRadio = useShouldShowRadioButton();\n\n  const loadTracks = useCallback(() => {\n    return Promise.resolve(tracks);\n  }, [tracks]);\n\n  const headerProps: Partial<ContextMenuLayoutProps> =\n    tracks.length === 1\n      ? {\n          image: <TrackImage track={firstTrack} />,\n          title: <TrackLink track={firstTrack} />,\n          description: <ArtistLinks artists={firstTrack.artists} />,\n        }\n      : {};\n\n  return (\n    <ContextDialogLayout {...headerProps} loadTracks={loadTracks}>\n      {showAddToQueueButton && (\n        <AddToQueueButton item={tracks} loadTracks={loadTracks} />\n      )}\n      <ToggleInLibraryMenuButton items={tracks} />\n      {children?.(tracks)}\n      <PlaylistPanelButton />\n      {tracks.length === 1 ? (\n        <Fragment>\n          {shouldShowRadio && (\n            <ContextMenuButton type=\"link\" to={getRadioLink(firstTrack)}>\n              <Trans message=\"Go to song radio\" />\n            </ContextMenuButton>\n          )}\n          {isMobile && (\n            <Fragment>\n              {firstTrack.artists?.[0] && (\n                <ContextMenuButton\n                  type=\"link\"\n                  to={getArtistLink(firstTrack.artists[0])}\n                >\n                  <Trans message=\"Go to artist\" />\n                </ContextMenuButton>\n              )}\n              {firstTrack.album && (\n                <ContextMenuButton\n                  type=\"link\"\n                  to={getAlbumLink(firstTrack.album)}\n                >\n                  <Trans message=\"Go to album\" />\n                </ContextMenuButton>\n              )}\n              <ContextMenuButton type=\"link\" to={getTrackLink(firstTrack)}>\n                <Trans message=\"Go to track\" />\n              </ContextMenuButton>\n            </Fragment>\n          )}\n          {!isMobile && (\n            <CopyLinkMenuButton\n              link={getTrackLink(firstTrack, {absolute: true})}\n            >\n              <Trans message=\"Copy song link\" />\n            </CopyLinkMenuButton>\n          )}\n          {tracks.length === 1 && <ShareMediaButton item={firstTrack} />}\n          {tracks.length === 1 ? (\n            <ToggleRepostMenuButton item={tracks[0]} />\n          ) : null}\n          {tracks.length === 1 && canEdit && (\n            <ContextMenuButton\n              type=\"link\"\n              to={`/backstage/tracks/${firstTrack.id}/insights`}\n            >\n              <Trans message=\"Insights\" />\n            </ContextMenuButton>\n          )}\n          {tracks.length === 1 && canEdit && (\n            <ContextMenuButton\n              type=\"link\"\n              to={`/backstage/tracks/${firstTrack.id}/edit`}\n            >\n              <Trans message=\"Edit\" />\n            </ContextMenuButton>\n          )}\n        </Fragment>\n      ) : null}\n      {canDelete && <DeleteButton tracks={tracks} />}\n    </ContextDialogLayout>\n  );\n}\n\nfunction DeleteButton({tracks}: TrackContextDialogProps) {\n  const {close: closeMenu} = useDialogContext();\n  const deleteTracks = useDeleteTracks();\n  const {canDelete} = useTrackPermissions(tracks);\n\n  if (!canDelete) {\n    return null;\n  }\n\n  return (\n    <ContextMenuButton\n      disabled={deleteTracks.isLoading}\n      onClick={() => {\n        closeMenu();\n        openGlobalDialog(ConfirmationDialog, {\n          isDanger: true,\n          title: <Trans message=\"Delete tracks\" />,\n          body: (\n            <Trans message=\"Are you sure you want to delete selected tracks?\" />\n          ),\n          confirm: <Trans message=\"Delete\" />,\n          onConfirm: () => {\n            deleteTracks.mutate({trackIds: tracks.map(t => t.id)});\n          },\n        });\n      }}\n    >\n      <Trans message=\"Delete\" />\n    </ContextMenuButton>\n  );\n}\n","import {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {PlayableGridItem} from '@app/web-player/playable-item/playable-grid-item';\nimport {Track} from '@app/web-player/tracks/track';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {getTrackLink, TrackLink} from '@app/web-player/tracks/track-link';\nimport {TrackContextDialog} from '@app/web-player/tracks/context-dialog/track-context-dialog';\nimport {LikeIconButton} from '@app/web-player/library/like-icon-button';\n\ninterface TrackGridItemProps {\n  track: Track;\n  newQueue?: Track[];\n}\nexport function TrackGridItem({track, newQueue}: TrackGridItemProps) {\n  return (\n    <PlayableGridItem\n      image={<TrackImage track={track} />}\n      title={<TrackLink track={track} />}\n      subtitle={<ArtistLinks artists={track.artists} />}\n      link={getTrackLink(track)}\n      likeButton={<LikeIconButton likeable={track} />}\n      model={track}\n      newQueue={newQueue}\n      contextDialog={<TrackContextDialog tracks={[track]} />}\n    />\n  );\n}\n","import {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {Playlist} from '@app/web-player/playlists/playlist';\nimport defaultImage from './../albums/album-image/default-album-image.png';\nimport {getTrackImageSrc} from '@app/web-player/tracks/track-image/track-image';\nimport clsx from 'clsx';\n\ninterface PlaylistImageProps {\n  playlist: Playlist;\n  className?: string;\n  size?: string;\n}\nexport function PlaylistImage({playlist, className, size}: PlaylistImageProps) {\n  const {trans} = useTrans();\n  return (\n    <img\n      className={clsx(className, size, 'object-cover bg-fg-base/4')}\n      draggable={false}\n      loading=\"lazy\"\n      src={getPlaylistImageSrc(playlist)}\n      alt={trans(message('Image for :name', {values: {name: playlist.name}}))}\n    />\n  );\n}\n\nexport function getPlaylistImageSrc(playlist: Playlist) {\n  if (playlist.image) {\n    return playlist.image;\n  }\n  const firstTrackImage = playlist.tracks?.[0]\n    ? getTrackImageSrc(playlist.tracks[0])\n    : null;\n  if (firstTrackImage) {\n    return firstTrackImage;\n  }\n  return defaultImage;\n}\n","import {Playlist} from '@app/web-player/playlists/playlist';\nimport {useAuth} from '@common/auth/use-auth';\n\nexport function usePlaylistPermissions(playlist: Playlist) {\n  const {user} = useAuth();\n  const isCreator: boolean = !!(user?.id && user.id === playlist.owner_id);\n  return {canEdit: isCreator, canDelete: isCreator, isCreator};\n}\n","import {useAuthUserPlaylists} from '@app/web-player/playlists/requests/use-auth-user-playlists';\nimport {useAuth} from '@common/auth/use-auth';\n\nexport function useIsFollowingPlaylist(playlistId: number): boolean {\n  const {data} = useAuthUserPlaylists();\n  const {user} = useAuth();\n  // if user is playlist creator, then he is not following it\n  const playlist = data.playlists.find(p => p.id === +playlistId);\n  if (playlist && user && user.id !== playlist.owner_id) {\n    return true;\n  }\n  return false;\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {useLocation} from 'react-router-dom';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useAuth} from '@common/auth/use-auth';\n\ninterface Response extends BackendResponse {}\n\nexport function useDeletePlaylist(playlistId: number | string) {\n  const {pathname} = useLocation();\n  const navigate = useNavigate();\n  const {getRedirectUri} = useAuth();\n\n  return useMutation(() => deletePlaylist(playlistId), {\n    onSuccess: () => {\n      toast(message('Playlist deleted'));\n      queryClient.invalidateQueries(['playlists']);\n      // navigate to homepage if we are on this playlist page currently\n      if (pathname.startsWith(`/playlist/${playlistId}`)) {\n        navigate(getRedirectUri());\n      }\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction deletePlaylist(playlistId: number | string): Promise<Response> {\n  return apiClient.delete(`playlists/${playlistId}`).then(r => r.data);\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Playlist} from '@app/web-player/playlists/playlist';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  playlist: Playlist;\n}\n\nexport function useFollowPlaylist(playlist: Playlist) {\n  return useMutation(() => followPlaylist(playlist.id), {\n    onSuccess: () => {\n      toast(message('Following :name', {values: {name: playlist.name}}));\n      queryClient.invalidateQueries(['playlists']);\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction followPlaylist(playlistId: number | string): Promise<Response> {\n  return apiClient.post(`playlists/${playlistId}/follow`).then(r => r.data);\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Playlist} from '@app/web-player/playlists/playlist';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  playlist: Playlist;\n}\n\nexport function useUnfollowPlaylist(playlist: Playlist) {\n  return useMutation(() => unfollowPlaylist(playlist.id), {\n    onSuccess: () => {\n      toast(\n        message('Stopped following :name', {values: {name: playlist.name}})\n      );\n      queryClient.invalidateQueries(['playlists']);\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction unfollowPlaylist(playlistId: number | string): Promise<Response> {\n  return apiClient.post(`playlists/${playlistId}/unfollow`).then(r => r.data);\n}\n","import {Trans} from '@common/i18n/trans';\nimport {loadMediaItemTracks} from '@app/web-player/requests/load-media-item-tracks';\nimport {queueGroupId} from '@app/web-player/queue-group-id';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {Track} from '@app/web-player/tracks/track';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {\n  ContextDialogLayout,\n  ContextMenuButton,\n} from '@app/web-player/context-dialog/context-dialog-layout';\nimport useCopyClipboard from 'react-use-clipboard';\nimport {Playlist} from '@app/web-player/playlists/playlist';\nimport {\n  getPlaylistLink,\n  PlaylistLink,\n} from '@app/web-player/playlists/playlist-link';\nimport {usePlaylistPermissions} from '@app/web-player/playlists/hooks/use-playlist-permissions';\nimport {PlaylistImage} from '@app/web-player/playlists/playlist-image';\nimport React, {Fragment, useCallback} from 'react';\nimport {useIsFollowingPlaylist} from '@app/web-player/playlists/hooks/use-is-following-playlist';\nimport {openGlobalDialog} from '@app/web-player/state/global-dialog-store';\nimport {UpdatePlaylistDialog} from '@app/web-player/playlists/crupdate-dialog/update-playlist-dialog';\nimport {useUpdatePlaylist} from '@app/web-player/playlists/requests/use-update-playlist';\nimport {CheckIcon} from '@common/icons/material/Check';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {useDeletePlaylist} from '@app/web-player/playlists/requests/use-delete-playlist';\nimport {useFollowPlaylist} from '@app/web-player/playlists/requests/use-follow-playlist';\nimport {useUnfollowPlaylist} from '@app/web-player/playlists/requests/use-unfollow-playlist';\nimport {AddToQueueButton} from '@app/web-player/context-dialog/add-to-queue-menu-button';\nimport {PlaylistOwnerName} from '@app/web-player/playlists/playlist-grid-item';\n\ninterface PlaylistContextDialogProps {\n  playlist: Playlist;\n}\nexport function PlaylistContextDialog({playlist}: PlaylistContextDialogProps) {\n  const {close: closeMenu} = useDialogContext();\n  const [, copyAlbumLink] = useCopyClipboard(\n    getPlaylistLink(playlist, {absolute: true})\n  );\n  const {canEdit} = usePlaylistPermissions(playlist);\n\n  const loadTracks = useCallback(() => {\n    return loadPlaylistTracks(playlist);\n  }, [playlist]);\n\n  return (\n    <ContextDialogLayout\n      image={<PlaylistImage playlist={playlist} />}\n      title={<PlaylistLink playlist={playlist} />}\n      description={<PlaylistOwnerName playlist={playlist} />}\n      loadTracks={loadTracks}\n    >\n      <AddToQueueButton item={playlist} loadTracks={loadTracks} />\n      <TogglePublicButton playlist={playlist} />\n      <ToggleCollaborativeButton playlist={playlist} />\n      <FollowButtons playlist={playlist} />\n      <ContextMenuButton\n        onClick={() => {\n          copyAlbumLink();\n          closeMenu();\n          toast(message('Copied link to clipboard'));\n        }}\n      >\n        <Trans message=\"Copy playlist link\" />\n      </ContextMenuButton>\n      <ContextMenuButton>\n        <Trans message=\"Share\" />\n      </ContextMenuButton>\n      {canEdit && (\n        <ContextMenuButton\n          onClick={() => {\n            closeMenu();\n            openGlobalDialog(UpdatePlaylistDialog, {playlist});\n          }}\n        >\n          <Trans message=\"Edit\" />\n        </ContextMenuButton>\n      )}\n      <DeleteButton playlist={playlist} />\n    </ContextDialogLayout>\n  );\n}\n\ninterface FollowButtonsProps {\n  playlist: Playlist;\n}\nfunction FollowButtons({playlist}: FollowButtonsProps) {\n  const isFollowing = useIsFollowingPlaylist(playlist.id);\n  const {close: closeMenu} = useDialogContext();\n  const followPlaylist = useFollowPlaylist(playlist);\n  const unFollowPlaylist = useUnfollowPlaylist(playlist);\n  const {isCreator} = usePlaylistPermissions(playlist);\n\n  // if user has created this playlist, bail\n  if (isCreator) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {!isFollowing ? (\n        <ContextMenuButton\n          onClick={() => {\n            closeMenu();\n            followPlaylist.mutate();\n          }}\n        >\n          <Trans message=\"Follow\" />\n        </ContextMenuButton>\n      ) : (\n        <ContextMenuButton\n          onClick={() => {\n            closeMenu();\n            unFollowPlaylist.mutate();\n          }}\n        >\n          <Trans message=\"Unfollow\" />\n        </ContextMenuButton>\n      )}\n    </Fragment>\n  );\n}\n\nfunction TogglePublicButton({playlist}: FollowButtonsProps) {\n  const {close: closeMenu} = useDialogContext();\n  const updatePlaylist = useUpdatePlaylist({playlistId: playlist.id});\n  const {isCreator} = usePlaylistPermissions(playlist);\n\n  if (!isCreator) {\n    return null;\n  }\n\n  const togglePublic = () => {\n    closeMenu();\n    updatePlaylist.mutate({public: !playlist.public});\n  };\n\n  return (\n    <ContextMenuButton\n      disabled={updatePlaylist.isLoading}\n      onClick={() => togglePublic()}\n    >\n      {playlist.public ? (\n        <Trans message=\"Make private\" />\n      ) : (\n        <Trans message=\"Make public\" />\n      )}\n    </ContextMenuButton>\n  );\n}\n\nfunction ToggleCollaborativeButton({playlist}: FollowButtonsProps) {\n  const {close: closeMenu} = useDialogContext();\n  const updatePlaylist = useUpdatePlaylist({playlistId: playlist.id});\n  const {isCreator} = usePlaylistPermissions(playlist);\n\n  if (!isCreator) {\n    return null;\n  }\n\n  const toggleCollaborative = () => {\n    closeMenu();\n    updatePlaylist.mutate({collaborative: !playlist.collaborative});\n  };\n\n  return (\n    <ContextMenuButton\n      disabled={updatePlaylist.isLoading}\n      startIcon={playlist.collaborative ? <CheckIcon /> : undefined}\n      onClick={() => toggleCollaborative()}\n    >\n      <Trans message=\"Collaborative\" />\n    </ContextMenuButton>\n  );\n}\n\nfunction DeleteButton({playlist}: FollowButtonsProps) {\n  const {close: closeMenu} = useDialogContext();\n  const deletePlaylist = useDeletePlaylist(playlist.id);\n  const {canDelete} = usePlaylistPermissions(playlist);\n\n  if (!canDelete) {\n    return null;\n  }\n\n  return (\n    <ContextMenuButton\n      disabled={deletePlaylist.isLoading}\n      onClick={() => {\n        closeMenu();\n        openGlobalDialog(ConfirmationDialog, {\n          isDanger: true,\n          title: <Trans message=\"Delete playlist\" />,\n          body: (\n            <Trans message=\"Are you sure you want to delete this playlist?\" />\n          ),\n          confirm: <Trans message=\"Delete\" />,\n          onConfirm: () => {\n            deletePlaylist.mutate();\n          },\n        });\n      }}\n    >\n      <Trans message=\"Delete\" />\n    </ContextMenuButton>\n  );\n}\n\nasync function loadPlaylistTracks(playlist: Playlist): Promise<Track[]> {\n  // load playlist tracks if not loaded already\n  if (typeof playlist.tracks === 'undefined') {\n    const tracks = await loadMediaItemTracks(queueGroupId(playlist));\n    if (!tracks.length) {\n      toast(message('This playlist has no tracks yet.'));\n    }\n    return tracks;\n  }\n  return playlist.tracks;\n}\n","import {FavoriteIcon} from '@common/icons/material/Favorite';\nimport {FavoriteBorderIcon} from '@common/icons/material/FavoriteBorder';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {Playlist} from '@app/web-player/playlists/playlist';\nimport {useFollowPlaylist} from '@app/web-player/playlists/requests/use-follow-playlist';\nimport {useUnfollowPlaylist} from '@app/web-player/playlists/requests/use-unfollow-playlist';\nimport {useIsFollowingPlaylist} from '@app/web-player/playlists/hooks/use-is-following-playlist';\nimport {usePlaylistPermissions} from '@app/web-player/playlists/hooks/use-playlist-permissions';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {ButtonSize} from '@common/ui/buttons/button-size';\n\ninterface FollowPlaylistButtonProps {\n  buttonType: 'icon' | 'text';\n  className?: string;\n  size?: ButtonSize;\n  playlist: Playlist;\n  radius?: string;\n}\nexport function FollowPlaylistButton({\n  playlist,\n  size = 'sm',\n  className,\n  buttonType = 'text',\n  radius,\n}: FollowPlaylistButtonProps) {\n  const {isCreator} = usePlaylistPermissions(playlist);\n  const follow = useFollowPlaylist(playlist);\n  const unfollow = useUnfollowPlaylist(playlist);\n  const isFollowing = useIsFollowingPlaylist(playlist.id);\n  const isLoading = follow.isLoading || unfollow.isLoading;\n\n  if (isCreator) {\n    return null;\n  }\n\n  if (buttonType === 'icon') {\n    if (isFollowing) {\n      return (\n        <IconButton\n          size={size}\n          radius={radius}\n          color=\"primary\"\n          className={className}\n          disabled={isLoading}\n          onClick={() => unfollow.mutate()}\n        >\n          <FavoriteIcon />\n        </IconButton>\n      );\n    }\n    return (\n      <IconButton\n        size={size}\n        radius={radius}\n        disabled={isLoading}\n        className={className}\n        onClick={() => follow.mutate()}\n      >\n        <FavoriteBorderIcon />\n      </IconButton>\n    );\n  }\n\n  if (isFollowing) {\n    return (\n      <Button\n        size={size}\n        variant=\"outline\"\n        radius={radius || 'rounded-full'}\n        startIcon={<FavoriteIcon className=\"text-primary\" />}\n        disabled={isLoading}\n        className={className}\n        onClick={() => unfollow.mutate()}\n      >\n        <Trans message=\"Following\" />\n      </Button>\n    );\n  }\n  return (\n    <Button\n      size={size}\n      variant=\"outline\"\n      radius={radius || 'rounded-full'}\n      startIcon={<FavoriteBorderIcon />}\n      disabled={isLoading}\n      className={className}\n      onClick={() => follow.mutate()}\n    >\n      <Trans message=\"Follow\" />\n    </Button>\n  );\n}\n","import {PlayableGridItem} from '@app/web-player/playable-item/playable-grid-item';\nimport {Playlist} from '@app/web-player/playlists/playlist';\nimport {PlaylistImage} from '@app/web-player/playlists/playlist-image';\nimport {\n  getPlaylistLink,\n  PlaylistLink,\n} from '@app/web-player/playlists/playlist-link';\nimport {PlaylistContextDialog} from '@app/web-player/playlists/playlist-context-dialog';\nimport {Trans} from '@common/i18n/trans';\nimport {UserProfileLink} from '@app/web-player/users/user-profile-link';\nimport React from 'react';\nimport {FollowPlaylistButton} from '@app/web-player/playlists/playlist-page/follow-playlist-button';\n\ninterface PlaylistGridItemProps {\n  playlist: Playlist;\n}\nexport function PlaylistGridItem({playlist}: PlaylistGridItemProps) {\n  return (\n    <PlayableGridItem\n      image={<PlaylistImage playlist={playlist} />}\n      title={<PlaylistLink playlist={playlist} />}\n      subtitle={<PlaylistOwnerName playlist={playlist} />}\n      link={getPlaylistLink(playlist)}\n      likeButton={\n        <FollowPlaylistButton buttonType=\"icon\" size=\"md\" playlist={playlist} />\n      }\n      model={playlist}\n      contextDialog={<PlaylistContextDialog playlist={playlist} />}\n    />\n  );\n}\n\nexport function PlaylistOwnerName({playlist}: PlaylistGridItemProps) {\n  const owner = playlist.owner || playlist.editors?.[0];\n  if (!owner) {\n    return null;\n  }\n  return (\n    <Trans\n      message=\"By :name\"\n      values={{\n        name: <UserProfileLink user={owner} />,\n      }}\n    />\n  );\n}\n","export default \"__VITE_ASSET__6d84205f__\"","import {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {User} from '@common/auth/user';\nimport clsx from 'clsx';\nimport {Trans} from '@common/i18n/trans';\nimport {StarIcon} from '@common/icons/material/Star';\nimport userDefaultImage from './user-default.svg';\n\ninterface UserImageProps {\n  user: User;\n  className?: string;\n  size?: string;\n  showProBadge?: boolean;\n}\nexport function UserImage({\n  user,\n  className,\n  size,\n  showProBadge,\n}: UserImageProps) {\n  const {trans} = useTrans();\n  const showBadge = showProBadge && user.subscriptions?.find(s => s.valid);\n  return (\n    <div\n      className={clsx(\n        'relative flex-shrink-0 isolate overflow-hidden',\n        size,\n        className\n      )}\n    >\n      <img\n        className=\"object-cover bg-fg-base/4 w-full h-full\"\n        draggable={false}\n        src={getUserImage(user)}\n        alt={trans(\n          message('Avatar for :name', {values: {name: user.display_name}})\n        )}\n      />\n      {showBadge && (\n        <div\n          className=\"absolute bottom-12 text-sm left-0 right-0 w-max max-w-full mx-auto flex items-center gap-6 bg-black/60 text-white rounded-full py-4 px-8\"\n          color=\"positive\"\n        >\n          <div className=\"bg-primary rounded-full p-1\">\n            <StarIcon className=\"text-white\" size=\"sm\" />\n          </div>\n          <Trans message=\"PRO user\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function getUserImage(user: User): string {\n  return user.avatar || userDefaultImage;\n}\n","import {Link} from 'react-router-dom';\nimport {getUserProfileLink} from '@app/web-player/users/user-profile-link';\nimport {UserImage} from '@app/web-player/users/user-image';\nimport {User} from '@common/auth/user';\nimport {Trans} from '@common/i18n/trans';\n\ninterface UserGridItemProps {\n  user: User;\n}\nexport function UserGridItem({user}: UserGridItemProps) {\n  return (\n    <div>\n      <Link to={getUserProfileLink(user)}>\n        <UserImage\n          user={user}\n          className=\"shadow-md w-full aspect-square rounded\"\n        />\n      </Link>\n      <div className=\"text-sm mt-12\">\n        <div className=\"overflow-hidden overflow-ellipsis\">\n          <Link to={getUserProfileLink(user)}>{user.display_name}</Link>\n        </div>\n        {user.followers_count ? (\n          <div className=\"text-muted mt-4 whitespace-nowrap overflow-hidden overflow-ellipsis\">\n            <Trans\n              message=\":count followers\"\n              values={{count: user.followers_count}}\n            />\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","import {ChannelContentItem} from '@app/web-player/channels/channel';\nimport {ARTIST_MODEL} from '@app/web-player/artists/artist';\nimport {ArtistGridItem} from '@app/web-player/artists/artist-grid-item';\nimport {ALBUM_MODEL} from '@app/web-player/albums/album';\nimport {AlbumGridItem} from '@app/web-player/albums/album-grid-item';\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\nimport {GenreGridItem} from '@app/web-player/genres/genre-grid-item';\nimport React from 'react';\nimport {Track, TRACK_MODEL} from '@app/web-player/tracks/track';\nimport {TrackGridItem} from '@app/web-player/tracks/track-grid-item';\nimport {PLAYLIST_MODEL} from '@app/web-player/playlists/playlist';\nimport {PlaylistGridItem} from '@app/web-player/playlists/playlist-grid-item';\nimport {USER_MODEL} from '@common/auth/user';\nimport {UserGridItem} from '@app/web-player/users/user-grid-item';\n\ninterface Props {\n  item: ChannelContentItem;\n  items?: ChannelContentItem[];\n}\nexport function ChannelContentGridItem({item, items}: Props) {\n  switch (item.model_type) {\n    case ARTIST_MODEL:\n      return <ArtistGridItem artist={item} />;\n    case ALBUM_MODEL:\n      return <AlbumGridItem album={item} />;\n    case GENRE_MODEL:\n      return <GenreGridItem genre={item} />;\n    case TRACK_MODEL:\n      return <TrackGridItem track={item} newQueue={items as Track[]} />;\n    case PLAYLIST_MODEL:\n      return <PlaylistGridItem playlist={item} />;\n    case USER_MODEL:\n      return <UserGridItem user={item} />;\n    default:\n      return null;\n  }\n}\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\n\nexport const AntennaIcon = createSvgIcon(\n  <path d=\"M12 7.5c.69 0 1.27.23 1.76.7s.74 1.07.74 1.8c0 1.05-.5 1.81-1.5 2.28V21h-2v-8.72c-1-.47-1.5-1.23-1.5-2.28 0-.73.26-1.33.74-1.8s1.07-.7 1.76-.7m4.69-2.2c1.25 1.25 1.92 2.81 2.01 4.7 0 1.8-.67 3.38-2.01 4.72L15.5 13.5c1-.91 1.5-2.08 1.5-3.5 0-1.33-.5-2.5-1.5-3.5l1.19-1.2M6.09 4.08C4.5 5.67 3.7 7.64 3.7 10s.8 4.3 2.39 5.89l-1.17 1.22C3 15.08 2 12.7 2 10s1-5.06 2.92-7.09l1.17 1.17m12.99-1.17C21 4.94 22 7.3 22 10c0 2.8-1 5.17-2.92 7.11l-1.17-1.22C19.5 14.3 20.3 12.33 20.3 10s-.8-4.33-2.39-5.92l1.17-1.17M7.31 5.3L8.5 6.5C7.5 7.42 7 8.58 7 10c0 1.33.5 2.5 1.5 3.5l-1.19 1.22C5.97 13.38 5.3 11.8 5.3 10c0-1.8.67-3.36 2.01-4.7z\"></path>,\n  'Radio'\n);\n","import React from 'react';\nimport {Channel} from '@app/web-player/channels/channel';\nimport {Link, useParams} from 'react-router-dom';\nimport {KeyboardArrowRightIcon} from '@common/icons/material/KeyboardArrowRight';\nimport clsx from 'clsx';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {Trans} from '@common/i18n/trans';\nimport {AntennaIcon} from '@app/web-player/channels/antenna-icon';\nimport {useShouldShowRadioButton} from '@app/web-player/tracks/context-dialog/use-should-show-radio-button';\nimport {getRadioLink} from '@app/web-player/radio/get-radio-link';\n\ninterface ChannelHeadingProps {\n  channel: Channel;\n  margin?: string;\n  isNested?: boolean;\n}\nexport function ChannelHeading({\n  channel,\n  isNested,\n  margin = isNested ? 'mb-16 md:mb-20' : 'mb-20 md:mb-40',\n}: ChannelHeadingProps) {\n  const shouldShowRadio = useShouldShowRadioButton();\n  if (channel.config.hideTitle) {\n    return null;\n  }\n  if (!isNested) {\n    if (shouldShowRadio && channel.genre) {\n      return (\n        <div\n          className={clsx('flex gap-24 items-center justify-between', margin)}\n        >\n          <h1 className=\"text-3xl flex-auto\">{channel.name}</h1>\n          <Tooltip label={<Trans message=\"Genre radio\" />}>\n            <IconButton\n              className=\"flex-shrink-0\"\n              elementType={Link}\n              to={getRadioLink(channel.genre)}\n            >\n              <AntennaIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      );\n    }\n    return <h1 className={clsx('text-3xl', margin)}>{channel.name}</h1>;\n  }\n\n  return (\n    <div className={clsx('text-xl flex items-center gap-4', margin)}>\n      <NestedChannelLink channel={channel} />\n      <KeyboardArrowRightIcon className=\"mt-4\" />\n    </div>\n  );\n}\n\ninterface ChannelLinkProps {\n  channel: Channel;\n}\nfunction NestedChannelLink({channel}: ChannelLinkProps) {\n  const {filter: genreName} = useParams();\n  return (\n    <Link\n      className=\"hover:underline outline-none focus-visible:underline\"\n      to={\n        channel.config.connectToGenreViaUrl && genreName\n          ? `/channel/${channel.slug}/${genreName}`\n          : `/channel/${channel.slug}`\n      }\n    >\n      {channel.name}\n    </Link>\n  );\n}\n","import {usePaginatedChannelContent} from '@app/web-player/channels/requests/use-paginated-channel-content';\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport React, {Fragment} from 'react';\nimport {ChannelContentProps} from '@app/web-player/channels/channel-content';\nimport {ChannelContentGridItem} from '@app/web-player/channels/channel-content-grid-item';\nimport {ChannelHeading} from '@app/web-player/channels/channel-heading';\nimport {Channel, ChannelContentItem} from '@app/web-player/channels/channel';\n\nexport function ChannelContentGrid(props: ChannelContentProps) {\n  return (\n    <Fragment>\n      <ChannelHeading {...props} />\n      {props.isNested || props.channel.config.contentType !== 'listAll' ? (\n        <SimpleGrid {...props} />\n      ) : (\n        <PaginatedGrid {...props} />\n      )}\n    </Fragment>\n  );\n}\n\nfunction SimpleGrid({channel}: ChannelContentProps) {\n  const content = (channel.content?.data || []) as Exclude<\n    ChannelContentItem,\n    Channel\n  >[];\n  return (\n    <ContentGrid>\n      {content.map(item => (\n        <ChannelContentGridItem\n          key={`${item.id}-${item.model_type}`}\n          item={item}\n          items={content}\n        />\n      ))}\n    </ContentGrid>\n  );\n}\n\nfunction PaginatedGrid({channel}: ChannelContentProps) {\n  const query = usePaginatedChannelContent(channel);\n  const content = (query.items || []) as Exclude<ChannelContentItem, Channel>[];\n  return (\n    <div>\n      <ContentGrid>\n        {content.map(item => (\n          <ChannelContentGridItem\n            key={`${item.id}-${item.model_type}`}\n            item={item}\n            items={content}\n          />\n        ))}\n      </ContentGrid>\n      <InfiniteScrollSentinel query={query} />\n    </div>\n  );\n}\n","import {useContext} from 'react';\nimport {TableContext} from '@common/ui/tables/table-context';\n\nexport interface TrackTableMeta {\n  queueGroupId?: string;\n  hideTrackImage?: boolean;\n}\n\nconst stableObj = {};\n\nexport function useTrackTableMeta() {\n  const {meta} = useContext(TableContext);\n  return (meta || stableObj) as TrackTableMeta;\n}\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\n\nexport function useIsTrackCued(\n  trackId: number,\n  groupId?: string | number\n): boolean {\n  return usePlayerStore(s => {\n    if (!s.cuedMedia?.meta.id || s.cuedMedia.meta.id !== trackId) {\n      return false;\n    }\n\n    if (!s.cuedMedia?.groupId && !groupId) {\n      return true;\n    }\n\n    if (groupId && s.cuedMedia.groupId === groupId) {\n      return true;\n    }\n\n    return false;\n  });\n}\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\nimport {useIsTrackCued} from '@app/web-player/tracks/hooks/use-is-track-cued';\n\nexport function useIsTrackPlaying(\n  trackId: number,\n  groupId?: string | number\n): boolean {\n  const isCued = useIsTrackCued(trackId, groupId);\n  const isPlaying = usePlayerStore(s => s.status === 'playing');\n  return isCued && isPlaying;\n}\n","import {Track} from '@app/web-player/tracks/track';\nimport {useTrans} from '@common/i18n/use-trans';\nimport React, {useContext, useState} from 'react';\nimport {TableContext} from '@common/ui/tables/table-context';\nimport {trackToMediaItem} from '@app/web-player/tracks/utils/track-to-media-item';\nimport {message} from '@common/i18n/message';\nimport {PauseIcon} from '@common/icons/material/Pause';\nimport {PlayArrowFilledIcon} from '@app/web-player/tracks/play-arrow-filled';\nimport clsx from 'clsx';\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\nimport {useTrackTableMeta} from '@app/web-player/tracks/track-table/use-track-table-meta';\nimport {EqualizerImage} from '@app/web-player/tracks/equalizer-image/equalizer-image';\nimport {useIsTrackPlaying} from '@app/web-player/tracks/hooks/use-is-track-playing';\nimport {useIsTrackCued} from '@app/web-player/tracks/hooks/use-is-track-cued';\n\ninterface TogglePlaybackColumnProps {\n  track: Track;\n  rowIndex: number;\n  isHovered: boolean;\n}\nexport function TogglePlaybackColumn({\n  track,\n  rowIndex,\n  isHovered,\n}: TogglePlaybackColumnProps) {\n  const {queueGroupId} = useTrackTableMeta();\n  const isPlaying = useIsTrackPlaying(track.id, queueGroupId);\n  const isCued = useIsTrackCued(track.id, queueGroupId);\n\n  return (\n    <div className=\"w-24 h-24\">\n      {isHovered || isPlaying ? (\n        <TogglePlaybackButton\n          track={track}\n          trackIndex={rowIndex}\n          isPlaying={isPlaying}\n        />\n      ) : (\n        <span className={clsx(isCued ? 'text-primary' : 'text-muted')}>\n          {rowIndex + 1}\n        </span>\n      )}\n    </div>\n  );\n}\n\ninterface TogglePlaybackButtonProps {\n  track: Track;\n  trackIndex: number;\n  isPlaying: boolean;\n}\nfunction TogglePlaybackButton({\n  track,\n  trackIndex,\n  isPlaying,\n}: TogglePlaybackButtonProps) {\n  const {trans} = useTrans();\n  const player = usePlayerActions();\n  const {data} = useContext(TableContext);\n  const {queueGroupId} = useTrackTableMeta();\n  const [isHover, setHover] = useState(false);\n\n  if (isPlaying) {\n    return (\n      <button\n        onPointerEnter={() => setHover(true)}\n        onPointerLeave={() => setHover(false)}\n        aria-label={trans(message('Pause :name', {values: {name: track.name}}))}\n        tabIndex={0}\n        onClick={e => {\n          e.stopPropagation();\n          player.pause();\n        }}\n      >\n        {isHover ? <PauseIcon /> : <EqualizerImage />}\n      </button>\n    );\n  }\n\n  return (\n    <button\n      aria-label={trans(message('Play :name', {values: {name: track.name}}))}\n      tabIndex={0}\n      onClick={async e => {\n        e.stopPropagation();\n        const newQueue = data.map(d =>\n          trackToMediaItem(d as Track, queueGroupId)\n        );\n        player.overrideQueueAndPlay(newQueue, trackIndex);\n      }}\n    >\n      <PlayArrowFilledIcon />\n    </button>\n  );\n}\n","import {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\nimport React from 'react';\nimport {Track} from '@app/web-player/tracks/track';\nimport clsx from 'clsx';\nimport {useTrackTableMeta} from '@app/web-player/tracks/track-table/use-track-table-meta';\nimport {getTrackImageSrc} from '@app/web-player/tracks/track-image/track-image';\nimport {useIsTrackCued} from '@app/web-player/tracks/hooks/use-is-track-cued';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\n\ninterface TrackNameColumnProps {\n  track: Track;\n}\nexport function TrackNameColumn({track}: TrackNameColumnProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const {hideTrackImage, queueGroupId} = useTrackTableMeta();\n  const isCued = useIsTrackCued(track.id, queueGroupId);\n\n  return (\n    <NameWithAvatar\n      image={!hideTrackImage ? getTrackImageSrc(track) : undefined}\n      label={track.name}\n      avatarSize={isMobile ? 'lg' : 'md'}\n      description={\n        isMobile ? track.artists?.map(a => a.name).join(', ') : undefined\n      }\n      labelClassName={clsx(\n        isCued && 'text-primary',\n        isMobile && 'text-[15px] leading-6'\n      )}\n    />\n  );\n}\n","import {Track} from '@app/web-player/tracks/track';\nimport {ReactNode, useContext, useMemo} from 'react';\nimport {TableContext} from '@common/ui/tables/table-context';\nimport {\n  TrackContextDialog,\n  TrackContextDialogProps,\n} from '@app/web-player/tracks/context-dialog/track-context-dialog';\n\ninterface TableTrackContextDialogProps\n  extends Omit<TrackContextDialogProps, 'tracks'> {}\n\nexport function TableTrackContextDialog({\n  children,\n  ...props\n}: TableTrackContextDialogProps) {\n  const {selectedRows, data} = useContext(TableContext);\n  const tracks = useMemo(() => {\n    return selectedRows\n      .map(trackId => data.find(track => track.id === trackId))\n      .filter(t => !!t) as Track[];\n  }, [selectedRows, data]);\n  return (\n    <TrackContextDialog {...props} tracks={tracks}>\n      {children}\n    </TrackContextDialog>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {Track} from '@app/web-player/tracks/track';\nimport clsx from 'clsx';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {MoreHorizIcon} from '@common/icons/material/MoreHoriz';\nimport {TrackContextDialog} from '@app/web-player/tracks/context-dialog/track-context-dialog';\nimport {LikeIconButton} from '@app/web-player/library/like-icon-button';\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\n\ninterface Props {\n  track: Track;\n  isHovered: boolean;\n}\nexport function TrackOptionsColumn({track, isHovered}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n\n  return (\n    <Fragment>\n      <DialogTrigger type=\"popover\">\n        <IconButton\n          size={isMobile ? 'sm' : 'md'}\n          className={clsx(\n            isMobile ? 'ml-8 -mr-8 text-muted' : 'mr-8',\n            !isMobile && !isHovered && 'invisible'\n          )}\n        >\n          {isMobile ? <MoreVertIcon /> : <MoreHorizIcon />}\n        </IconButton>\n        <TrackContextDialog tracks={[track]} />\n      </DialogTrigger>\n      {!isMobile && <LikeIconButton size=\"xs\" likeable={track} />}\n    </Fragment>\n  );\n}\n","import {Track} from '@app/web-player/tracks/track';\nimport {Table, TableProps} from '@common/ui/tables/table';\nimport {ColumnConfig} from '@common/datatable/column-config';\nimport {Trans} from '@common/i18n/trans';\nimport React, {ReactElement, useMemo} from 'react';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\nimport {ScheduleIcon} from '@common/icons/material/Schedule';\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {TogglePlaybackColumn} from '@app/web-player/tracks/track-table/toggle-playback-column';\nimport {TrackNameColumn} from '@app/web-player/tracks/track-table/track-name-column';\nimport {TrackTableMeta} from '@app/web-player/tracks/track-table/use-track-table-meta';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport {NameWithAvatarPlaceholder} from '@common/datatable/column-templates/name-with-avatar';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {RowElementProps} from '@common/ui/tables/table-row';\nimport {TableTrackContextDialog} from '@app/web-player/tracks/context-dialog/table-track-context-dialog';\nimport {TrendingUpIcon} from '@common/icons/material/TrendingUp';\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\nimport {trackToMediaItem} from '@app/web-player/tracks/utils/track-to-media-item';\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {TrackOptionsColumn} from '@app/web-player/tracks/track-table/track-options-column';\nimport {TableDataItem} from '@common/ui/tables/types/table-data-item';\nimport {TrackContextDialogProps} from '@app/web-player/tracks/context-dialog/track-context-dialog';\n\nconst columnConfig: ColumnConfig<Track>[] = [\n  {\n    key: 'index',\n    header: () => <span>#</span>,\n    width: 'w-1',\n    padding: 'pl-16 pr-22',\n    align: 'center',\n    body: (track, row) => {\n      if (row.isPlaceholder) {\n        return <Skeleton size=\"w-20 h-20\" variant=\"rect\" />;\n      }\n      return (\n        <TogglePlaybackColumn\n          track={track}\n          rowIndex={row.index}\n          isHovered={row.isHovered}\n        />\n      );\n    },\n  },\n  {\n    key: 'name',\n    allowsSorting: true,\n    padding: 'pr-16',\n    width: 'max-sm:w-5/6 max-sm:max-w-1',\n    header: () => <Trans message=\"Title\" />,\n    body: (track, row) => {\n      if (row.isPlaceholder) {\n        return <NameWithAvatarPlaceholder showDescription={false} />;\n      }\n      return <TrackNameColumn track={track} />;\n    },\n  },\n  {\n    key: 'artist',\n    header: () => <Trans message=\"Artist\" />,\n    body: (track, row) => {\n      if (row.isPlaceholder) {\n        return <Skeleton className=\"leading-3 max-w-4/5\" />;\n      }\n      return <ArtistLinks artists={track.artists} />;\n    },\n  },\n  {\n    key: 'album_name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Album\" />,\n    body: (track, row) => {\n      if (row.isPlaceholder) {\n        return <Skeleton className=\"leading-3 max-w-4/5\" />;\n      }\n      return track.album ? <AlbumLink album={track.album} /> : null;\n    },\n  },\n  {\n    key: 'added_at',\n    sortingKey: 'likes.created_at',\n    allowsSorting: true,\n    width: 'w-1',\n    header: () => <Trans message=\"Date added\" />,\n    body: (track, row) => {\n      if (row.isPlaceholder) {\n        return <Skeleton className=\"leading-3 max-w-4/5\" />;\n      }\n      return <FormattedRelativeTime date={track.added_at} />;\n    },\n  },\n  {\n    key: 'options',\n    width: 'w-1',\n    padding: 'px-4',\n    align: 'end',\n    header: () => <Trans message=\"Options\" />,\n    hideHeader: true,\n    body: (track, row) => {\n      if (row.isPlaceholder) {\n        return (\n          <div className=\"flex justify-end\">\n            <Skeleton size=\"w-20 h-20\" variant=\"rect\" />\n          </div>\n        );\n      }\n      return <TrackOptionsColumn track={track} isHovered={row.isHovered} />;\n    },\n  },\n  {\n    key: 'duration',\n    allowsSorting: true,\n    width: 'w-1',\n    className: 'text-muted',\n    header: () => <ScheduleIcon />,\n    body: (track, row) => {\n      if (row.isPlaceholder) {\n        return <Skeleton className=\"leading-3\" />;\n      }\n      return track.duration ? <FormattedDuration ms={track.duration} /> : null;\n    },\n  },\n  {\n    key: 'popularity',\n    allowsSorting: true,\n    width: 'w-90',\n    className: 'text-muted',\n    header: () => <TrendingUpIcon />,\n    body: (track, row) => {\n      if (row.isPlaceholder) {\n        return <Skeleton className=\"leading-3\" />;\n      }\n      return (\n        <div className=\"h-6 w-full relative bg-chip\">\n          <div\n            style={{width: `${track.popularity || 50}%`}}\n            className=\"h-full w-0 absolute top-0 left-0 bg-black/30\"\n          />\n        </div>\n      );\n    },\n  },\n];\n\nexport interface TrackTableProps {\n  tracks: Track[] | TableDataItem[]; // might be passing in placeholder items for skeletons\n  hideArtist?: boolean;\n  hideAlbum?: boolean;\n  hideTrackImage?: boolean;\n  hidePopularity?: boolean;\n  hideAddedAtColumn?: boolean;\n  hideHeaderRow?: boolean;\n  queueGroupId?: string;\n  contextDialog?: ReactElement<TrackContextDialogProps>;\n  renderRowAs?: TableProps<Track>['renderRowAs'];\n  sortDescriptor?: TableProps<Track>['sortDescriptor'];\n  onSortChange?: TableProps<Track>['onSortChange'];\n  enableSorting?: TableProps<Track>['enableSorting'];\n  tableBody?: TableProps<Track>['tableBody'];\n  className?: string;\n}\nexport function TrackTable({\n  tracks,\n  hideArtist = false,\n  hideAlbum = false,\n  hideHeaderRow = false,\n  hideTrackImage = false,\n  hidePopularity = true,\n  hideAddedAtColumn = true,\n  queueGroupId,\n  contextDialog,\n  renderRowAs,\n  ...tableProps\n}: TrackTableProps) {\n  const player = usePlayerActions();\n  const isMobile = useIsMobileMediaQuery();\n  hideHeaderRow = hideHeaderRow || !!isMobile;\n\n  const filteredColumns = useMemo(() => {\n    // on mobile show only name and options\n    if (isMobile) {\n      return columnConfig.filter(col => {\n        return col.key === 'name' || col.key === 'options';\n      });\n    }\n    // on desktop show all props, except for explicitly hidden ones\n    return columnConfig.filter(col => {\n      if (col.key === 'artist' && hideArtist) {\n        return false;\n      }\n      if (col.key === 'album_name' && hideAlbum) {\n        return false;\n      }\n      if (col.key === 'popularity' && hidePopularity) {\n        return false;\n      }\n      if (col.key === 'added_at' && hideAddedAtColumn) {\n        return false;\n      }\n      return true;\n    });\n  }, [isMobile, hideArtist, hideAlbum, hidePopularity, hideAddedAtColumn]);\n\n  const meta: TrackTableMeta = useMemo(() => {\n    return {queueGroupId: queueGroupId, hideTrackImage};\n  }, [queueGroupId, hideTrackImage]);\n\n  return (\n    <Table\n      closeOnInteractOutside\n      hideHeaderRow={hideHeaderRow}\n      selectionStyle=\"highlight\"\n      enableSelection={!isMobile}\n      selectRowOnContextMenu\n      renderRowAs={renderRowAs || TrackTableRowWithContextMenu}\n      columns={filteredColumns}\n      data={tracks as Track[]}\n      meta={meta}\n      hideBorder={!!isMobile}\n      onAction={(track, index) => {\n        const newQueue = tracks.map(d =>\n          trackToMediaItem(d as Track, queueGroupId)\n        );\n        player.overrideQueueAndPlay(newQueue, index);\n      }}\n      {...tableProps}\n    />\n  );\n}\n\nfunction TrackTableRowWithContextMenu({\n  item,\n  children,\n  ...domProps\n}: RowElementProps<Track>) {\n  const row = <tr {...domProps}>{children}</tr>;\n  if (item.isPlaceholder) {\n    return row;\n  }\n  return (\n    <DialogTrigger type=\"popover\" triggerOnContextMenu placement=\"bottom-start\">\n      {row}\n      <TableTrackContextDialog />\n    </DialogTrigger>\n  );\n}\n","import {observeElementOffset, useVirtualizer} from '@tanstack/react-virtual';\nimport React, {useContext, useEffect, useRef} from 'react';\nimport {TableRow} from '@common/ui/tables/table-row';\nimport {TableBodyProps, TableProps} from '@common/ui/tables/table';\nimport {getScrollParent} from '@react-aria/utils';\nimport {TableContext} from '@common/ui/tables/table-context';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {UseInfiniteQueryResult} from '@tanstack/react-query/src/types';\n\ninterface VirtualTableBodyProps extends TableBodyProps {\n  totalItems?: number;\n  query: UseInfiniteQueryResult;\n}\nexport function VirtualTableBody({\n  renderRowAs,\n  totalItems = 0,\n  query,\n  hideBorder,\n}: VirtualTableBodyProps) {\n  const {data} = useContext(TableContext);\n\n  // make sure we are not rendering more placeholder rows than there are items left to lazy load\n  const placeholderRowCount = Math.min(totalItems - data.length, 10);\n\n  // only use virtualizer if playlist has more than 3 pages\n  return totalItems < 91 ? (\n    <Body\n      placeholderRowCount={placeholderRowCount}\n      renderRowAs={renderRowAs}\n      query={query}\n      hideBorder={hideBorder}\n    />\n  ) : (\n    <VirtualizedBody\n      placeholderRowCount={placeholderRowCount}\n      renderRowAs={renderRowAs}\n      query={query}\n      hideBorder={hideBorder}\n    />\n  );\n}\n\ninterface BodyProps {\n  renderRowAs?: TableProps<any>['renderRowAs'];\n  placeholderRowCount: number;\n  query: UseInfiniteQueryResult;\n  hideBorder?: boolean;\n}\nfunction Body({\n  renderRowAs,\n  placeholderRowCount,\n  query,\n  hideBorder,\n}: BodyProps) {\n  const {data} = useContext(TableContext);\n  return (\n    <tbody>\n      {data.map((track, index) => (\n        <TableRow\n          item={track}\n          index={index}\n          key={track.id}\n          renderAs={renderRowAs}\n          hideBorder={hideBorder}\n        />\n      ))}\n      <Sentinel\n        dataCount={data.length}\n        placeholderRowCount={placeholderRowCount}\n        query={query}\n      />\n    </tbody>\n  );\n}\n\nfunction VirtualizedBody({renderRowAs, placeholderRowCount, query}: BodyProps) {\n  const {data} = useContext(TableContext);\n  const bodyRef = useRef<HTMLTableSectionElement>(null);\n  const scrollableRef = useRef<Element>(null!);\n  const scrollOffset = useRef(0);\n\n  useEffect(() => {\n    if (bodyRef.current) {\n      scrollableRef.current = getScrollParent(bodyRef.current);\n      scrollOffset.current =\n        bodyRef.current.getBoundingClientRect().top +\n        scrollableRef.current.scrollTop;\n    }\n  }, [bodyRef]);\n\n  const virtualizer = useVirtualizer({\n    overscan: 10,\n    count: data.length,\n    getScrollElement: () => scrollableRef.current,\n    estimateSize: () => 48,\n    observeElementOffset: (instance, cb) => {\n      return observeElementOffset(instance, offset => {\n        cb(offset - scrollOffset.current);\n      });\n    },\n  });\n\n  const virtualRows = virtualizer.getVirtualItems();\n\n  const paddingTop = virtualRows.length > 0 ? virtualRows?.[0]?.start || 0 : 0;\n  const paddingBottom =\n    virtualRows.length > 0\n      ? virtualizer.getTotalSize() -\n        (virtualRows?.[virtualRows.length - 1]?.end || 0)\n      : 0;\n\n  return (\n    <tbody ref={bodyRef}>\n      {paddingTop > 0 && (\n        <tr>\n          <td style={{height: `${paddingTop}px`, border: 'none'}} />\n        </tr>\n      )}\n      {virtualRows.map(virtualItem => {\n        const item = data[virtualItem.index];\n        return (\n          <TableRow\n            item={item}\n            index={virtualItem.index}\n            key={item.id}\n            renderAs={renderRowAs}\n          />\n        );\n      })}\n      <Sentinel\n        dataCount={virtualizer.range.endIndex}\n        placeholderRowCount={placeholderRowCount}\n        query={query}\n      />\n      {paddingBottom > 0 && (\n        <tr>\n          <td style={{height: `${paddingBottom}px`, border: 'none'}} />\n        </tr>\n      )}\n    </tbody>\n  );\n}\n\ninterface SentinelProps extends BodyProps {\n  dataCount: number;\n  query: UseInfiniteQueryResult;\n}\nfunction Sentinel({\n  dataCount,\n  placeholderRowCount,\n  renderRowAs,\n  query,\n}: SentinelProps) {\n  if (placeholderRowCount <= 0) {\n    return null;\n  }\n  return (\n    <InfiniteScrollSentinel query={query} renderSentinelAs=\"tr\">\n      {[...new Array(placeholderRowCount).keys()].map((key, index) => {\n        const id = `placeholder-${key}`;\n        return (\n          <TableRow\n            item={{id, isPlaceholder: true}}\n            index={dataCount + index}\n            key={id}\n            renderAs={renderRowAs}\n          />\n        );\n      })}\n    </InfiniteScrollSentinel>\n  );\n}\n","import {usePaginatedChannelContent} from '@app/web-player/channels/requests/use-paginated-channel-content';\nimport React, {Fragment} from 'react';\nimport {ChannelContentProps} from '@app/web-player/channels/channel-content';\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\nimport {Track} from '@app/web-player/tracks/track';\nimport {VirtualTableBody} from '@app/web-player/playlists/virtual-table-body';\nimport {ChannelHeading} from '@app/web-player/channels/channel-heading';\n\nexport function ChannelTrackTable(props: ChannelContentProps<Track>) {\n  return (\n    <Fragment>\n      <ChannelHeading {...props} />\n      {props.isNested ? (\n        <SimpleTable {...props} />\n      ) : (\n        <PaginatedTable {...props} />\n      )}\n    </Fragment>\n  );\n}\n\nfunction SimpleTable({channel}: ChannelContentProps<Track>) {\n  return (\n    <TrackTable tracks={channel.content?.data || []} enableSorting={false} />\n  );\n}\n\nfunction PaginatedTable({channel}: ChannelContentProps<Track>) {\n  const query = usePaginatedChannelContent(channel);\n\n  const totalItems =\n    channel.content && 'total' in channel.content\n      ? channel.content.total\n      : undefined;\n\n  return (\n    <TrackTable\n      enableSorting={false}\n      tracks={query.items}\n      tableBody={<VirtualTableBody query={query} totalItems={totalItems} />}\n    />\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Comment} from '@common/comments/comment';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface WaveDataResponse extends BackendResponse {\n  waveData: number[][];\n  comments: Comment[];\n}\n\nfunction queryKey(trackId: number | string) {\n  return ['tracks', +trackId, 'wave-data'];\n}\n\nexport function invalidateWaveData(trackId: number | string) {\n  queryClient.invalidateQueries(queryKey(trackId));\n}\n\nexport function useTrackWaveData(\n  trackId: number | string,\n  {enabled}: {enabled?: boolean} = {}\n) {\n  return useQuery(queryKey(trackId), () => fetchWaveData(trackId), {\n    onError: err => showHttpErrorToast(err),\n    enabled,\n  });\n}\n\nfunction fetchWaveData(trackId: number | string) {\n  return apiClient\n    .get<WaveDataResponse>(`tracks/${trackId}/wave`)\n    .then(response => response.data);\n}\n","export function drawWaveform(\n  waveData: number[][],\n  canvas: HTMLCanvasElement,\n  color: string\n) {\n  const context = canvas.getContext('2d');\n  if (!context) return;\n  context.clearRect(0, 0, canvas.width, canvas.height);\n\n  // mirror\n  context.fillStyle = color;\n  context.globalAlpha = 0.5;\n  waveData.forEach(lineData => {\n    const height = (55 / 100) * lineData[3];\n    context.fillRect(\n      lineData[0],\n      lineData[1] + lineData[3] + 1,\n      lineData[2],\n      height\n    );\n  });\n\n  // main\n  context.fillStyle = color;\n  context.globalAlpha = 1;\n  waveData.forEach(lineData => {\n    context.fillRect(lineData[0], lineData[1], lineData[2], lineData[3]);\n  });\n}\n","import {useCallback, useEffect, useMemo, useRef, useState} from 'react';\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\nimport {ProviderListeners} from '@common/player/player-state';\n\nexport function useBaseSeekbar() {\n  const [time, setTime] = useState(0);\n  const player = usePlayerActions();\n\n  const intervalRef = useRef<ReturnType<typeof setInterval> | undefined>();\n\n  const stopTimer = useCallback(() => {\n    clearInterval(intervalRef.current);\n    intervalRef.current = undefined;\n  }, []);\n\n  const startTimer = useCallback(() => {\n    stopTimer();\n\n    setTime(Math.round(player.getCurrentTime()));\n\n    intervalRef.current = setInterval(() => {\n      setTime(prevTime => {\n        const newTime = prevTime + 1;\n        if (newTime > player.getState().mediaDuration) {\n          stopTimer();\n          return prevTime;\n        }\n        return newTime;\n      });\n    }, 1000);\n  }, [player, stopTimer]);\n\n  // sync seekbar with playback progress and status\n  const listeners: ProviderListeners = useMemo(() => {\n    return {\n      onPlay: () => {\n        startTimer();\n      },\n      onPause: () => {\n        stopTimer();\n      },\n      onSeek: time => setTime(time),\n      onPlaybackEnd: () => stopTimer(),\n    };\n  }, [startTimer, stopTimer]);\n\n  useEffect(() => {\n    return stopTimer;\n  }, [stopTimer]);\n\n  return {time, setTime, listeners, startTimer, stopTimer, player};\n}\n","import {Track} from '@app/web-player/tracks/track';\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\nimport {useEffect} from 'react';\nimport {\n  tracksToMediaItems,\n  trackToMediaItem,\n} from '@app/web-player/tracks/utils/track-to-media-item';\nimport {useBaseSeekbar} from '@app/web-player/player-controls/seekbar/use-base-seekbar';\n\nexport function useTrackSeekbar(track: Track, queue?: Track[]) {\n  const duration = usePlayerStore(s => {\n    // either use exact duration from provider if this track is cued, or use duration from track props\n    return s.cuedMedia?.id === track.id && s.mediaDuration\n      ? s.mediaDuration\n      : (track.duration || 0) / 1000;\n  });\n\n  const {player, startTimer, stopTimer, listeners, time, setTime} =\n    useBaseSeekbar();\n\n  // when this track is cued, listen to playback events and sync seekbar,\n  // when a different track is cued, unsubscribe and reset seekbar\n  useEffect(() => {\n    let unsubscribeFromPlayback: (() => void) | undefined;\n\n    // subscribe on initial load, if this track is already cued\n    if (player.getState().cuedMedia?.id === track.id) {\n      unsubscribeFromPlayback = player.subscribe(listeners);\n      // if we render seekbar when player is already playing, need to start the timer here\n      if (player.getState().status === 'playing') {\n        startTimer();\n      }\n    }\n\n    const unsubscribeFromCuedTrack = player.subscribe({\n      onCued: media => {\n        if (media?.id === track.id) {\n          unsubscribeFromPlayback = player.subscribe(listeners);\n        } else {\n          unsubscribeFromPlayback?.();\n          stopTimer();\n          setTime(0);\n        }\n      },\n    });\n\n    return () => {\n      unsubscribeFromCuedTrack?.();\n      unsubscribeFromPlayback?.();\n    };\n  }, [player, track, listeners, setTime, stopTimer, startTimer]);\n\n  return {\n    duration,\n    minValue: 0,\n    maxValue: duration,\n    value: time,\n    onPointerDown: () => {\n      stopTimer();\n      player.pause();\n      player.cue(trackToMediaItem(track));\n    },\n    onChange: (value: number) => {\n      setTime(value);\n      player.seek(value);\n    },\n    onChangeEnd: () => {\n      if (queue?.length) {\n        const pointer = queue?.findIndex(t => t.id === track.id);\n        player.overrideQueueAndPlay(tracksToMediaItems(queue), pointer);\n      } else {\n        player.play(track ? trackToMediaItem(track) : undefined);\n      }\n    },\n  };\n}\n","import {\n  createContext,\n  MutableRefObject,\n  RefObject,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\ninterface CommentBarContextValue {\n  newCommentInputRef: RefObject<HTMLInputElement>;\n  newCommentPositionRef: MutableRefObject<number>;\n  markerIsVisible: boolean;\n  setMarkerIsVisible: (value: boolean) => void;\n  disableCommenting: boolean;\n}\n\nexport const CommentBarContext = createContext<CommentBarContextValue>(null!);\n\ninterface CommentBarContextProps {\n  children: any;\n  disableCommenting?: boolean;\n}\nexport function CommentBarContextProvider({\n  children,\n  disableCommenting = false,\n}: CommentBarContextProps) {\n  const [markerIsVisible, setMarkerIsVisible] = useState(false);\n  const newCommentInputRef = useRef<HTMLInputElement>(null);\n  const newCommentPositionRef = useRef<number>(0);\n  const value: CommentBarContextValue = useMemo(() => {\n    return {\n      newCommentInputRef,\n      newCommentPositionRef,\n      markerIsVisible,\n      setMarkerIsVisible,\n      disableCommenting,\n    };\n  }, [markerIsVisible, disableCommenting]);\n  return (\n    <CommentBarContext.Provider value={value}>\n      {children}\n    </CommentBarContext.Provider>\n  );\n}\n","import {getUserImage} from '@app/web-player/users/user-image';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {useSlider} from '@common/ui/forms/slider/use-slider';\nimport {useAuth} from '@common/auth/use-auth';\nimport {useContext} from 'react';\nimport {Avatar} from '@common/ui/images/avatar';\nimport clsx from 'clsx';\nimport {useInteractOutside} from '@react-aria/interactions';\nimport {CommentBarContext} from '@app/web-player/tracks/waveform/comment-bar-context';\nimport {Comment} from '@common/comments/comment';\nimport {Track} from '@app/web-player/tracks/track';\n\ninterface CommentBarProps {\n  comments: Comment[];\n  track: Track;\n}\nexport function CommentBar({comments, track}: CommentBarProps) {\n  const {user, hasPermission} = useAuth();\n  const {\n    newCommentInputRef,\n    newCommentPositionRef,\n    markerIsVisible,\n    setMarkerIsVisible,\n    ...commentBarContext\n  } = useContext(CommentBarContext);\n\n  const disableCommenting =\n    commentBarContext.disableCommenting || !hasPermission('comments.create');\n\n  const {domProps, groupId, trackRef, getThumbPercent} = useSlider({\n    onChange: () => {\n      setMarkerIsVisible(true);\n      newCommentPositionRef.current = getThumbPercent(0) * 100;\n    },\n    onChangeEnd: () => {\n      newCommentInputRef.current?.focus();\n    },\n  });\n\n  useInteractOutside({\n    ref: trackRef,\n    onInteractOutside: e => {\n      if (!newCommentInputRef.current?.contains(e.target as HTMLElement)) {\n        setMarkerIsVisible(false);\n      }\n    },\n  });\n\n  return (\n    <div\n      className={clsx(\n        'absolute top-48 left-0 h-26 w-full isolate',\n        !disableCommenting && 'cursor-pointer'\n      )}\n      ref={trackRef}\n      {...(disableCommenting ? {} : domProps)}\n      id={groupId}\n    >\n      {markerIsVisible ? (\n        <div\n          className=\"absolute top-0 left-0 z-20 overflow-hidden w-26 h-26 shadow-md -translate-x-1/2 cursor-move\"\n          style={{left: `${getThumbPercent(0) * 100}%`}}\n        >\n          <Avatar src={user?.avatar} size=\"w-full h-full\" />\n        </div>\n      ) : null}\n      {comments.map(comment => {\n        if (!comment.user) return null;\n        return (\n          <DialogTrigger key={comment.id} type=\"popover\" triggerOnHover>\n            <div\n              style={{left: `${Math.min(99, comment.position || 0)}%`}}\n              className={clsx(\n                'transition-opacity duration-300 ease-in-out absolute top-0 -translate-x-1/2 cursor-pointer',\n                markerIsVisible ? 'opacity-40' : 'opacity-100'\n              )}\n            >\n              <div\n                className=\"bg-cover w-16 h-16 rounded shadow bg-chip\"\n                style={{backgroundImage: `url(${getUserImage(comment.user)})`}}\n              />\n            </div>\n            <CommentDialog comment={comment} />\n          </DialogTrigger>\n        );\n      })}\n    </div>\n  );\n}\n\ninterface CommentDialogProps {\n  comment: Comment;\n}\nfunction CommentDialog({comment}: CommentDialogProps) {\n  return (\n    <Dialog size=\"w-auto\">\n      <DialogBody padding=\"p-8\">\n        <div className=\"flex items-center gap-10\">\n          {comment.user && (\n            <div className=\"text-primary\">{comment.user.display_name}</div>\n          )}\n          <div>{comment.content}</div>\n        </div>\n      </DialogBody>\n    </Dialog>\n  );\n}\n","import {Track} from '@app/web-player/tracks/track';\nimport {useEffect, useRef, useState} from 'react';\nimport {useTrackWaveData} from '@app/web-player/tracks/requests/use-track-wave-data';\nimport {\n  WAVE_HEIGHT,\n  WAVE_WIDTH,\n} from '@app/web-player/tracks/waveform/generate-waveform-data';\nimport clsx from 'clsx';\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\nimport {useSlider} from '@common/ui/forms/slider/use-slider';\nimport {useThemeSelector} from '@common/ui/themes/theme-selector-context';\nimport {themeValueToHex} from '@common/ui/themes/utils/theme-value-to-hex';\nimport {AnimatePresence} from 'framer-motion';\nimport {drawWaveform} from '@app/web-player/tracks/waveform/draw-waveform';\nimport {useTrackSeekbar} from '@app/web-player/player-controls/seekbar/use-track-seekbar';\nimport {CommentBar} from '@app/web-player/tracks/waveform/comment-bar';\n\nconst durationClassName =\n  'text-[11px] absolute bottom-32 p-3 rounded text-white font-semibold z-30 pointer-events-none bg-black/80';\n\ninterface WaveformProps {\n  track: Track;\n  queue?: Track[];\n  className?: string;\n}\nexport function Waveform({track, queue, className}: WaveformProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const progressCanvasRef = useRef<HTMLCanvasElement>(null);\n  // when wave is scrolled into view\n  const [isInView, setIsInView] = useState(false);\n  // after wave is drawn into canvas and fade in animation should start running\n  const [isVisible, setIsVisible] = useState(false);\n  const {data} = useTrackWaveData(track.id, {enabled: isInView});\n  const themeSelector = useThemeSelector();\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries: IntersectionObserverEntry[]) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting && entry.target === ref.current) {\n            setIsInView(true);\n            observer.disconnect();\n          }\n        });\n      },\n      {root: document.body}\n    );\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n    return () => observer.disconnect();\n  }, []);\n\n  useEffect(() => {\n    if (canvasRef.current && data?.waveData && progressCanvasRef.current) {\n      drawWaveform(data.waveData, canvasRef.current, '#666');\n      drawWaveform(\n        data.waveData,\n        progressCanvasRef.current,\n        themeValueToHex(themeSelector.selectedTheme.colors['--be-primary'])\n      );\n      setIsVisible(true);\n    }\n  }, [data, themeSelector.selectedTheme]);\n\n  const {value, onChange, duration, ...sliderProps} = useTrackSeekbar(\n    track,\n    queue\n  );\n  const {domProps, groupId, thumbIds, trackRef, getThumbPercent} = useSlider({\n    ...sliderProps,\n    value: [value],\n    onChange: ([newValue]: number[]) => onChange(newValue),\n  });\n\n  return (\n    <AnimatePresence mode=\"wait\">\n      <section className=\"relative max-w-full\">\n        <div\n          id={groupId}\n          role=\"group\"\n          ref={ref}\n          className={clsx(\n            'relative isolate h-70 cursor-pointer overflow-hidden transition-opacity duration-200 ease-in',\n            isVisible ? 'opacity-100' : 'opacity-0',\n            className\n          )}\n        >\n          <output\n            className={clsx(durationClassName, 'left-0')}\n            htmlFor={thumbIds[0]}\n            aria-live=\"off\"\n          >\n            {value ? <FormattedDuration seconds={value} /> : '0:00'}\n          </output>\n          <div key=\"wave\" {...domProps} ref={trackRef}>\n            <canvas\n              ref={canvasRef}\n              width={WAVE_WIDTH}\n              height={WAVE_HEIGHT + 25}\n            />\n            <div\n              className=\"absolute top-0 left-0 z-20 overflow-hidden w-0\"\n              style={{width: `${getThumbPercent(0) * 100}%`}}\n            >\n              <canvas\n                ref={progressCanvasRef}\n                width={WAVE_WIDTH}\n                height={WAVE_HEIGHT + 25}\n              />\n            </div>\n          </div>\n          <div className={clsx(durationClassName, 'right-0')}>\n            <FormattedDuration seconds={duration} />\n          </div>\n        </div>\n        {data?.comments && (\n          <CommentBar comments={data.comments} track={track} />\n        )}\n      </section>\n    </AnimatePresence>\n  );\n}\n","import {Slider} from '@common/ui/forms/slider/slider';\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\nimport {useTrackSeekbar} from '@app/web-player/player-controls/seekbar/use-track-seekbar';\nimport {Track} from '@app/web-player/tracks/track';\nimport clsx from 'clsx';\n\ninterface TrackSeekbarProps {\n  track: Track;\n  queue?: Track[];\n  className?: string;\n}\nexport function TrackSeekbar({track, queue, className}: TrackSeekbarProps) {\n  const {duration, ...sliderProps} = useTrackSeekbar(track, queue);\n\n  return (\n    <div className={clsx('flex items-center gap-12', className)}>\n      <div className=\"text-xs text-muted flex-shrink-0 min-w-40 text-right\">\n        {sliderProps.value ? (\n          <FormattedDuration seconds={sliderProps.value} />\n        ) : (\n          '0:00'\n        )}\n      </div>\n      <Slider\n        trackColor=\"neutral\"\n        thumbSize=\"w-14 h-14\"\n        showThumbOnHoverOnly={true}\n        className=\"flex-auto\"\n        width=\"w-auto\"\n        {...sliderProps}\n      />\n      <div className=\"text-xs text-muted flex-shrink-0 min-w-40\">\n        <FormattedDuration seconds={duration} />\n      </div>\n    </div>\n  );\n}\n","import {Track} from '@app/web-player/tracks/track';\n\nexport function trackIsLocallyUploaded(track: Track): boolean {\n  return (\n    track?.url != null &&\n    (track.url.startsWith('storage') ||\n      track.url.includes('storage/track_media'))\n  );\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {Commentable} from '@common/comments/commentable';\nimport {Comment} from '@common/comments/comment';\n\ninterface Response extends BackendResponse {\n  //\n}\n\nexport interface CreateCommentPayload {\n  commentable: Commentable;\n  content: string;\n  inReplyTo?: Comment;\n}\n\nexport function useCreateComment() {\n  return useMutation((props: CreateCommentPayload) => createComment(props), {\n    onSuccess: (response, props) => {\n      toast(message('Comment posted'));\n      queryClient.invalidateQueries([\n        'comment',\n        `${props.commentable.id}-${props.commentable.model_type}`,\n      ]);\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction createComment({\n  commentable,\n  content,\n  inReplyTo,\n  ...other\n}: CreateCommentPayload): Promise<Response> {\n  const payload = {\n    commentable_id: commentable.id,\n    commentable_type: commentable.model_type,\n    content,\n    inReplyTo,\n    ...other,\n  };\n  return apiClient.post('comment', payload).then(r => r.data);\n}\n","import {Commentable} from '@common/comments/commentable';\nimport {Comment} from '@common/comments/comment';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useAuth} from '@common/auth/use-auth';\nimport {useCreateComment} from '@common/comments/requests/use-create-comment';\nimport {RefObject} from 'react';\nimport clsx from 'clsx';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Avatar} from '@common/ui/images/avatar';\nimport {message} from '@common/i18n/message';\nimport {Trans} from '@common/i18n/trans';\nimport {useObjectRef} from '@react-aria/utils';\n\nexport interface NewCommentFormProps {\n  commentable: Commentable;\n  inReplyTo?: Comment;\n  onSuccess?: () => void;\n  className?: string;\n  autoFocus?: boolean;\n  inputRef?: RefObject<HTMLInputElement>;\n  // additional data that should be sent to backend when creating comments\n  payload?: Record<string, number | string>;\n}\nexport function NewCommentForm({\n  commentable,\n  inReplyTo,\n  onSuccess,\n  className,\n  autoFocus,\n  payload,\n  ...props\n}: NewCommentFormProps) {\n  const {trans} = useTrans();\n  const {user} = useAuth();\n  const createComment = useCreateComment();\n  const inputRef = useObjectRef<HTMLInputElement>(props.inputRef);\n  return (\n    <form\n      className={clsx('py-6', className)}\n      onSubmit={e => {\n        e.preventDefault();\n        if (inputRef.current?.value && !createComment.isLoading) {\n          createComment.mutate(\n            {\n              ...payload,\n              commentable,\n              content: inputRef.current?.value,\n              inReplyTo,\n            },\n            {\n              onSuccess: () => {\n                if (inputRef.current) {\n                  inputRef.current.value = '';\n                }\n                onSuccess?.();\n              },\n            }\n          );\n        }\n      }}\n    >\n      <TextField\n        inputRef={inputRef}\n        autoFocus={autoFocus}\n        startAdornment={\n          <Avatar src={user?.avatar} label={user?.display_name} />\n        }\n        placeholder={trans(message('Write a reply'))}\n        minLength={3}\n      />\n      <button\n        type=\"submit\"\n        className=\"sr-only\"\n        disabled={createComment.isLoading}\n      >\n        <Trans message=\"Submit\" />\n      </button>\n    </form>\n  );\n}\n","import {\n  NewCommentForm,\n  NewCommentFormProps,\n} from '@common/comments/new-comment-form';\nimport React, {useContext} from 'react';\nimport {CommentBarContext} from '@app/web-player/tracks/waveform/comment-bar-context';\nimport {invalidateWaveData} from '@app/web-player/tracks/requests/use-track-wave-data';\nimport {useAuth} from '@common/auth/use-auth';\n\nexport function CommentBarNewCommentForm({\n  commentable,\n  className,\n}: NewCommentFormProps) {\n  const {isLoggedIn} = useAuth();\n  const {newCommentInputRef, newCommentPositionRef, setMarkerIsVisible} =\n    useContext(CommentBarContext);\n\n  if (!isLoggedIn) return null;\n\n  return (\n    <NewCommentForm\n      inputRef={newCommentInputRef}\n      className={className}\n      commentable={commentable}\n      payload={{position: newCommentPositionRef.current}}\n      onSuccess={() => {\n        setMarkerIsVisible(false);\n        invalidateWaveData(commentable.id);\n      }}\n    />\n  );\n}\n","import {useAddItemsToLibrary} from '@app/web-player/library/requests/use-add-items-to-library';\nimport {useRemoveItemsFromLibrary} from '@app/web-player/library/requests/use-remove-items-from-library';\nimport {useLibraryStore} from '@app/web-player/library/state/likes-store';\nimport {Likeable} from '@app/web-player/library/likeable';\nimport {FavoriteIcon} from '@common/icons/material/Favorite';\nimport {FavoriteBorderIcon} from '@common/icons/material/FavoriteBorder';\nimport {Button, ButtonProps} from '@common/ui/buttons/button';\nimport {message} from '@common/i18n/message';\nimport {Trans} from '@common/i18n/trans';\nimport {useAuthClickCapture} from '@app/web-player/use-auth-click-capture';\n\ninterface LikeButtonProps extends Omit<ButtonProps, 'children' | 'onClick'> {\n  likeable: Likeable;\n}\nexport function LikeButton({\n  likeable,\n  radius = 'rounded-full',\n  disabled,\n  ...buttonProps\n}: LikeButtonProps) {\n  const authHandler = useAuthClickCapture();\n  const addToLibrary = useAddItemsToLibrary();\n  const removeFromLibrary = useRemoveItemsFromLibrary();\n  const isLiked = useLibraryStore(s => s.has(likeable));\n  const isLoading = addToLibrary.isLoading || removeFromLibrary.isLoading;\n\n  const labels = getLabels(likeable);\n\n  if (isLiked) {\n    return (\n      <Button\n        {...buttonProps}\n        variant=\"outline\"\n        radius={radius}\n        startIcon={<FavoriteIcon className=\"text-primary\" />}\n        disabled={disabled || isLoading}\n        onClickCapture={authHandler}\n        onClick={() => {\n          removeFromLibrary.mutate({likeables: [likeable]});\n        }}\n      >\n        <Trans {...labels.removeLike} />\n      </Button>\n    );\n  }\n  return (\n    <Button\n      {...buttonProps}\n      variant=\"outline\"\n      radius={radius}\n      startIcon={<FavoriteBorderIcon />}\n      disabled={disabled || isLoading}\n      onClickCapture={authHandler}\n      onClick={() => {\n        addToLibrary.mutate({likeables: [likeable]});\n      }}\n    >\n      <Trans {...labels.like} />\n    </Button>\n  );\n}\n\nfunction getLabels(likeable: Likeable) {\n  switch (likeable.model_type) {\n    case 'artist':\n      return {like: message('Follow'), removeLike: message('Following')};\n    default:\n      return {like: message('Like'), removeLike: message('Liked')};\n  }\n}\n","import {Track} from '@app/web-player/tracks/track';\nimport {Album} from '@app/web-player/albums/album';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {useToggleRepost} from '@app/web-player/reposts/use-toggle-repost';\nimport {useRepostsStore} from '@app/web-player/library/state/reposts-store';\nimport {Button} from '@common/ui/buttons/button';\nimport {RepeatIcon} from '@common/icons/material/Repeat';\nimport clsx from 'clsx';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {ButtonSize} from '@common/ui/buttons/button-size';\nimport {useAuthClickCapture} from '@app/web-player/use-auth-click-capture';\n\ninterface RepostButtonProps {\n  item: Track | Album;\n  className?: string;\n  size?: ButtonSize;\n  radius?: string;\n  disabled?: boolean;\n}\nexport function RepostButton({\n  item,\n  className,\n  size = 'xs',\n  radius,\n  disabled,\n}: RepostButtonProps) {\n  const authHandler = useAuthClickCapture();\n  const {player} = useSettings();\n  const toggleRepost = useToggleRepost();\n  const isReposted = useRepostsStore(s => s.has(item));\n  if (!player?.enable_repost) return null;\n\n  return (\n    <Button\n      className={className}\n      variant=\"outline\"\n      size={size}\n      radius={radius}\n      startIcon={<RepeatIcon className={clsx(isReposted && 'text-primary')} />}\n      disabled={disabled || toggleRepost.isLoading}\n      onClickCapture={authHandler}\n      onClick={() => toggleRepost.mutate({repostable: item})}\n    >\n      {isReposted ? <Trans message=\"Reposted\" /> : <Trans message=\"Repost\" />}\n    </Button>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {Track} from '@app/web-player/tracks/track';\nimport {PlayArrowFilledIcon} from '@app/web-player/tracks/play-arrow-filled';\nimport {FormattedNumber} from '@common/i18n/formatted-number';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {Trans} from '@common/i18n/trans';\nimport {FavoriteIcon} from '@common/icons/material/Favorite';\nimport {RepeatIcon} from '@common/icons/material/Repeat';\nimport {Album} from '@app/web-player/albums/album';\nimport {Artist} from '@app/web-player/artists/artist';\n\ninterface Props {\n  item: Track | Album | Artist;\n  className?: string;\n  showPlays?: boolean;\n}\nexport function MediaItemStats({item, className, showPlays = true}: Props) {\n  return (\n    <div\n      className={clsx('flex items-center gap-20 text-sm text-muted', className)}\n    >\n      {showPlays && <PlayCount item={item} />}\n      <LikesCount item={item} />\n      {item.model_type !== 'artist' && <RepostsCount item={item} />}\n    </div>\n  );\n}\n\ninterface PlayCountProps {\n  item: Track | Album | Artist;\n}\nfunction PlayCount({item}: PlayCountProps) {\n  if (!item.plays) return null;\n\n  const count = (\n    <FormattedNumber\n      compactDisplay=\"short\"\n      notation=\"compact\"\n      value={item.plays}\n    />\n  );\n\n  return (\n    <Tooltip label={<Trans message=\":count plays\" values={{count}} />}>\n      <div>\n        <PlayArrowFilledIcon size=\"xs\" className=\"mr-4\" />\n        {count}\n      </div>\n    </Tooltip>\n  );\n}\n\ninterface LikesCountProps {\n  item: Track | Album | Artist;\n}\nfunction LikesCount({item}: LikesCountProps) {\n  if (!item.likes_count) return null;\n\n  const count = <FormattedNumber value={item.likes_count} />;\n\n  return (\n    <Tooltip label={<Trans message=\":count likes\" values={{count}} />}>\n      <div>\n        <FavoriteIcon size=\"xs\" className=\"mr-4\" />\n        {count}\n      </div>\n    </Tooltip>\n  );\n}\n\ninterface RepostsCountProps {\n  item: Track | Album;\n}\nfunction RepostsCount({item}: RepostsCountProps) {\n  if (!item.reposts_count) return null;\n\n  const count = <FormattedNumber value={item.reposts_count} />;\n\n  return (\n    <Tooltip label={<Trans message=\":count reposts\" values={{count}} />}>\n      <div className=\"hidden @[566px]:block\">\n        <RepeatIcon size=\"xs\" className=\"mr-4\" />\n        {count}\n      </div>\n    </Tooltip>\n  );\n}\n","import React, {Fragment, ReactNode} from 'react';\nimport {LikeButton} from '@app/web-player/library/like-button';\nimport {RepostButton} from '@app/web-player/reposts/repost-button';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {Button} from '@common/ui/buttons/button';\nimport {ShareIcon} from '@common/icons/material/Share';\nimport {Trans} from '@common/i18n/trans';\nimport {MoreHorizIcon} from '@common/icons/material/MoreHoriz';\nimport {TrackContextDialog} from '@app/web-player/tracks/context-dialog/track-context-dialog';\nimport {MediaItemStats} from '@app/web-player/tracks/media-item-stats';\nimport {Track} from '@app/web-player/tracks/track';\nimport {Album} from '@app/web-player/albums/album';\nimport {AlbumContextDialog} from '@app/web-player/albums/album-context-dialog';\nimport clsx from 'clsx';\nimport {ButtonSize} from '@common/ui/buttons/button-size';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {ShareMediaDialog} from '@app/web-player/sharing/share-media-dialog';\n\ninterface Props {\n  item: Track | Album;\n  managesItem: boolean;\n  buttonClassName?: string;\n  buttonGap?: string;\n  buttonSize?: ButtonSize;\n  buttonRadius?: string;\n  children?: ReactNode;\n  className?: string;\n}\nexport function TrackActionsBar({\n  item,\n  managesItem,\n  buttonClassName,\n  buttonGap = 'mr-8',\n  buttonSize = 'xs',\n  buttonRadius = 'rounded',\n  children,\n  className,\n}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <div\n      className={clsx(\n        'flex items-center gap-24 justify-center md:justify-between overflow-hidden @container',\n        className\n      )}\n    >\n      <div>\n        {children}\n        {!isMobile && (\n          <Fragment>\n            <LikeButton\n              size={buttonSize}\n              likeable={item}\n              className={clsx(buttonGap, buttonClassName)}\n              radius={buttonRadius}\n              disabled={managesItem}\n            />\n            <RepostButton\n              item={item}\n              size={buttonSize}\n              radius={buttonRadius}\n              disabled={managesItem}\n              className={clsx(\n                buttonGap,\n                buttonClassName,\n                'hidden @[840px]:inline-flex'\n              )}\n            />\n          </Fragment>\n        )}\n        {!isMobile && (\n          <DialogTrigger type=\"modal\">\n            <Button\n              size={buttonSize}\n              variant=\"outline\"\n              startIcon={<ShareIcon />}\n              className={clsx(\n                buttonGap,\n                buttonClassName,\n                'hidden @[660px]:inline-flex'\n              )}\n              radius={buttonRadius}\n            >\n              <Trans message=\"Share\" />\n            </Button>\n            <ShareMediaDialog item={item} />\n          </DialogTrigger>\n        )}\n        <DialogTrigger type=\"popover\">\n          <Button\n            variant=\"outline\"\n            size={buttonSize}\n            startIcon={<MoreHorizIcon />}\n            className={clsx(buttonGap, buttonClassName)}\n            radius={buttonRadius}\n          >\n            <Trans message=\"More\" />\n          </Button>\n          <MoreDialog item={item} />\n        </DialogTrigger>\n      </div>\n      {!isMobile && <MediaItemStats item={item} />}\n    </div>\n  );\n}\n\ninterface MoreDialogProps {\n  item: Track | Album;\n}\nfunction MoreDialog({item}: MoreDialogProps) {\n  if (item.model_type === 'track') {\n    return <TrackContextDialog tracks={[item]} />;\n  }\n  return <AlbumContextDialog album={item} />;\n}\n","import {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {Waveform} from '@app/web-player/tracks/waveform/waveform';\nimport {Track} from '@app/web-player/tracks/track';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {TrackSeekbar} from '@app/web-player/player-controls/seekbar/track-seekbar';\nimport {trackIsLocallyUploaded} from '@app/web-player/tracks/utils/track-is-locally-uploaded';\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\nimport {\n  CommentBarContext,\n  CommentBarContextProvider,\n} from '@app/web-player/tracks/waveform/comment-bar-context';\nimport {CommentBarNewCommentForm} from '@app/web-player/tracks/waveform/comment-bar-new-comment-form';\nimport React, {Fragment, memo, useContext} from 'react';\nimport {AnimatePresence} from 'framer-motion';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {GenreLink} from '@app/web-player/genres/genre-link';\nimport {RepeatIcon} from '@common/icons/material/Repeat';\nimport {TrackLink} from '@app/web-player/tracks/track-link';\nimport {useTrackPermissions} from '@app/web-player/tracks/hooks/use-track-permissions';\nimport {User} from '@common/auth/user';\nimport {UserProfileLink} from '@app/web-player/users/user-profile-link';\nimport {TrackActionsBar} from '@app/web-player/tracks/track-actions-bar';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport clsx from 'clsx';\n\ninterface TrackListItemProps {\n  track: Track;\n  queue?: Track[];\n  reposter?: User;\n  className?: string;\n  hideArtwork?: boolean;\n  hideActions?: boolean;\n  linksInNewTab?: boolean;\n}\nexport const TrackListItem = memo(\n  ({\n    track,\n    queue,\n    reposter,\n    className,\n    hideArtwork = false,\n    hideActions = false,\n    linksInNewTab = false,\n  }: TrackListItemProps) => {\n    const {player} = useSettings();\n    const isMobile = useIsMobileMediaQuery();\n    hideArtwork = hideArtwork || !!isMobile;\n    const {managesTrack} = useTrackPermissions([track]);\n\n    const showWave =\n      player?.seekbar_type === 'waveform' && trackIsLocallyUploaded(track);\n\n    return (\n      <div\n        className={clsx(\n          'overflow-hidden',\n          !hideArtwork && 'flex gap-24',\n          className\n        )}\n      >\n        {!hideArtwork && (\n          <TrackImage\n            track={track}\n            className=\"flex-shrink-0 rounded\"\n            size=\"w-184 h-184\"\n          />\n        )}\n        <div className=\"flex-auto min-w-0\">\n          <div className=\"flex items-center gap-14\">\n            <PlaybackToggleButton\n              track={track}\n              tracks={queue}\n              buttonType=\"icon\"\n              color=\"primary\"\n              variant=\"flat\"\n              radius=\"rounded-full\"\n              equalizerColor=\"white\"\n            />\n            <div>\n              <div className=\"text-sm text-muted flex items-center gap-6\">\n                <ArtistLinks\n                  artists={track.artists}\n                  target={linksInNewTab ? '_blank' : undefined}\n                />\n                {reposter && (\n                  <Fragment>\n                    <RepeatIcon size=\"xs\" />\n                    <UserProfileLink\n                      user={reposter}\n                      target={linksInNewTab ? '_blank' : undefined}\n                    />\n                  </Fragment>\n                )}\n              </div>\n              <div>\n                <TrackLink\n                  track={track}\n                  target={linksInNewTab ? '_blank' : undefined}\n                />\n              </div>\n            </div>\n            <div className=\"ml-auto text-sm\">\n              <FormattedRelativeTime date={track.created_at} />\n              {track.genres?.length && (\n                <Chip className=\"mt-6 w-max\" size=\"xs\">\n                  <GenreLink\n                    genre={track.genres[0]}\n                    target={linksInNewTab ? '_blank' : undefined}\n                  />\n                </Chip>\n              )}\n            </div>\n          </div>\n          <div className=\"mt-20\">\n            {showWave ? (\n              <CommentBarContextProvider disableCommenting={hideActions}>\n                <WaveformWithComments track={track} queue={queue} />\n              </CommentBarContextProvider>\n            ) : (\n              <TrackSeekbar track={track} queue={queue} />\n            )}\n          </div>\n          {!hideActions && (\n            <TrackActionsBar\n              item={track}\n              managesItem={managesTrack}\n              className=\"mt-20\"\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\ninterface WaveformWithCommentsProps {\n  track: Track;\n  queue?: Track[];\n}\nexport function WaveformWithComments({\n  track,\n  queue,\n}: WaveformWithCommentsProps) {\n  const {markerIsVisible} = useContext(CommentBarContext);\n  return (\n    <Fragment>\n      <Waveform track={track} queue={queue} />\n      <AnimatePresence mode=\"wait\">\n        {markerIsVisible && (\n          <CommentBarNewCommentForm\n            className=\"mt-28 mb-8\"\n            commentable={track}\n          />\n        )}\n      </AnimatePresence>\n    </Fragment>\n  );\n}\n","import {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\nimport {TrackListItem} from '@app/web-player/tracks/track-list/track-list-item';\nimport React from 'react';\nimport {Track} from '@app/web-player/tracks/track';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {VirtualTableBody} from '@app/web-player/playlists/virtual-table-body';\nimport {UseInfiniteDataResult} from '@common/ui/infinite-scroll/use-infinite-data';\n\ninterface Props {\n  tracks?: Track[];\n  query?: UseInfiniteDataResult<Track>;\n}\nexport function TrackList({tracks, query}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n\n  if (!tracks) {\n    tracks = query ? query.items : [];\n  }\n\n  if (isMobile) {\n    if (!query) {\n      return <TrackTable tracks={tracks} />;\n    }\n    return (\n      <TrackTable\n        tracks={tracks}\n        tableBody={<VirtualTableBody query={query} />}\n      />\n    );\n  }\n\n  return (\n    <div>\n      {tracks.map(track => (\n        <TrackListItem\n          queue={tracks}\n          key={track.id}\n          track={track}\n          className=\"mb-40\"\n        />\n      ))}\n      {query && <InfiniteScrollSentinel query={query} />}\n    </div>\n  );\n}\n","import {usePaginatedChannelContent} from '@app/web-player/channels/requests/use-paginated-channel-content';\nimport React, {Fragment} from 'react';\nimport {ChannelContentProps} from '@app/web-player/channels/channel-content';\nimport {Track} from '@app/web-player/tracks/track';\nimport {ChannelHeading} from '@app/web-player/channels/channel-heading';\nimport {TrackList} from '@app/web-player/tracks/track-list/track-list';\n\nexport function ChannelTrackList(props: ChannelContentProps<Track>) {\n  return (\n    <Fragment>\n      <ChannelHeading {...props} />\n      {props.isNested ? (\n        <TrackList tracks={props.channel.content?.data} />\n      ) : (\n        <PaginatedList {...props} />\n      )}\n    </Fragment>\n  );\n}\n\nfunction PaginatedList({channel}: ChannelContentProps<Track>) {\n  const query = usePaginatedChannelContent<Track>(channel);\n  return <TrackList query={query} />;\n}\n","var functionDebounce = debounce;\n\nfunction debounce(fn, wait, callFirst) {\n  var timeout = null;\n  var debouncedFn = null;\n\n  var clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n\n      debouncedFn = null;\n      timeout = null;\n    }\n  };\n\n  var flush = function() {\n    var call = debouncedFn;\n    clear();\n\n    if (call) {\n      call();\n    }\n  };\n\n  var debounceWrapper = function() {\n    if (!wait) {\n      return fn.apply(this, arguments);\n    }\n\n    var context = this;\n    var args = arguments;\n    var callNow = callFirst && !timeout;\n    clear();\n\n    debouncedFn = function() {\n      fn.apply(context, args);\n    };\n\n    timeout = setTimeout(function() {\n      timeout = null;\n\n      if (!callNow) {\n        var call = debouncedFn;\n        debouncedFn = null;\n\n        return call();\n      }\n    }, wait);\n\n    if (callNow) {\n      return debouncedFn();\n    }\n  };\n\n  debounceWrapper.cancel = clear;\n  debounceWrapper.flush = flush;\n\n  return debounceWrapper;\n}\n\nexport {functionDebounce as default};\n","import React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {KeyboardArrowRightIcon} from '@common/icons/material/KeyboardArrowRight';\nimport {KeyboardArrowLeftIcon} from '@common/icons/material/KeyboardArrowLeft';\nimport {ChannelContentProps} from '@app/web-player/channels/channel-content';\nimport {ChannelContentGridItem} from '@app/web-player/channels/channel-content-grid-item';\nimport {ChannelHeading} from '@app/web-player/channels/channel-heading';\nimport debounce from 'just-debounce-it';\n\nexport function ChannelContentCarousel(props: ChannelContentProps) {\n  const {channel} = props;\n  const ref = useRef<HTMLDivElement>(null);\n  const itemWidth = useRef<number>(0);\n\n  const [enablePrev, setEnablePrev] = useState(false);\n  const [enableNext, setEnableNext] = useState(true);\n\n  const updateNavStatus = useCallback(() => {\n    const el = ref.current;\n    if (el && itemWidth.current) {\n      setEnablePrev(el.scrollLeft > 0);\n      setEnableNext(el.scrollWidth - el.scrollLeft !== el.clientWidth);\n    }\n  }, []);\n\n  // enable/disable navigation buttons based on element scroll offset\n  useEffect(() => {\n    const el = ref.current;\n    const handleScroll = debounce(() => updateNavStatus(), 100);\n    if (el) {\n      el.addEventListener('scroll', handleScroll);\n    }\n    return () => el?.removeEventListener('scroll', handleScroll);\n  }, [updateNavStatus]);\n\n  // get width for first grid item\n  useLayoutEffect(() => {\n    const el = ref.current;\n    if (el) {\n      const firstGridItem = el.children.item(0);\n      const observer = new ResizeObserver(entries => {\n        itemWidth.current = entries[0].contentRect.width;\n        updateNavStatus();\n      });\n      if (firstGridItem) {\n        observer.observe(firstGridItem);\n      }\n      return () => observer.unobserve(el);\n    }\n  }, [updateNavStatus]);\n\n  const scrollAmount = () => {\n    return itemWidth.current * (3 - 1);\n  };\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between gap-24 mb-14\">\n        <ChannelHeading {...props} margin=\"mb-4\" />\n        <div>\n          <IconButton\n            disabled={!enablePrev}\n            onClick={() => {\n              if (ref.current) {\n                ref.current.scrollBy({left: -scrollAmount()});\n              }\n            }}\n          >\n            <KeyboardArrowLeftIcon />\n          </IconButton>\n          <IconButton\n            disabled={!enableNext}\n            onClick={() => {\n              if (ref.current) {\n                ref.current.scrollBy({left: scrollAmount()});\n              }\n            }}\n          >\n            <KeyboardArrowRightIcon />\n          </IconButton>\n        </div>\n      </div>\n      <div\n        ref={ref}\n        className=\"content-carousel content-grid relative w-full grid grid-flow-col grid-rows-[auto] overflow-x-auto overflow-y-hidden gap-24 snap-always snap-x snap-mandatory hidden-scrollbar scroll-smooth\"\n      >\n        {channel.content?.data.map(item => (\n          <ChannelContentGridItem\n            key={`${item.id}-${item.model_type}`}\n            item={item}\n            items={channel.content?.data}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import {\n  Channel,\n  CHANNEL_MODEL,\n  ChannelContentItem,\n} from '@app/web-player/channels/channel';\nimport {Track, TRACK_MODEL} from '@app/web-player/tracks/track';\nimport React, {Fragment} from 'react';\nimport {ChannelContentGrid} from '@app/web-player/channels/channel-content-grid';\nimport {ChannelTrackTable} from '@app/web-player/channels/channel-track-table';\nimport {ChannelTrackList} from '@app/web-player/channels/channel-track-list';\nimport {ChannelContentCarousel} from '@app/web-player/channels/channel-content-carousel';\nimport {ChannelHeading} from '@app/web-player/channels/channel-heading';\n\nexport interface ChannelContentProps<\n  T extends ChannelContentItem = ChannelContentItem\n> {\n  channel: Channel<T>;\n  isNested?: boolean;\n}\nexport function ChannelContent(props: ChannelContentProps) {\n  const {channel, isNested} = props;\n  const contentModel = channel.config.contentModel;\n  const layout = channel.config.layout;\n  if (!channel.content) {\n    return null;\n  }\n\n  if (contentModel === TRACK_MODEL && layout === 'trackList') {\n    return <ChannelTrackList {...(props as ChannelContentProps<Track>)} />;\n  } else if (contentModel === TRACK_MODEL && layout === 'trackTable') {\n    return <ChannelTrackTable {...(props as ChannelContentProps<Track>)} />;\n  }\n\n  if (contentModel === CHANNEL_MODEL) {\n    return <NestedChannels {...(props as ChannelContentProps<Channel>)} />;\n  } else {\n    return channel.config.carouselWhenNested && isNested ? (\n      <ChannelContentCarousel {...props} />\n    ) : (\n      <ChannelContentGrid {...props} />\n    );\n  }\n}\n\nfunction NestedChannels({channel}: ChannelContentProps<Channel>) {\n  return (\n    <Fragment>\n      <ChannelHeading channel={channel} />\n      {channel.content?.data.map(nestedChannel => (\n        <div key={nestedChannel.id} className=\"mb-50\">\n          <ChannelContent channel={nestedChannel} isNested />\n        </div>\n      ))}\n    </Fragment>\n  );\n}\n","import {useAuth} from '../../auth/use-auth';\nimport {memo, useEffect, useId, useMemo, useRef} from 'react';\nimport lazyLoader from '../../utils/http/lazy-loader';\nimport clsx from 'clsx';\nimport {useSettings} from '../../core/settings/use-settings';\nimport dot from 'dot-object';\nimport {Settings} from '@common/core/settings/settings';\n\ninterface AdHostProps {\n  slot: keyof Omit<NonNullable<Settings['ads']>, 'disable'>;\n  className?: string;\n}\nexport function AdHost({slot, className}: AdHostProps) {\n  const settings = useSettings();\n  const {isSubscribed} = useAuth();\n  const adCode = useMemo(() => {\n    return dot.pick(`ads.${slot}`, settings);\n  }, [slot, settings]);\n\n  if (settings.ads?.disable || isSubscribed || !adCode) return null;\n\n  return <InvariantAd className={className} slot={slot} adCode={adCode} />;\n}\n\ninterface InvariantAdProps {\n  slot: string;\n  adCode: string;\n  className?: string;\n}\nconst InvariantAd = memo(\n  ({slot, adCode, className}: InvariantAdProps) => {\n    const ref = useRef<HTMLDivElement>(null);\n\n    const id = useId();\n\n    useEffect(() => {\n      if (ref.current) {\n        loadAdScripts(adCode, ref.current).then(() => {\n          executeAdJavascript(adCode, id);\n        });\n      }\n      return () => {\n        // @ts-ignore\n        delete window['google_ad_modifications'];\n      };\n    }, [adCode, id]);\n\n    return (\n      <div\n        ref={ref}\n        id={id}\n        className={clsx(\n          'ad-host flex items-center justify-center w-full max-w-full overflow-hidden min-h-90 max-h-[600px]',\n          `${slot.replace(/\\./g, '-')}-host`,\n          className\n        )}\n        dangerouslySetInnerHTML={{__html: getAdHtml(adCode)}}\n      ></div>\n    );\n  },\n  () => {\n    // never re-render\n    return false;\n  }\n);\n\nfunction getAdHtml(adCode: string) {\n  // strip out all script tags from ad code and leave only html\n  return adCode\n    ?.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n    .trim();\n}\n\n// Load any external scripts needed by ad.\nfunction loadAdScripts(adCode: string, parentEl: HTMLDivElement): Promise<any> {\n  const promises = [];\n\n  // load ad code script\n  const pattern = /<script.*?src=['\"](.*?)['\"]/g;\n  let match;\n\n  while ((match = pattern.exec(adCode))) {\n    if (match[1]) {\n      promises.push(lazyLoader.loadAsset(match[1], {type: 'js', parentEl}));\n    }\n  }\n\n  return Promise.all(promises);\n}\n\n// Execute ad code javascript and replace document.write if needed.\nfunction executeAdJavascript(adCode: string, id: string) {\n  // find any ad code javascript that needs to be executed\n  const pattern = /<script\\b[^>]*>([\\s\\S]*?)<\\/script>/g;\n  let content;\n\n  while ((content = pattern.exec(adCode))) {\n    if (content[1]) {\n      const r = `var d = document.createElement('div'); d.innerHTML = $1; document.getElementById('${id}').appendChild(d.firstChild);`;\n      const toEval = content[1].replace(/document.write\\((.+?)\\);/, r);\n      eval(toEval);\n    }\n  }\n}\n","import {useChannel} from '@app/web-player/channels/requests/use-channel';\nimport React from 'react';\nimport {Helmet} from '@common/seo/helmet';\nimport {ChannelContent} from '@app/web-player/channels/channel-content';\nimport {PageStatus} from '@common/http/page-status';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\ninterface ChannelPageProps {\n  slugOrId?: string | number;\n}\nexport function ChannelPage({slugOrId}: ChannelPageProps) {\n  const query = useChannel(slugOrId);\n\n  if (query.data) {\n    return (\n      <div>\n        <Helmet tags={query.data.seo} />\n        <div className=\"pb-24\">\n          <AdHost slot=\"general_top\" className=\"mb-34\" />\n          <ChannelContent\n            channel={query.data.channel}\n            // set key to force re-render when channel changes\n            key={query.data.channel.id}\n          />\n          <AdHost slot=\"general_bottom\" className=\"mt-34\" />\n        </div>\n      </div>\n    );\n  }\n\n  return <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />;\n}\n","import {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Track} from '@app/web-player/tracks/track';\n\ninterface Response extends BackendResponse {\n  results: {title: string; id: string}[];\n}\n\nconst endpoint = (track: Track) => {\n  const artistName =\n    track.artists?.[0]?.name || track.album?.artists?.[0]?.name;\n  return `search/audio/${track.id}/${doubleEncode(artistName!)}/${doubleEncode(\n    track.name\n  )}`;\n};\n\nexport async function findYoutubeVideosForTrack(\n  track: Track\n): Promise<Response['results']> {\n  const query = {\n    queryKey: [endpoint(track)],\n    queryFn: async () => findMatch(track),\n    staleTime: Infinity,\n  };\n\n  const response =\n    queryClient.getQueryData<Response>(query.queryKey) ??\n    (await queryClient.fetchQuery(query));\n\n  return response?.results || [];\n}\n\nfunction findMatch(track: Track): Promise<Response> {\n  return apiClient.get(endpoint(track)).then(response => response.data);\n}\n\nfunction doubleEncode(value: string) {\n  return encodeURIComponent(encodeURIComponent(value));\n}\n","import create from 'zustand';\nimport {immer} from 'zustand/middleware/immer';\n\ninterface OverlayState {\n  isMaximized: boolean;\n  isQueueOpen: boolean;\n  toggle: () => void;\n  toggleQueue: () => void;\n}\n\nexport const usePlayerOverlayStore = create<OverlayState>()(\n  immer((set, get) => ({\n    isMaximized: false,\n    isQueueOpen: false,\n    toggle: () => {\n      set(state => {\n        state.isMaximized = !state.isMaximized;\n      });\n    },\n    toggleQueue: () => {\n      set(state => {\n        state.isQueueOpen = !state.isQueueOpen;\n      });\n    },\n  }))\n);\n\nexport const playerOverlayState = usePlayerOverlayStore.getState();\n","import {PlayerStoreOptions} from '@common/player/player-store-options';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {findYoutubeVideosForTrack} from '@app/web-player/tracks/requests/find-youtube-videos-for-track';\nimport {YoutubeProvider} from '@common/player/providers/youtube-provider';\nimport {MediaItem, YoutubeMediaItem} from '@common/player/media-item';\nimport {apiClient} from '@common/http/query-client';\nimport {Track} from '@app/web-player/tracks/track';\nimport {playerOverlayState} from '@app/web-player/state/player-overlay-store';\nimport {loadMediaItemTracks} from '@app/web-player/requests/load-media-item-tracks';\nimport {tracksToMediaItems} from '@app/web-player/tracks/utils/track-to-media-item';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport OnErrorEvent = YT.OnErrorEvent;\n\n// used to track play history for logging plays on backend (prevents logging play twice, unless track is fully played)\nconst trackPlays = new Set<number>();\n\n// on mobile, YouTube embed playback needs to be started via user gesture the first\n// time on YouTube embed itself, starting it with custom play button will not work\nlet playbackStartedViaGesture = false;\n\n// this is needed in order to stop YouTube embed from playing trying to\n// cue a video that will error out while valid video is already playing\nconst failedVideoId = ' ';\n\n// list of video Ids for which YouTube embed errored out\nconst failedVideoIds = new Set<string>();\nlet tracksSkippedDueToError = 0;\n\nasync function resolveSrc(media: YoutubeMediaItem) {\n  const results = await findYoutubeVideosForTrack(media.meta);\n  // Find first video ID that did not error out yet\n  const match = results?.find(r => !failedVideoIds.has(`${r.id}`))?.id;\n  return {\n    ...media,\n    src: match || failedVideoId,\n  };\n}\n\nfunction setMediaSessionMetadata(media: MediaItem<Track>) {\n  if ('mediaSession' in navigator) {\n    const track = media.meta;\n    const image = track.image || track.album?.image;\n    navigator.mediaSession.metadata = new MediaMetadata({\n      title: track.name,\n      artist: track.artists?.[0].name,\n      album: track.album?.name,\n      artwork: image\n        ? [\n            {\n              src: image,\n              sizes: '300x300',\n              type: 'image/jpg',\n            },\n          ]\n        : undefined,\n    });\n  }\n}\n\nexport const playerStoreOptions: Partial<PlayerStoreOptions> = {\n  defaultVolume: getBootstrapData().settings.player?.default_volume,\n  setMediaSessionMetadata,\n  youtube: {\n    srcResolver: resolveSrc,\n    suggestedQuality: getBootstrapData().settings.youtube?.suggested_quality,\n    onStateChange: e => {\n      if (e.data === YT.PlayerState.PLAYING) {\n        tracksSkippedDueToError = 0;\n      }\n    },\n  },\n  onBeforePlay: () => {\n    const player = getBootstrapData().settings.player;\n\n    // prevent playback if user does not have permission to play music\n    const hasPermission = userHasPlayPermission();\n    if (!hasPermission) {\n      toast.danger(message('Your current plan does not allow music playback.'));\n      return {preventPlayback: true};\n    }\n\n    if (\n      !playbackStartedViaGesture &&\n      player?.mobile?.auto_open_overlay &&\n      // check if mobile\n      window.matchMedia('(max-width: 768px)').matches\n    ) {\n      playerOverlayState.toggle();\n      playbackStartedViaGesture = true;\n    }\n  },\n  loadMoreMediaItems: async media => {\n    if (media?.groupId) {\n      const tracks = await loadMediaItemTracks(\n        media.groupId as string,\n        media.meta\n      );\n      return tracksToMediaItems(tracks);\n    }\n  },\n  listeners: {\n    // change document title to currently cued track name\n    onCued: (media?: MediaItem<Track>) => {\n      if (!media) return;\n      const site_name = getBootstrapData().settings.branding.site_name;\n      let title = `${media.meta.name}`;\n      const artistName = media.meta.artists?.[0].name;\n\n      if (artistName) {\n        title = `${title} - ${artistName} - ${site_name}`;\n      } else {\n        title = `${title} - ${site_name}`;\n      }\n\n      document.title = title;\n    },\n    onPlay: (media?: MediaItem<Track>) => {\n      if (media && !trackPlays.has(media.meta.id)) {\n        trackPlays.add(media.meta.id);\n        apiClient.post(`track/plays/${media.meta.id}/log`, {\n          queueId: media.groupId,\n        });\n      }\n    },\n    onPlaybackEnd: media => {\n      // clear track play\n      if (media) {\n        trackPlays.delete(media.meta.id);\n      }\n    },\n    onError: async (e, state) => {\n      if (state?.provider?.name === 'youtube') {\n        const provider = state.provider as YoutubeProvider;\n        logYoutubeError(e);\n\n        const videoId = provider.getYoutubeId();\n        if (videoId) {\n          failedVideoIds.add(`${videoId}`);\n        }\n\n        const media = provider.cuedMedia\n          ? await resolveSrc(provider.cuedMedia)\n          : null;\n\n        // try to play alternative videos we fetched\n        if (media?.src && media?.src !== failedVideoId) {\n          await provider.cueYoutubeVideo(media as Required<YoutubeMediaItem>);\n          provider.youtube?.playVideo();\n\n          // there are no more alternative videos to try, we can error out\n        } else {\n          tracksSkippedDueToError++;\n\n          // try to play up to two next queued tracks if we can't play\n          // a video for this one. If we can't play 3 tracks in a row\n          // we can assume there's an issue with YouTube API and bail\n          if (tracksSkippedDueToError <= 2) {\n            provider.listeners.onPlaybackEnd?.();\n          }\n        }\n      } else {\n        tracksSkippedDueToError = 0;\n      }\n    },\n  },\n  onDestroy: () => {\n    tracksSkippedDueToError = 0;\n  },\n};\n\nfunction logYoutubeError(e?: OnErrorEvent) {\n  const videoUrl = e?.target?.getVideoUrl();\n  if (!e || !videoUrl || videoUrl.endsWith('%20')) return; // %20 = failedVideoId\n  apiClient.post('youtube/log-client-error', {\n    code: e.data,\n    videoUrl: e.target.getVideoUrl(),\n  });\n}\n\nfunction userHasPlayPermission(): boolean {\n  const user = getBootstrapData().user;\n  const guest_role = getBootstrapData().guest_role;\n  const permissions = user?.permissions || guest_role?.permissions;\n  return permissions?.find(p => p.name === 'music.play') != null;\n}\n","import {useSettings} from '@common/core/settings/use-settings';\nimport {Link, NavLink} from 'react-router-dom';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useIsDarkMode} from '@common/ui/themes/use-is-dark-mode';\nimport {CustomMenu} from '@common/menus/custom-menu';\nimport {Trans} from '@common/i18n/trans';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {PlaylistAddIcon} from '@common/icons/material/PlaylistAdd';\nimport {ReactNode} from 'react';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {CreatePlaylistDialog} from '@app/web-player/playlists/crupdate-dialog/create-playlist-dialog';\nimport {useAuthUserPlaylists} from '@app/web-player/playlists/requests/use-auth-user-playlists';\nimport {getPlaylistLink} from '@app/web-player/playlists/playlist-link';\nimport clsx from 'clsx';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useAuthClickCapture} from '@app/web-player/use-auth-click-capture';\n\nconst menuItemClassName = (isActive: boolean): string => {\n  return clsx(\n    'h-44 px-12 mx-12 hover:bg-hover rounded-lg',\n    isActive && 'text-primary'\n  );\n};\n\ninterface Props {\n  className?: string;\n}\nexport function Sidenav({className}: Props) {\n  return (\n    <div className={clsx('border-r py-12 bg-alt overflow-y-auto', className)}>\n      <Logo />\n      <CustomMenu\n        className=\"mt-24 items-stretch\"\n        menu=\"sidebar-primary\"\n        orientation=\"vertical\"\n        gap=\"gap-none\"\n        iconClassName=\"text-muted\"\n        itemClassName={({isActive}) => menuItemClassName(isActive)}\n      />\n      <div className=\"mt-48\">\n        <SectionTitle>\n          <Trans message=\"Your Music\" />\n        </SectionTitle>\n        <CustomMenu\n          className=\"mt-12 text-sm items-stretch\"\n          menu=\"sidebar-secondary\"\n          orientation=\"vertical\"\n          gap=\"gap-none\"\n          iconClassName=\"text-muted\"\n          itemClassName={({isActive}) => menuItemClassName(isActive)}\n        />\n        <PlaylistSection />\n      </div>\n    </div>\n  );\n}\n\ninterface SectionTitleProps {\n  children?: ReactNode;\n}\nfunction SectionTitle({children}: SectionTitleProps) {\n  return (\n    <div className=\"uppercase text-xs font-semibold text-muted mb-8 mx-24\">\n      {children}\n    </div>\n  );\n}\n\nfunction Logo() {\n  const {branding} = useSettings();\n  const {trans} = useTrans();\n  const isDarkMode = useIsDarkMode();\n  const logoUrl = isDarkMode ? branding.logo_light : branding.logo_dark;\n\n  return (\n    <Link\n      to=\"/\"\n      className=\"block flex-shrink-0 mx-18\"\n      aria-label={trans({message: 'Go to homepage'})}\n    >\n      <img\n        className=\"block w-auto h-56 max-w-[188px]\"\n        src={logoUrl}\n        alt={trans({message: 'Site logo'})}\n      />\n    </Link>\n  );\n}\n\nfunction PlaylistSection() {\n  const {data} = useAuthUserPlaylists();\n  const navigate = useNavigate();\n  const authHandler = useAuthClickCapture();\n\n  return (\n    <div className=\"mt-40\">\n      <div className=\"flex items-center justify-between mr-24\">\n        <SectionTitle>\n          <Trans message=\"Playlists\" />\n        </SectionTitle>\n        <DialogTrigger\n          type=\"modal\"\n          onClose={newPlaylist => {\n            if (newPlaylist) {\n              navigate(getPlaylistLink(newPlaylist));\n            }\n          }}\n        >\n          <IconButton\n            className=\"flex-shrink-0 text-muted\"\n            onClickCapture={authHandler}\n          >\n            <PlaylistAddIcon />\n          </IconButton>\n          <CreatePlaylistDialog />\n        </DialogTrigger>\n      </div>\n      {data?.playlists?.map(playlist => (\n        <NavLink\n          to={getPlaylistLink(playlist)}\n          key={playlist.id}\n          className={({isActive}) =>\n            clsx(menuItemClassName(isActive), 'flex items-center text-sm')\n          }\n        >\n          <div className=\"overflow-hidden overflow-ellipsis\">\n            {playlist.name}\n          </div>\n        </NavLink>\n      ))}\n    </div>\n  );\n}\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\n\nexport function useIsMediaPlaying(\n  mediaId: string | number,\n  groupId?: string | number\n): boolean {\n  return usePlayerStore(s => {\n    return (\n      s.status === 'playing' &&\n      s.cuedMedia?.id === mediaId &&\n      (!groupId || groupId === s.cuedMedia.groupId)\n    );\n  });\n}\n","import {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {MediaItem} from '@common/player/media-item';\nimport {Track} from '@app/web-player/tracks/track';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport clsx from 'clsx';\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\nimport React, {ReactElement, useState} from 'react';\nimport {message} from '@common/i18n/message';\nimport {PauseIcon} from '@common/icons/material/Pause';\nimport {EqualizerImage} from '@app/web-player/tracks/equalizer-image/equalizer-image';\nimport {PlayArrowFilledIcon} from '@app/web-player/tracks/play-arrow-filled';\nimport {useIsMediaPlaying} from '@common/player/hooks/use-is-media-playing';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {TrackContextDialog} from '@app/web-player/tracks/context-dialog/track-context-dialog';\nimport {ContextMenuButton} from '@app/web-player/context-dialog/context-dialog-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {useSettings} from '@common/core/settings/use-settings';\n\nexport function QueueSidenav() {\n  const queue = usePlayerStore(s => s.shuffledQueue);\n  const {player} = useSettings();\n  const mediaIsCued = usePlayerStore(s => s.cuedMedia != null);\n  return (\n    <div className=\"border-l bg h-full\">\n      <div\n        className={clsx(\n          'overflow-y-auto overflow-x-hidden',\n          player?.hide_video || !mediaIsCued ? 'h-full' : 'h-[calc(100%-213px)]'\n        )}\n      >\n        {queue.map((media: MediaItem<Track>, index) => (\n          // same media.id might be multiple times in the queue, use index as well to avoid errors\n          <QueueItem key={`${media.id}-${index}`} media={media} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\ninterface QueueItemProps {\n  media: MediaItem<Track>;\n}\nfunction QueueItem({media}: QueueItemProps) {\n  const isCued = usePlayerStore(s => s.cuedMedia?.id === media.id);\n  const isPlaying = useIsMediaPlaying(media.id);\n\n  const [isHover, setHover] = useState(false);\n  return (\n    <DialogTrigger type=\"popover\" triggerOnContextMenu placement=\"bottom-start\">\n      <div\n        onPointerEnter={() => setHover(true)}\n        onPointerLeave={() => setHover(false)}\n        className={clsx(\n          'flex items-center gap-10 p-8 border-b',\n          isCued && 'bg-primary/80 text-white'\n        )}\n      >\n        <div className=\"relative overflow-hidden\">\n          <TrackImage\n            className=\"w-34 h-34 flex-shrink-0 rounded object-cover\"\n            track={media.meta}\n          />\n          {(isHover || isPlaying) && (\n            <TogglePlaybackOverlay media={media} isHover={isHover} />\n          )}\n        </div>\n        <div className=\"flex-auto max-w-180 whitespace-nowrap\">\n          <div className=\"text-sm overflow-hidden overflow-ellipsis\">\n            {media.meta.name}\n          </div>\n          <ArtistLinks\n            className={clsx(\n              'text-muted text-xs overflow-hidden overflow-ellipsis',\n              isCued ? 'text-inherit' : 'text-muted'\n            )}\n            artists={media.meta.artists}\n          />\n        </div>\n      </div>\n      <TrackContextDialog tracks={[media.meta]} showAddToQueueButton={false}>\n        {() => <RemoveFromQueueContextButton media={media} />}\n      </TrackContextDialog>\n    </DialogTrigger>\n  );\n}\n\ninterface TogglePlaybackOverlayProps {\n  media: MediaItem<Track>;\n  isHover: boolean;\n}\nfunction TogglePlaybackOverlay({media, isHover}: TogglePlaybackOverlayProps) {\n  const isPlaying = useIsMediaPlaying(media.id);\n  const {trans} = useTrans();\n  const player = usePlayerActions();\n\n  let button: ReactElement;\n\n  if (isPlaying) {\n    button = (\n      <button\n        aria-label={trans(\n          message('Pause :name', {values: {name: media.meta.name}})\n        )}\n        tabIndex={0}\n        onClick={() => player.pause()}\n      >\n        {isHover ? <PauseIcon /> : <EqualizerImage />}\n      </button>\n    );\n  } else {\n    button = (\n      <button\n        aria-label={trans(\n          message('Play :name', {values: {name: media.meta.name}})\n        )}\n        tabIndex={0}\n        onClick={() => player.play(media)}\n      >\n        <PlayArrowFilledIcon />\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"absolute top-0 left-0 w-full h-full bg-black/50 rounded flex items-center justify-center text-white\">\n      {button}\n    </div>\n  );\n}\n\ninterface RemoveFromQueueContextButton {\n  media: MediaItem;\n}\nfunction RemoveFromQueueContextButton({media}: RemoveFromQueueContextButton) {\n  const {close: closeMenu} = useDialogContext();\n  const player = usePlayerActions();\n\n  return (\n    <ContextMenuButton\n      onClick={async () => {\n        closeMenu();\n        player.removeFromQueue([media]);\n      }}\n    >\n      <Trans message=\"Remove from queue\" />\n    </ContextMenuButton>\n  );\n}\n","import {SearchIcon} from '@common/icons/material/Search';\nimport {message} from '@common/i18n/message';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {ComboBox} from '@common/ui/forms/combobox/combobox';\nimport React, {cloneElement, ReactElement, useState} from 'react';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useSearchResults} from '@app/web-player/search/requests/use-search-results';\nimport {ARTIST_MODEL} from '@app/web-player/artists/artist';\nimport {ALBUM_MODEL} from '@app/web-player/albums/album';\nimport {TRACK_MODEL} from '@app/web-player/tracks/track';\nimport {USER_MODEL} from '@common/auth/user';\nimport {PLAYLIST_MODEL} from '@app/web-player/playlists/playlist';\nimport {Section} from '@common/ui/forms/listbox/section';\nimport {Trans} from '@common/i18n/trans';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {\n  getUserProfileLink,\n  UserProfileLink,\n} from '@app/web-player/users/user-profile-link';\nimport {AlbumLink, getAlbumLink} from '@app/web-player/albums/album-link';\nimport {ArtistLink, getArtistLink} from '@app/web-player/artists/artist-link';\nimport {getTrackLink, TrackLink} from '@app/web-player/tracks/track-link';\nimport {UserImage} from '@app/web-player/users/user-image';\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\nimport {PlayableModel} from '@app/web-player/playable-item/playable-model';\nimport clsx from 'clsx';\nimport {queueGroupId} from '@app/web-player/queue-group-id';\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {\n  getPlaylistLink,\n  PlaylistLink,\n} from '@app/web-player/playlists/playlist-link';\nimport {PlaylistImage} from '@app/web-player/playlists/playlist-image';\nimport {PlaylistOwnerName} from '@app/web-player/playlists/playlist-grid-item';\nimport {useListboxContext} from '@common/ui/forms/listbox/listbox-context';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {useParams} from 'react-router-dom';\n\nexport const mainSearchModels = [\n  ARTIST_MODEL,\n  ALBUM_MODEL,\n  TRACK_MODEL,\n  USER_MODEL,\n  PLAYLIST_MODEL,\n];\n\ninterface SearchAutocompleteProps {\n  className?: string;\n}\nexport function SearchAutocomplete({className}: SearchAutocompleteProps) {\n  const {searchQuery} = useParams();\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const [query, setQuery] = useState(searchQuery || '');\n  const [isOpen, setIsOpen] = useState(false);\n  const {isFetching, data} = useSearchResults({\n    query,\n    types: mainSearchModels,\n    limit: 3,\n  });\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        if (query.trim().length) {\n          setIsOpen(false);\n          navigate(`/search/${query.trim()}`);\n        }\n      }}\n      className={clsx('flex items-center gap-14 flex-auto', className)}\n    >\n      <button type=\"submit\" aria-label={trans(message('Search'))}>\n        <SearchIcon className=\"text-muted flex-shrink-0\" />\n      </button>\n      <ComboBox\n        unstyled\n        className=\"w-full max-w-780 flex-auto\"\n        offset={12}\n        inputClassName=\"w-full outline-none bg-transparent h-42 placeholder:text-muted\"\n        hideEndAdornment\n        inputBorder=\"border-none\"\n        isAsync\n        placeholder={trans(message('Search'))}\n        isLoading={isFetching}\n        inputValue={query}\n        onInputValueChange={setQuery}\n        clearInputOnItemSelection\n        blurReferenceOnItemSelection\n        selectionMode=\"none\"\n        openMenuOnFocus\n        floatingMaxHeight={670}\n        isOpen={isOpen}\n        onOpenChange={setIsOpen}\n      >\n        {Object.entries(data?.results || {}).map(([groupName, results]) => (\n          <Section key={groupName} label={<Trans message={groupName} />}>\n            {results.map(result => {\n              const key = `${groupName}-${result.id}`;\n              switch (result.model_type) {\n                case ARTIST_MODEL:\n                  return (\n                    <Item\n                      key={key}\n                      value={key}\n                      onSelected={() => {\n                        navigate(getArtistLink(result));\n                      }}\n                      startIcon={\n                        <PlayableImage\n                          model={result}\n                          className=\"rounded-full\"\n                          value={key}\n                        >\n                          <SmallArtistImage artist={result} />\n                        </PlayableImage>\n                      }\n                      description={<Trans message=\"Artist\" />}\n                      textLabel={result.name}\n                    >\n                      <ArtistLink artist={result} />\n                    </Item>\n                  );\n                case ALBUM_MODEL:\n                  return (\n                    <Item\n                      key={key}\n                      value={key}\n                      onSelected={() => {\n                        navigate(getAlbumLink(result));\n                      }}\n                      startIcon={\n                        <PlayableImage model={result} value={key}>\n                          <AlbumImage album={result} />\n                        </PlayableImage>\n                      }\n                      description={<ArtistLinks artists={result.artists} />}\n                      textLabel={result.name}\n                    >\n                      <AlbumLink album={result} />\n                    </Item>\n                  );\n                case TRACK_MODEL:\n                  return (\n                    <Item\n                      key={key}\n                      value={key}\n                      onSelected={() => {\n                        navigate(getTrackLink(result));\n                      }}\n                      startIcon={\n                        <PlayableImage model={result} value={key}>\n                          <TrackImage track={result} />\n                        </PlayableImage>\n                      }\n                      description={<ArtistLinks artists={result.artists} />}\n                      textLabel={result.name}\n                    >\n                      <TrackLink track={result} />\n                    </Item>\n                  );\n                case USER_MODEL:\n                  return (\n                    <Item\n                      key={key}\n                      value={key}\n                      onSelected={() => {\n                        navigate(getUserProfileLink(result));\n                      }}\n                      startIcon={\n                        <UserImage className=\"w-48 h-48\" user={result} />\n                      }\n                      description={\n                        result.followers_count ? (\n                          <Trans\n                            message=\":count followers\"\n                            values={{count: result.followers_count}}\n                          />\n                        ) : null\n                      }\n                      textLabel={result.display_name}\n                    >\n                      <UserProfileLink user={result} />\n                    </Item>\n                  );\n                case PLAYLIST_MODEL:\n                  return (\n                    <Item\n                      key={key}\n                      value={key}\n                      onSelected={() => {\n                        navigate(getPlaylistLink(result));\n                      }}\n                      startIcon={\n                        <PlayableImage model={result} value={key}>\n                          <PlaylistImage playlist={result} />\n                        </PlayableImage>\n                      }\n                      description={<PlaylistOwnerName playlist={result} />}\n                      textLabel={result.name}\n                    >\n                      <PlaylistLink playlist={result} />\n                    </Item>\n                  );\n              }\n            })}\n          </Section>\n        ))}\n      </ComboBox>\n    </form>\n  );\n}\n\ninterface PlayableImageProps {\n  children: ReactElement<{size: string; className?: string}>;\n  model: PlayableModel;\n  className?: string;\n  value: string;\n}\nfunction PlayableImage({\n  children,\n  model,\n  className,\n  value,\n}: PlayableImageProps) {\n  const {\n    collection,\n    state: {activeIndex},\n  } = useListboxContext();\n  const index = collection.get(value)?.index;\n  const isActive = activeIndex === index;\n\n  const queueId = queueGroupId(model);\n  const isPlaying = usePlayerStore(\n    s => s.status === 'playing' && s.originalQueue[0]?.groupId === queueId\n  );\n\n  return (\n    <div\n      className={clsx(className, 'relative w-48 h-48 overflow-hidden')}\n      onClick={e => {\n        e.preventDefault();\n        e.stopPropagation();\n      }}\n    >\n      {cloneElement(children, {\n        size: 'w-full h-full',\n      })}\n      <AnimatePresence>\n        {isActive || isPlaying ? (\n          <m.div\n            key=\"play-overlay\"\n            {...opacityAnimation}\n            transition={{duration: 0.24}}\n            className=\"absolute w-full h-full inset-0 bg-black/60 m-auto flex items-center justify-center\"\n          >\n            <PlaybackToggleButton\n              buttonType=\"icon\"\n              color=\"white\"\n              equalizerColor=\"white\"\n              track={model.model_type === TRACK_MODEL ? model : undefined}\n              queueId={queueId}\n            />\n          </m.div>\n        ) : null}\n      </AnimatePresence>\n    </div>\n  );\n}\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\nimport {Track} from '@app/web-player/tracks/track';\n\nexport function useCuedTrack(): Track | undefined {\n  const media = usePlayerStore(s => s.cuedMedia);\n  if (!media) return;\n  return media.meta as Track;\n}\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\n\nexport const SkipPreviousFilledIcon = createSvgIcon(\n  <path d=\"M5.5 18V6h2v12Zm13 0-9-6 9-6Z\" />,\n  'SkipPreviousFilled'\n);\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\n\nexport const SkipNextFilledIcon = createSvgIcon(\n  <path d=\"M16.5 18V6h2v12Zm-11 0V6l9 6Z\" />,\n  'SkipNextFilled'\n);\n","import {useCuedTrack} from '@app/web-player/player-controls/use-cued-track';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {message} from '@common/i18n/message';\nimport {SkipPreviousFilledIcon} from '@app/web-player/tracks/track-table/skip-previous-filled';\nimport {SkipNextFilledIcon} from '@app/web-player/tracks/track-table/skip-next-filled';\nimport {PauseIcon} from '@common/icons/material/Pause';\nimport {PlayArrowFilledIcon} from '@app/web-player/tracks/play-arrow-filled';\nimport {useBaseSeekbar} from '@app/web-player/player-controls/seekbar/use-base-seekbar';\nimport React, {useEffect} from 'react';\nimport {ProgressBar} from '@common/ui/progress/progress-bar';\nimport {CustomMenuItem} from '@common/menus/custom-menu';\nimport clsx from 'clsx';\nimport {useCustomMenu} from '@common/menus/use-custom-menu';\nimport {Trans} from '@common/i18n/trans';\nimport {NavbarAuthMenu} from '@common/ui/navigation/navbar/navbar-auth-menu';\nimport {PersonIcon} from '@common/icons/material/Person';\nimport {Badge} from '@common/ui/badge/badge';\nimport {useAuth} from '@common/auth/use-auth';\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {playerOverlayState} from '@app/web-player/state/player-overlay-store';\n\nexport function MobilePlayerControls() {\n  return (\n    <div className=\"fixed bottom-0 left-0 right-0 w-[calc(100%-20px)] mx-auto bg-background/95\">\n      <PlayerControls />\n      <MobileNavbar />\n    </div>\n  );\n}\n\nfunction PlayerControls() {\n  const mediaIsCued = usePlayerStore(s => s.cuedMedia != null);\n  if (!mediaIsCued) return null;\n\n  return (\n    <div\n      className=\"bg-chip rounded p-6 flex items-center gap-24 justify-between shadow relative\"\n      onClick={() => {\n        playerOverlayState.toggle();\n      }}\n    >\n      <QueuedTrack />\n      <PlaybackButtons />\n      <PlayerProgressBar />\n    </div>\n  );\n}\n\nfunction QueuedTrack() {\n  const track = useCuedTrack();\n\n  if (!track) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex items-center gap-10 min-w-0 flex-auto\">\n      <TrackImage className=\"rounded w-36 h-36 object-cover\" track={track} />\n      <div className=\"flex-auto whitespace-nowrap overflow-hidden\">\n        <div className=\"text-sm font-medium overflow-hidden overflow-ellipsis\">\n          {track.name}\n        </div>\n        <div className=\"text-xs text-muted overflow-hidden overflow-ellipsis\">\n          {track.artists?.map(a => a.name).join(', ')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction PlaybackButtons() {\n  const isUninitialized = usePlayerStore(s => s.status === 'uninitialized');\n  const player = usePlayerActions();\n  const {trans} = useTrans();\n\n  return (\n    <div className=\"flex items-center justify-center\">\n      <IconButton\n        disabled={isUninitialized}\n        size=\"md\"\n        aria-label={trans(message('Previous'))}\n        onClick={e => {\n          e.stopPropagation();\n          player.playPrevious();\n        }}\n      >\n        <SkipPreviousFilledIcon />\n      </IconButton>\n      <PlayButton />\n      <IconButton\n        disabled={isUninitialized}\n        aria-label={trans(message('Next'))}\n        size=\"md\"\n        onClick={e => {\n          e.stopPropagation();\n          player.playNext();\n        }}\n      >\n        <SkipNextFilledIcon />\n      </IconButton>\n    </div>\n  );\n}\n\nfunction PlayButton() {\n  const status = usePlayerStore(s => s.status);\n  const player = usePlayerActions();\n  const {trans} = useTrans();\n  const label =\n    status === 'playing' ? trans(message('Pause')) : trans(message('Play'));\n\n  return (\n    <IconButton\n      aria-label={label}\n      size=\"md\"\n      iconSize=\"lg\"\n      disabled={status === 'uninitialized'}\n      onClick={e => {\n        e.stopPropagation();\n        if (status === 'playing') {\n          player.pause();\n        } else {\n          player.play();\n        }\n      }}\n    >\n      {status === 'playing' ? <PauseIcon /> : <PlayArrowFilledIcon />}\n    </IconButton>\n  );\n}\n\nfunction PlayerProgressBar() {\n  const duration = usePlayerStore(s => s.mediaDuration);\n  const {time, player, listeners, stopTimer, setTime} = useBaseSeekbar();\n\n  useEffect(() => {\n    const unsubscribe = player.subscribe({\n      ...listeners,\n      // stop timer and set time to zero when cueing a new track\n      onCued: () => {\n        stopTimer();\n        setTime(0);\n      },\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [player, listeners, stopTimer, setTime]);\n\n  return (\n    <ProgressBar\n      size=\"xs\"\n      className=\"absolute left-0 right-0 bottom-0\"\n      progressColor=\"bg-white\"\n      trackColor=\"bg-white/10\"\n      trackHeight=\"h-2\"\n      radius=\"rounded-none\"\n      minValue={0}\n      maxValue={duration}\n      value={time}\n    />\n  );\n}\n\nfunction MobileNavbar() {\n  const menu = useCustomMenu('mobile-bottom');\n  if (!menu) return null;\n\n  return (\n    <div className=\"flex items-center justify-center gap-30 my-12\">\n      {menu.items.map(item => (\n        <CustomMenuItem\n          unstyled\n          iconClassName=\"block mx-auto mb-6\"\n          iconSize=\"md\"\n          className={({isActive}) => clsx('text-xs', isActive && 'font-bold')}\n          key={item.id}\n          item={item}\n        />\n      ))}\n      <AccountButton />\n    </div>\n  );\n}\n\nfunction AccountButton() {\n  const {user} = useAuth();\n  const hasUnreadNotif = !!user?.unread_notifications_count;\n  const navigate = useNavigate();\n  const {registration} = useSettings();\n\n  const button = (\n    <button className=\"text-xs\">\n      <Badge\n        badgeClassName=\"mb-6\"\n        badgeLabel={user?.unread_notifications_count}\n        badgeIsVisible={hasUnreadNotif}\n      >\n        <PersonIcon size=\"md\" />\n      </Badge>\n      <div className=\"text-xs\">\n        <Trans message=\"Account\" />\n      </div>\n    </button>\n  );\n\n  if (!user) {\n    return (\n      <MenuTrigger>\n        {button}\n        <Menu>\n          <Item value=\"login\" onSelected={() => navigate('/login')}>\n            <Trans message=\"Login\" />\n          </Item>\n          {!registration.disable && (\n            <Item value=\"register\" onSelected={() => navigate('/register')}>\n              <Trans message=\"Register\" />\n            </Item>\n          )}\n        </Menu>\n      </MenuTrigger>\n    );\n  }\n\n  return <NavbarAuthMenu>{button}</NavbarAuthMenu>;\n}\n","import {Slider} from '@common/ui/forms/slider/slider';\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\nimport {useEffect} from 'react';\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\nimport {useBaseSeekbar} from '@app/web-player/player-controls/seekbar/use-base-seekbar';\n\nexport function MainSeekbar() {\n  const duration = usePlayerStore(s => s.mediaDuration);\n  const isUninitialized = usePlayerStore(s => s.status === 'uninitialized');\n  const {time, player, listeners, startTimer, stopTimer, setTime} =\n    useBaseSeekbar();\n\n  useEffect(() => {\n    const unsubscribe = player.subscribe({\n      ...listeners,\n      // stop timer and set time to zero when cueing a new track\n      onCued: () => {\n        stopTimer();\n        setTime(0);\n      },\n    });\n\n    // if we render seekbar when player is already playing (player overlay for example), need to start the timer here\n    if (player.getState().status === 'playing') {\n      startTimer();\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [player, listeners, stopTimer, startTimer, setTime]);\n\n  return (\n    <div className=\"flex items-center gap-12\">\n      <div className=\"text-xs text-muted flex-shrink-0 min-w-40 text-right\">\n        {time ? <FormattedDuration seconds={time} /> : '0:00'}\n      </div>\n      <Slider\n        isDisabled={isUninitialized}\n        trackColor=\"neutral\"\n        thumbSize=\"w-14 h-14\"\n        showThumbOnHoverOnly={true}\n        minValue={0}\n        maxValue={duration}\n        className=\"flex-auto\"\n        width=\"w-auto\"\n        value={time}\n        onPointerDown={() => {\n          stopTimer();\n          player.pause();\n        }}\n        onChange={value => {\n          setTime(value);\n          player.seek(value);\n        }}\n        onChangeEnd={() => {\n          player.play();\n        }}\n      />\n      <div className=\"text-xs text-muted flex-shrink-0 min-w-40\">\n        <FormattedDuration seconds={duration} />\n      </div>\n    </div>\n  );\n}\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {PlayArrowFilledIcon} from '@app/web-player/tracks/play-arrow-filled';\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\nimport {PauseIcon} from '@common/icons/material/Pause';\nimport {SkipPreviousFilledIcon} from '@app/web-player/tracks/track-table/skip-previous-filled';\nimport {SkipNextFilledIcon} from '@app/web-player/tracks/track-table/skip-next-filled';\nimport {RepeatOneIcon} from '@common/icons/material/RepeatOne';\nimport {RepeatIcon} from '@common/icons/material/Repeat';\nimport {ShuffleIcon} from '@common/icons/material/Shuffle';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {MainSeekbar} from '@app/web-player/player-controls/seekbar/main-seekbar';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport clsx from 'clsx';\n\ninterface Props {\n  className?: string;\n}\nexport function PlaybackControls({className}: Props) {\n  return (\n    <div className={className}>\n      <PlaybackButtons />\n      <MainSeekbar />\n    </div>\n  );\n}\n\nfunction PlaybackButtons() {\n  const isMobile = useIsMobileMediaQuery();\n  const isUninitialized = usePlayerStore(s => s.status === 'uninitialized');\n  const player = usePlayerActions();\n  const {trans} = useTrans();\n\n  // need to add a gap on mobile between buttons and seekbar, otherwise seekbar will be impossible to tap\n  return (\n    <div\n      className={clsx(\n        'flex items-center justify-center gap-6',\n        isMobile && 'mb-20'\n      )}\n    >\n      <ShuffleButton />\n      <IconButton\n        disabled={isUninitialized}\n        size=\"md\"\n        aria-label={trans(message('Previous'))}\n        onClick={() => {\n          player.playPrevious();\n        }}\n      >\n        <SkipPreviousFilledIcon />\n      </IconButton>\n      <PlayButton />\n      <IconButton\n        disabled={isUninitialized}\n        aria-label={trans(message('Next'))}\n        size=\"md\"\n        onClick={() => {\n          player.playNext();\n        }}\n      >\n        <SkipNextFilledIcon />\n      </IconButton>\n      <RepeatButton />\n    </div>\n  );\n}\n\nfunction PlayButton() {\n  const status = usePlayerStore(s => s.status);\n  const player = usePlayerActions();\n\n  const {trans} = useTrans();\n  const label =\n    status === 'playing' ? trans(message('Pause')) : trans(message('Play'));\n\n  return (\n    <div className=\"relative w-42 h-42 isolate\">\n      <IconButton\n        aria-label={label}\n        size=\"md\"\n        iconSize=\"xl\"\n        disabled={status === 'uninitialized'}\n        className=\"relative z-20\"\n        onClick={() => {\n          if (status === 'playing') {\n            player.pause();\n          } else {\n            player.play();\n          }\n        }}\n      >\n        {status === 'playing' ? <PauseIcon /> : <PlayArrowFilledIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nfunction ShuffleButton() {\n  const isShuffling = usePlayerStore(s => s.shuffling);\n  const player = usePlayerActions();\n\n  const {trans} = useTrans();\n  const label = isShuffling\n    ? trans(message('Disable shuffle'))\n    : trans(message('Enable shuffle'));\n\n  return (\n    <IconButton\n      aria-label={label}\n      iconSize=\"sm\"\n      color={isShuffling ? 'primary' : undefined}\n      onClick={() => {\n        player.toggleShuffling();\n      }}\n    >\n      <ShuffleIcon />\n    </IconButton>\n  );\n}\n\nfunction RepeatButton() {\n  const repeating = usePlayerStore(s => s.repeat);\n  const player = usePlayerActions();\n\n  const {trans} = useTrans();\n  let label: string;\n  if (repeating === 'all') {\n    label = trans(message('Enable repeat one'));\n  } else if (repeating === 'one') {\n    label = trans(message('Disable repeat'));\n  } else {\n    label = trans(message('Enable repeat'));\n  }\n\n  return (\n    <IconButton\n      aria-label={label}\n      iconSize=\"sm\"\n      color={repeating ? 'primary' : undefined}\n      onClick={() => {\n        player.toggleRepeatMode();\n      }}\n    >\n      {repeating === 'one' ? <RepeatOneIcon /> : <RepeatIcon />}\n    </IconButton>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Track} from '@app/web-player/tracks/track';\nimport {Lyric} from '@app/web-player/tracks/lyrics/lyric';\n\ninterface Response extends BackendResponse {\n  lyric?: Lyric;\n}\n\nexport function useLyrics(track: Track) {\n  return useQuery(['lyrics', track.id], () => fetchLyrics(track.id));\n}\n\nfunction fetchLyrics(trackId: number) {\n  return apiClient\n    .get<Response>(`tracks/${trackId}/lyrics`)\n    .then(response => response.data);\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Track} from '@app/web-player/tracks/track';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {useLyrics} from '@app/web-player/tracks/lyrics/requests/use-lyrics';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {MicIcon} from '@common/icons/material/Mic';\n\ninterface Props {\n  track: Track;\n}\nexport function LyricsDialog({track}: Props) {\n  const {data, isLoading} = useLyrics(track);\n\n  let content;\n\n  if (data?.lyric?.text) {\n    content = (\n      <m.div\n        className=\"text-lg\"\n        key=\"lyrics\"\n        {...opacityAnimation}\n        dangerouslySetInnerHTML={{__html: data?.lyric?.text || ''}}\n      />\n    );\n  } else if (isLoading) {\n    content = <LyricSkeleton />;\n  } else {\n    content = (\n      <IllustratedMessage\n        image={<MicIcon size=\"xl\" />}\n        imageHeight=\"h-auto\"\n        title={<Trans message=\"We do not have lyrics for this song yet\" />}\n        description={<Trans message=\"Please try again later\" />}\n      />\n    );\n  }\n\n  return (\n    <Dialog size=\"fullscreenTakeover\">\n      <DialogHeader closeButtonSize=\"lg\">\n        <div className=\"sr-only\">\n          <Trans message=\"Lyrics\" />\n        </div>\n      </DialogHeader>\n      <DialogBody className=\"flex items-stretch gap-24 h-full\" padding=\"p-0\">\n        <div className=\"hidden md:flex-[0.4_1_0%] md:flex items-center justify-end pl-40\">\n          <div>\n            <TrackImage\n              track={track}\n              size=\"w-400 max-w-full aspect-square\"\n              className=\"flex-shrink-0 shadow-md rounded\"\n            />\n            <div className=\"mt-14 text-center text-xl\">{track.name}</div>\n            <div className=\"mt-4 text-center text-base text-muted\">\n              <ArtistLinks artists={track.artists} />\n            </div>\n          </div>\n        </div>\n        <div className=\"flex-auto md:flex-[0.6_1_0%] overflow-y-auto w-max text-center pl-14 pr-14 md:pl-0 md:pr-40 pb-40\">\n          <div className=\"flex items-center justify-center min-h-full\">\n            <AnimatePresence>{content}</AnimatePresence>\n          </div>\n        </div>\n      </DialogBody>\n    </Dialog>\n  );\n}\n\nfunction LyricSkeleton() {\n  return (\n    <m.div key=\"skeleton\" {...opacityAnimation} className=\"w-full max-w-720\">\n      {[...new Array(16).keys()].map(key => (\n        <Skeleton key={key} variant=\"text\" className=\"mb-20\" />\n      ))}\n    </m.div>\n  );\n}\n","import {useSettings} from '@common/core/settings/use-settings';\nimport {useCuedTrack} from '@app/web-player/player-controls/use-cued-track';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {MicIcon} from '@common/icons/material/Mic';\nimport {LyricsDialog} from '@app/web-player/tracks/lyrics/lyrics-dialog';\n\nexport function LyricsButton() {\n  const {player} = useSettings();\n  const track = useCuedTrack();\n\n  if (!track || player?.hide_lyrics) {\n    return null;\n  }\n\n  return (\n    <DialogTrigger type=\"modal\">\n      <IconButton>\n        <MicIcon />\n      </IconButton>\n      <LyricsDialog track={track} />\n    </DialogTrigger>\n  );\n}\n","import {useSettings} from '@common/core/settings/use-settings';\nimport {useCuedTrack} from '@app/web-player/player-controls/use-cued-track';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {trackIsLocallyUploaded} from '@app/web-player/tracks/utils/track-is-locally-uploaded';\nimport {DownloadIcon} from '@common/icons/material/Download';\nimport {downloadFileFromUrl} from '@common/uploads/utils/download-file-from-url';\nimport {useAuth} from '@common/auth/use-auth';\n\nexport function DownloadTrackButton() {\n  const {player, base_url} = useSettings();\n  const track = useCuedTrack();\n  const {hasPermission} = useAuth();\n\n  if (\n    !player?.enable_download ||\n    !track ||\n    !trackIsLocallyUploaded(track) ||\n    !hasPermission('music.download')\n  ) {\n    return null;\n  }\n\n  return (\n    <IconButton\n      onClick={() => {\n        downloadFileFromUrl(`${base_url}/api/v1/tracks/${track.id}/download`);\n      }}\n    >\n      <DownloadIcon />\n    </IconButton>\n  );\n}\n","import {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {ReactNode, useContext} from 'react';\nimport {useCuedTrack} from '@app/web-player/player-controls/use-cued-track';\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\nimport {PlaybackControls} from '@app/web-player/player-controls/playback-controls';\nimport {Slider} from '@common/ui/forms/slider/slider';\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {VolumeUpIcon} from '@common/icons/material/VolumeUp';\nimport {VolumeOffIcon} from '@common/icons/material/VolumeOff';\nimport {VolumeDownIcon} from '@common/icons/material/VolumeDown';\nimport {QueueMusicIcon} from '@common/icons/material/QueueMusic';\nimport {LikeIconButton} from '@app/web-player/library/like-icon-button';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {\n  playerOverlayState,\n  usePlayerOverlayStore,\n} from '@app/web-player/state/player-overlay-store';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {KeyboardArrowUpIcon} from '@common/icons/material/KeyboardArrowUp';\nimport {LyricsButton} from '@app/web-player/player-controls/lyrics-button';\nimport {DownloadTrackButton} from '@app/web-player/player-controls/download-track-button';\nimport {useSettings} from '@common/core/settings/use-settings';\n\nexport function DesktopPlayerControls() {\n  const mediaIsCued = usePlayerStore(s => s.cuedMedia != null);\n  if (!mediaIsCued) return null;\n\n  return (\n    <div className=\"h-96 px-16 flex items-center justify-between border-t bg dashboard-grid-footer z-30\">\n      <QueuedTrack />\n      <PlaybackControls className=\"w-2/5 max-w-[722px]\" />\n      <SecondaryControls />\n    </div>\n  );\n}\n\nfunction QueuedTrack() {\n  const track = useCuedTrack();\n  let content: ReactNode;\n\n  if (track) {\n    content = (\n      <div className=\"flex items-center gap-14\">\n        <TrackImage className=\"rounded w-56 h-56 object-cover\" track={track} />\n        <div>\n          <div className=\"text-sm\">{track.name}</div>\n          <div className=\"text-xs text-muted\">\n            <ArtistLinks artists={track.artists} />\n          </div>\n        </div>\n        <LikeIconButton likeable={track} />\n      </div>\n    );\n  } else {\n    content = null;\n  }\n\n  return <div className=\"min-w-180 w-[30%]\">{content}</div>;\n}\n\nfunction SecondaryControls() {\n  const {rightSidenavStatus, setRightSidenavStatus} = useContext(\n    DashboardLayoutContext\n  );\n  return (\n    <div className=\"flex items-center justify-end min-w-180 w-[30%]\">\n      <LyricsButton />\n      <DownloadTrackButton />\n      <IconButton\n        className=\"flex-shrink-0\"\n        onClick={() => {\n          setRightSidenavStatus(\n            rightSidenavStatus === 'closed' ? 'open' : 'closed'\n          );\n        }}\n      >\n        <QueueMusicIcon />\n      </IconButton>\n      <VolumeControls />\n      <OverlayButton />\n    </div>\n  );\n}\n\nfunction OverlayButton() {\n  const isActive = usePlayerOverlayStore(s => s.isMaximized);\n  const isUninitialized = usePlayerStore(s => s.status === 'uninitialized');\n  const {player} = useSettings();\n\n  if (player?.hide_video_button) {\n    return null;\n  }\n\n  return (\n    <IconButton\n      className=\"flex-shrink-0 ml-26\"\n      color=\"chip\"\n      variant=\"flat\"\n      radius=\"rounded\"\n      size=\"xs\"\n      iconSize=\"sm\"\n      disabled={isUninitialized}\n      onClick={() => {\n        playerOverlayState.toggle();\n      }}\n    >\n      {isActive ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />}\n    </IconButton>\n  );\n}\n\nfunction VolumeControls() {\n  const volume = usePlayerStore(s => s.volume);\n  const player = usePlayerActions();\n  const isUninitialized = usePlayerStore(s => s.status === 'uninitialized');\n\n  return (\n    <div className=\"flex w-min items-center gap-4\">\n      <ToggleMuteButton />\n      <Slider\n        isDisabled={isUninitialized}\n        showThumbOnHoverOnly\n        thumbSize=\"w-14 h-14\"\n        trackColor=\"neutral\"\n        minValue={0}\n        maxValue={100}\n        className=\"flex-auto\"\n        width=\"w-96\"\n        value={volume}\n        onChange={value => {\n          player.setVolume(value);\n        }}\n      />\n    </div>\n  );\n}\n\nfunction ToggleMuteButton() {\n  const {trans} = useTrans();\n  const isMuted = usePlayerStore(s => s.muted);\n  const volume = usePlayerStore(s => s.volume);\n  const player = usePlayerActions();\n  const isUninitialized = usePlayerStore(s => s.status === 'uninitialized');\n\n  if (isMuted) {\n    return (\n      <IconButton\n        disabled={isUninitialized}\n        size=\"sm\"\n        iconSize=\"md\"\n        aria-label={trans(message('Unmute'))}\n        onClick={() => player.setMuted(false)}\n      >\n        <VolumeOffIcon />\n      </IconButton>\n    );\n  }\n  return (\n    <IconButton\n      disabled={isUninitialized}\n      size=\"sm\"\n      iconSize=\"md\"\n      aria-label={trans(message('Mute'))}\n      onClick={() => player.setMuted(true)}\n    >\n      {volume < 40 ? <VolumeDownIcon /> : <VolumeUpIcon />}\n    </IconButton>\n  );\n}\n","import React, {\n  Fragment,\n  memo,\n  MutableRefObject,\n  useContext,\n  useEffect,\n  useRef,\n} from 'react';\nimport {PlayerStoreContext} from '@common/player/player-context';\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\nimport clsx from 'clsx';\nimport {\n  playerOverlayState,\n  usePlayerOverlayStore,\n} from '@app/web-player/state/player-overlay-store';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {QueueMusicIcon} from '@common/icons/material/QueueMusic';\nimport {PlaybackControls} from '@app/web-player/player-controls/playback-controls';\nimport {useCuedTrack} from '@app/web-player/player-controls/use-cued-track';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {LikeIconButton} from '@app/web-player/library/like-icon-button';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {TrackContextDialog} from '@app/web-player/tracks/context-dialog/track-context-dialog';\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\nimport fscreen from 'fscreen';\nimport {FullscreenIcon} from '@common/icons/material/Fullscreen';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\nimport {LyricsButton} from '@app/web-player/player-controls/lyrics-button';\nimport {useMediaQuery} from '@common/utils/hooks/use-media-query';\nimport {DownloadTrackButton} from '@app/web-player/player-controls/download-track-button';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {TrackLink} from '@app/web-player/tracks/track-link';\n\ninterface Props {\n  playerRef: MutableRefObject<HTMLDivElement | null>;\n}\nexport function PlayerOverlay({playerRef}: Props) {\n  const {player} = useSettings();\n  const isMobile = useMediaQuery('(max-width: 1024px)');\n  const isMaximized = usePlayerOverlayStore(s => s.isMaximized);\n  const isQueueOpen = usePlayerOverlayStore(s => s.isQueueOpen);\n  const mediaIsCued = usePlayerStore(s => s.cuedMedia != null);\n  const overlayRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!isMaximized) return;\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        playerOverlayState.toggle();\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isMaximized]);\n\n  return (\n    <div\n      ref={overlayRef}\n      className={clsx(\n        'fixed bg right-0 transition-all outline-none',\n        (!mediaIsCued || (isMobile && !isMaximized)) && 'hidden',\n        isMaximized\n          ? 'bottom-0 w-full h-full flex flex-col pb-50 player-overlay-bg'\n          : 'bottom-96 right-0 w-256 h-[213px]',\n        // hide video in sidebar on mobile or if hidden in settings\n        (player?.hide_video || isMobile) && !isMaximized && 'hidden'\n      )}\n    >\n      {isMaximized && (\n        <div className=\"flex items-center flex-shrink-0 p-10 mb-10\">\n          <IconButton\n            className=\"mr-auto\"\n            onClick={() => playerOverlayState.toggle()}\n          >\n            <KeyboardArrowDownIcon />\n          </IconButton>\n          {isMobile && <LyricsButton />}\n          {isMobile && <DownloadTrackButton />}\n          <IconButton\n            onClick={() => playerOverlayState.toggleQueue()}\n            color={isQueueOpen ? 'primary' : undefined}\n          >\n            <QueueMusicIcon />\n          </IconButton>\n          <FullscreenButton overlayRef={overlayRef} />\n        </div>\n      )}\n      <div\n        className={clsx(\n          'min-h-0 max-w-full flex-auto',\n          isMaximized && isMobile && 'aspect-square',\n          isMaximized && !isMobile && 'aspect-video',\n          isMaximized ? 'mx-auto px-14 mt-auto' : 'w-full h-full'\n        )}\n      >\n        <PlayerContainer playerRef={playerRef} />\n      </div>\n      {isMaximized && (\n        <Fragment>\n          <QueuedTrack />\n          <PlaybackControls className=\"container mx-auto px-14 flex-shrink-0 mb-auto\" />\n        </Fragment>\n      )}\n      {isMaximized && isQueueOpen && <PlayerQueue />}\n    </div>\n  );\n}\n\ninterface FullscreenButtonProps {\n  overlayRef: MutableRefObject<HTMLDivElement | null>;\n}\nfunction FullscreenButton({overlayRef}: FullscreenButtonProps) {\n  const isUninitialized = usePlayerStore(s => s.status === 'uninitialized');\n  const isMobile = useIsMobileMediaQuery();\n  if (!fscreen.fullscreenEnabled || isMobile) {\n    return null;\n  }\n\n  return (\n    <IconButton\n      className=\"flex-shrink-0 ml-12\"\n      size=\"sm\"\n      disabled={isUninitialized}\n      onClick={() => {\n        if (!overlayRef.current) return;\n        if (fscreen.fullscreenElement) {\n          fscreen.exitFullscreen();\n        } else {\n          fscreen.requestFullscreen(overlayRef.current);\n        }\n      }}\n    >\n      <FullscreenIcon />\n    </IconButton>\n  );\n}\n\nfunction QueuedTrack() {\n  const track = useCuedTrack();\n\n  if (!track) {\n    return null;\n  }\n\n  return (\n    <div className=\"container mx-auto px-14 my-40 flex-shrink-0 flex items-center justify-center gap-34\">\n      <LikeIconButton likeable={track} />\n      <div className=\"text-center\">\n        <div className=\"text-base\">\n          <TrackLink track={track} />\n        </div>\n        <div className=\"text-sm text-muted\">\n          <ArtistLinks artists={track.artists} />\n        </div>\n      </div>\n      <DialogTrigger type=\"popover\">\n        <IconButton>\n          <MoreVertIcon />\n        </IconButton>\n        <TrackContextDialog tracks={[track]} />\n      </DialogTrigger>\n    </div>\n  );\n}\n\ninterface PlayerContainerProps {\n  playerRef: MutableRefObject<HTMLDivElement | null>;\n}\nconst PlayerContainer = memo(({playerRef}: PlayerContainerProps) => {\n  const {getState} = useContext(PlayerStoreContext);\n  return (\n    <div\n      className=\"w-full h-full flex-auto bg-black player-container\"\n      ref={el => {\n        if (el) {\n          playerRef.current = el;\n          getState().init();\n        } else {\n          getState().destroy();\n        }\n      }}\n    />\n  );\n});\n\nfunction PlayerQueue() {\n  const queue = usePlayerStore(s => s.shuffledQueue);\n  return (\n    <div className=\"bg-inherit fixed top-70 left-0 right-0 bottom-0 px-14 md:px-50 overflow-y-auto\">\n      <TrackTable tracks={queue.map(item => item.meta)} />\n    </div>\n  );\n}\n","import {Link, Outlet} from 'react-router-dom';\nimport {PlayerContext} from '@common/player/player-context';\nimport {playerStoreOptions} from '@app/web-player/state/player-store-options';\nimport React, {Fragment, useContext, useMemo, useRef} from 'react';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {\n  closeGlobalDialog,\n  useGlobalDialogStore,\n} from '@app/web-player/state/global-dialog-store';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {useAuth} from '@common/auth/use-auth';\nimport {MenuItem} from '@common/ui/navigation/menu/menu-trigger';\nimport {MicIcon} from '@common/icons/material/Mic';\nimport {usePrimaryArtistForCurrentUser} from '@app/web-player/backstage/use-primary-artist-for-current-user';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {DashboardLayout} from '@common/ui/layout/dashboard-layout';\nimport {DashboardSidenav} from '@common/ui/layout/dashboard-sidenav';\nimport {Sidenav} from '@app/web-player/layout/sidenav';\nimport {DashboardContent} from '@common/ui/layout/dashboard-content';\nimport {QueueSidenav} from '@app/web-player/layout/queue-sidenav';\nimport clsx from 'clsx';\nimport {useMediaQuery} from '@common/utils/hooks/use-media-query';\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\nimport {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {SearchAutocomplete} from '@app/web-player/search/search-autocomplete';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {MobilePlayerControls} from '@app/web-player/player-controls/mobile-player-controls';\nimport {DesktopPlayerControls} from '@app/web-player/player-controls/desktop-player-controls';\nimport {PlayerOverlay} from '@app/web-player/overlay/player-overlay';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {getArtistLink} from '@app/web-player/artists/artist-link';\n\nexport function WebPlayerLayout() {\n  const playerRef = useRef<HTMLDivElement>(null);\n  const {player} = useSettings();\n  const isMobile = useIsMobileMediaQuery();\n\n  const options = useMemo(() => {\n    return {\n      ...playerStoreOptions,\n      ref: playerRef,\n    };\n  }, []);\n\n  return (\n    <PlayerContext id=\"web-player\" options={options}>\n      <DashboardLayout\n        name=\"web-player\"\n        initialRightSidenavStatus={player?.hide_queue ? 'closed' : 'open'}\n      >\n        {!isMobile && <PlayerNavbar />}\n        {!isMobile && (\n          <DashboardSidenav position=\"left\" display=\"block\">\n            <Sidenav />\n          </DashboardSidenav>\n        )}\n        <DashboardContent>\n          <Main />\n        </DashboardContent>\n        {!isMobile && <RightSidenav />}\n        <PlayerControlsBar />\n      </DashboardLayout>\n      <PlayerOverlay playerRef={playerRef} />\n    </PlayerContext>\n  );\n}\n\nfunction PlayerControlsBar() {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  if (isMobileMode) {\n    return <MobilePlayerControls />;\n  }\n  return <DesktopPlayerControls />;\n}\n\nfunction PlayerNavbar() {\n  const navigate = useNavigate();\n  const primaryArtist = usePrimaryArtistForCurrentUser();\n  const {player} = useSettings();\n  const menuItems = useMemo(() => {\n    if (primaryArtist) {\n      return [\n        <MenuItem\n          value=\"author\"\n          key=\"author\"\n          startIcon={<MicIcon />}\n          onSelected={() => {\n            navigate(getArtistLink(primaryArtist));\n          }}\n        >\n          <Trans message=\"Artist profile\" />\n        </MenuItem>,\n      ];\n    }\n    if (player?.show_become_artist_btn) {\n      return [\n        <MenuItem\n          value=\"author\"\n          key=\"author\"\n          startIcon={<MicIcon />}\n          onSelected={() => {\n            navigate('/backstage/requests');\n          }}\n        >\n          <Trans message=\"Become an author\" />\n        </MenuItem>,\n      ];\n    }\n\n    return [];\n  }, [primaryArtist, navigate, player?.show_become_artist_btn]);\n  return (\n    <Navbar\n      hideLogo\n      color=\"bg\"\n      darkModeColor=\"bg\"\n      size=\"sm\"\n      authMenuItems={menuItems}\n      className=\"dashboard-grid-header\"\n    >\n      <SearchAutocomplete />\n      <ActionButtons />\n    </Navbar>\n  );\n}\n\ninterface MainProps {\n  className?: string;\n}\nfunction Main({className}: MainProps) {\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <main\n      className={clsx(\n        'overflow-x-hidden relative',\n        className,\n        // mobile player controls are fixed to bottom of screen,\n        // make sure we can scroll to the bottom of the page\n        isMobile && 'pb-124'\n      )}\n    >\n      <div className=\"web-player-container @container min-h-full mx-auto p-16 md:p-30\">\n        <Outlet />\n        <GlobalDialogContainer />\n      </div>\n    </main>\n  );\n}\n\nfunction RightSidenav() {\n  const isOverlay = useMediaQuery('(max-width: 1280px)');\n  const hideQueue = usePlayerStore(s => !s.shuffledQueue.length);\n  return (\n    <DashboardSidenav\n      position=\"right\"\n      size=\"w-256\"\n      mode={isOverlay ? 'overlay' : undefined}\n      overlayPosition=\"absolute\"\n      display=\"block\"\n      forceClosed={hideQueue}\n    >\n      <QueueSidenav />\n    </DashboardSidenav>\n  );\n}\n\nfunction ActionButtons() {\n  const {player, billing} = useSettings();\n  const {isLoggedIn, hasPermission, isSubscribed} = useAuth();\n\n  const showUploadButton =\n    player?.show_upload_btn && isLoggedIn && hasPermission('music.create');\n  const showTryProButton =\n    billing?.enable && hasPermission('plans.view') && !isSubscribed;\n\n  return (\n    <Fragment>\n      {showTryProButton && (\n        <Button\n          variant=\"outline\"\n          size=\"xs\"\n          color=\"primary\"\n          elementType={Link}\n          to=\"/pricing\"\n        >\n          <Trans message=\"Try Pro\" />\n        </Button>\n      )}\n      {showUploadButton && (\n        <Button\n          variant={showTryProButton ? 'text' : 'outline'}\n          size=\"xs\"\n          color={showTryProButton ? undefined : 'primary'}\n          elementType={Link}\n          to=\"/backstage/upload\"\n        >\n          <Trans message=\"Upload\" />\n        </Button>\n      )}\n    </Fragment>\n  );\n}\n\nfunction GlobalDialogContainer() {\n  const {dialog: DialogElement, data} = useGlobalDialogStore();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      isOpen={DialogElement != null}\n      onClose={value => {\n        closeGlobalDialog(value);\n      }}\n    >\n      {DialogElement ? <DialogElement {...data} /> : null}\n    </DialogTrigger>\n  );\n}\n","import React, {cloneElement, ReactElement, ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface MediaPageHeaderLayoutProps {\n  className?: string;\n  image: ReactElement<{size: string; className?: string}>;\n  title: ReactNode;\n  subtitle?: ReactNode;\n  description?: ReactNode;\n  actionButtons?: ReactNode;\n  centerItems?: boolean;\n  footer?: ReactNode;\n}\nexport function MediaPageHeaderLayout({\n  className,\n  image,\n  title,\n  subtitle,\n  description,\n  actionButtons,\n  footer,\n  centerItems = false,\n}: MediaPageHeaderLayoutProps) {\n  return (\n    <header\n      className={clsx(\n        'flex flex-col md:flex-row gap-24 md:gap-34',\n        centerItems && 'items-center',\n        className\n      )}\n    >\n      {cloneElement(image, {\n        size: image.props.size || 'w-256 h-256',\n        className: clsx(image.props.className, 'mx-auto flex-shrink-0'),\n      })}\n      <div className=\"flex-auto min-w-0\">\n        <h1 className=\"text-2xl md:text-4xl font-semibold mb-14 text-center md:text-start\">\n          {title}\n        </h1>\n        {subtitle && <div className=\"w-max mx-auto md:mx-0\">{subtitle}</div>}\n        {description ? (\n          <div className=\"text-muted mt-18 md:mt-26 text-sm w-max mx-auto md:mx-0\">\n            {description}\n          </div>\n        ) : null}\n        <div className=\"mt-30\">{actionButtons}</div>\n        {footer ? <div className=\"mt-30\">{footer}</div> : null}\n      </div>\n    </header>\n  );\n}\n\ninterface ActionButtonClassNameProps {\n  isFirst?: boolean;\n}\nexport function actionButtonClassName({\n  isFirst,\n}: ActionButtonClassNameProps = {}) {\n  return clsx('min-h-40', isFirst ? 'min-w-128 mr-20' : 'mr-10 min-w-100');\n}\n","import {isAbsoluteUrl} from '../utils/urls/is-absolute-url';\nimport memoize from 'nano-memoize';\nimport clsx from 'clsx';\n\ninterface RemoteFaviconProps {\n  url: string;\n  className?: string;\n  size?: string;\n  alt?: string;\n}\nexport function RemoteFavicon({\n  url,\n  className,\n  size = 'w-16 h-16',\n  alt,\n}: RemoteFaviconProps) {\n  if (!url) {\n    return null;\n  }\n\n  const src = getFaviconSrc(url);\n\n  return (\n    <img\n      className={clsx(size, className)}\n      src={getFaviconSrc(url)}\n      alt={alt || `${src} favicon`}\n    />\n  );\n}\n\nconst getFaviconSrc = memoize((url: string): string => {\n  if (url.includes('youtube')) {\n    return 'https://www.youtube.com/s/desktop/ca54e1bd/img/favicon.ico';\n  }\n\n  // relative url to current site\n  if (!isAbsoluteUrl(url)) {\n    url = `${window.location.protocol}//${window.location.host}`;\n  }\n  const domain = new URL(url).origin;\n  return 'https://www.google.com/s2/favicons?domain=' + domain;\n});\n","import {UserLink} from '@app/web-player/user-profile/user-link';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {RemoteFavicon} from '@common/ui/remote-favicon';\nimport {IconButton} from '@common/ui/buttons/icon-button';\n\ninterface ProfileLinksProps {\n  links?: UserLink[];\n}\nexport function ProfileLinks({links}: ProfileLinksProps) {\n  if (!links?.length) return null;\n  return (\n    <div className=\"flex items-center\">\n      {links.map(link => (\n        <Tooltip label={link.title} key={link.url}>\n          <IconButton\n            size=\"xs\"\n            elementType=\"a\"\n            href={link.url}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <RemoteFavicon url={link.url} alt={link.title} />\n          </IconButton>\n        </Tooltip>\n      ))}\n    </div>\n  );\n}\n","import {UserProfile} from '@app/web-player/user-profile/user-profile';\nimport {UserLink} from '@app/web-player/user-profile/user-link';\nimport {ProfileLinks} from '@app/web-player/user-profile/profile-links';\n\ninterface Props {\n  profile?: UserProfile;\n  links?: UserLink[];\n  shortDescription?: boolean;\n}\nexport function ProfileDescription({profile, links, shortDescription}: Props) {\n  if (!profile) return null;\n  return (\n    <div className=\"text-sm\">\n      {profile.description && (\n        <div\n          className=\"p-10 rounded bg-alt/80 dark:bg text-secondary max-w-720\"\n          dangerouslySetInnerHTML={{\n            __html: shortDescription\n              ? profile.description.slice(0, 300)\n              : profile.description,\n          }}\n        />\n      )}\n      {profile.city || profile.country || links?.length ? (\n        <div className=\"flex items-center gap-24 justify-between mt-20\">\n          {(profile.city || profile.country) && (\n            <div className=\"p-10 rounded bg-alt/80 dark:bg text-secondary w-max\">\n              {profile.city}\n              {profile.country && ','} {profile.country}\n            </div>\n          )}\n          <ProfileLinks links={links} />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import {Genre} from '@app/web-player/genres/genre';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {queueGroupId} from '@app/web-player/queue-group-id';\nimport {LikeButton} from '@app/web-player/library/like-button';\nimport {\n  actionButtonClassName,\n  MediaPageHeaderLayout,\n} from '@app/web-player/layout/media-page-header-layout';\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\nimport {GenreLink} from '@app/web-player/genres/genre-link';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {ArtistContextDialog} from '@app/web-player/artists/artist-context-dialog';\nimport {ProfileDescription} from '@app/web-player/user-profile/profile-description';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {MediaItemStats} from '@app/web-player/tracks/media-item-stats';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\n\ninterface ArtistPageHeaderProps {\n  artist: Artist;\n}\nexport function ArtistPageHeader({artist}: ArtistPageHeaderProps) {\n  const {artistPage} = useSettings();\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <MediaPageHeaderLayout\n      centerItems\n      image={\n        <SmallArtistImage\n          showVerifiedBadge\n          artist={artist}\n          className=\"rounded-full shadow-lg object-cover\"\n        />\n      }\n      title={artist.name}\n      subtitle={<GenreList genres={artist.genres} />}\n      actionButtons={\n        <div className=\"flex items-center gap-24 justify-center md:justify-between\">\n          <ActionButtons artist={artist} />\n          {!isMobile && <MediaItemStats item={artist} />}\n        </div>\n      }\n      footer={\n        artistPage.showDescription && (\n          <ProfileDescription\n            profile={artist.profile}\n            links={artist.links}\n            shortDescription\n          />\n        )\n      }\n    />\n  );\n}\n\ninterface GenreListProps {\n  genres?: Genre[];\n}\nfunction GenreList({genres}: GenreListProps) {\n  const isMobile = useIsMobileMediaQuery();\n  if (isMobile) {\n    return null;\n  }\n  return (\n    <ul className=\"flex items-center justify-start gap-14 text-muted text-sm max-w-620 overflow-hidden overflow-ellipsis whitespace-nowrap\">\n      {genres?.slice(0, 5).map(genre => (\n        <li key={genre.id}>\n          <GenreLink genre={genre} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\ninterface ActionButtonsProps {\n  artist: Artist;\n}\nfunction ActionButtons({artist}: ActionButtonsProps) {\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <div>\n      <PlaybackToggleButton\n        queueId={queueGroupId(artist)}\n        buttonType=\"text\"\n        className={actionButtonClassName({isFirst: true})}\n      />\n      {!isMobile && (\n        <LikeButton likeable={artist} className={actionButtonClassName()} />\n      )}\n      <DialogTrigger type=\"popover\">\n        <Button\n          variant=\"outline\"\n          radius=\"rounded-full\"\n          endIcon={<ArrowDropDownIcon />}\n          className={actionButtonClassName()}\n        >\n          <Trans message=\"More\" />\n        </Button>\n        <ArtistContextDialog artist={artist} />\n      </DialogTrigger>\n    </div>\n  );\n}\n","import {useMemo, useState} from 'react';\nimport {Trans} from '@common/i18n/trans';\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\nimport {Button} from '@common/ui/buttons/button';\nimport {Track} from '@app/web-player/tracks/track';\n\ninterface TopTracksTableProps {\n  tracks?: Track[];\n}\nexport function TopTracksTable({tracks: initialTracks}: TopTracksTableProps) {\n  const [showingAll, setShowingAll] = useState(false);\n\n  const topTracks = useMemo(() => {\n    return {\n      all: initialTracks || [],\n      sliced: initialTracks?.slice(0, 5) || [],\n    };\n  }, [initialTracks]);\n\n  return (\n    <div className=\"flex-auto\">\n      <h2 className=\"text-muted text-base my-16\">\n        <Trans message=\"Popular songs\" />\n      </h2>\n      <TrackTable\n        tracks={showingAll ? topTracks.all : topTracks.sliced}\n        hideArtist\n        hideAlbum\n        hideHeaderRow\n      />\n      <Button\n        radius=\"rounded-full\"\n        className=\"mt-20\"\n        variant=\"outline\"\n        onClick={() => {\n          setShowingAll(!showingAll);\n        }}\n      >\n        {showingAll ? (\n          <Trans message=\"Show less\" />\n        ) : (\n          <Trans message=\"Show more\" />\n        )}\n      </Button>\n    </div>\n  );\n}\n","import {useParams} from 'react-router-dom';\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {Album} from '@app/web-player/albums/album';\nimport {assignAlbumToTracks} from '@app/web-player/albums/assign-album-to-tracks';\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\n\nexport type AlbumViewMode = 'list' | 'grid';\n\nexport const albumListViewPerPage = 5;\nexport const albumGridViewPerPage = 25;\n\nexport function useArtistAlbums(\n  initialPage: PaginationResponse<Album> | null,\n  viewMode: AlbumViewMode\n) {\n  const {artistId} = useParams();\n\n  return useInfiniteData<Album>({\n    endpoint: `artists/${artistId}/albums`,\n    queryKey: ['artists', +artistId!, 'albums', viewMode],\n    queryParams: {\n      albumsPerPage:\n        viewMode === 'list' ? albumListViewPerPage : albumGridViewPerPage,\n    },\n    initialPage,\n    transformResponse: response => {\n      response.pagination.data = response.pagination.data.map(album =>\n        assignAlbumToTracks(album)\n      );\n      return response;\n    },\n  });\n}\n","import {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {AlbumIcon} from '@common/icons/material/Album';\nimport {Trans} from '@common/i18n/trans';\n\nexport function NoDiscographyMessage() {\n  return (\n    <IllustratedMessage\n      className=\"my-80\"\n      imageHeight=\"h-auto\"\n      image={<AlbumIcon size=\"xl\" className=\"text-muted\" />}\n      title={<Trans message=\"We do not have discography for this artist yet\" />}\n    />\n  );\n}\n","import {TrackTable} from '@app/web-player/tracks/track-table/track-table';\nimport {queueGroupId} from '@app/web-player/queue-group-id';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {Album} from '@app/web-player/albums/album';\nimport {useArtistAlbums} from '@app/web-player/artists/requests/use-artist-albums';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {Button} from '@common/ui/buttons/button';\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\nimport {Trans} from '@common/i18n/trans';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {NoDiscographyMessage} from '@app/web-player/artists/artist-page/discography-panel/no-discography-message';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {AlbumContextDialog} from '@app/web-player/albums/album-context-dialog';\nimport {useSortableTableData} from '@common/ui/tables/use-sortable-table-data';\n\ninterface ArtistAlbumsListProps {\n  artist: Artist;\n  initialAlbums: PaginationResponse<Album> | null;\n}\nexport function ArtistAlbumsList({initialAlbums}: ArtistAlbumsListProps) {\n  const query = useArtistAlbums(initialAlbums, 'list');\n  const {isInitialLoading, items} = query;\n\n  if (!isInitialLoading && !items.length) {\n    return <NoDiscographyMessage />;\n  }\n\n  return (\n    <section>\n      {items.map(album => (\n        <div key={album.id} className=\"mb-40\">\n          <div className=\"flex items-center gap-14 mb-20\">\n            <AlbumImage\n              album={album}\n              size=\"w-110 h-110\"\n              className=\"rounded object-cover flex-shrink-0\"\n            />\n            <div className=\"flex-auto\">\n              <h4 className=\"font-semibold text-lg whitespace-nowrap min-w-0 overflow-hidden overflow-ellipsis\">\n                <AlbumLink album={album} />\n              </h4>\n              {album.release_date && (\n                <div className=\"text-muted text-sm mt-2 mb-18\">\n                  <FormattedDate date={album.release_date} />\n                </div>\n              )}\n              <DialogTrigger type=\"popover\" offset={10}>\n                <Button\n                  variant=\"outline\"\n                  size=\"xs\"\n                  radius=\"rounded-full\"\n                  endIcon={<ArrowDropDownIcon />}\n                >\n                  <Trans message=\"More\" />\n                </Button>\n                <AlbumContextDialog album={album} />\n              </DialogTrigger>\n            </div>\n          </div>\n          <AlbumTrackTable album={album} />\n        </div>\n      ))}\n      <InfiniteScrollSentinel query={query} />\n    </section>\n  );\n}\n\ninterface AlbumTrackTableProps {\n  album: Album;\n}\nfunction AlbumTrackTable({album}: AlbumTrackTableProps) {\n  const {data, sortDescriptor, onSortChange} = useSortableTableData(\n    album.tracks\n  );\n  return (\n    <TrackTable\n      tracks={data}\n      hideArtist\n      hideAlbum\n      hideTrackImage\n      sortDescriptor={sortDescriptor}\n      onSortChange={onSortChange}\n      queueGroupId={queueGroupId(album, '*', sortDescriptor)}\n    />\n  );\n}\n","import {Artist} from '@app/web-player/artists/artist';\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {Album} from '@app/web-player/albums/album';\nimport {AlbumGridItem} from '@app/web-player/albums/album-grid-item';\nimport {useArtistAlbums} from '@app/web-player/artists/requests/use-artist-albums';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {NoDiscographyMessage} from '@app/web-player/artists/artist-page/discography-panel/no-discography-message';\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\n\ninterface ArtistAlbumsGridProps {\n  artist: Artist;\n  initialAlbums: PaginationResponse<Album> | null;\n}\nexport function ArtistAlbumsGrid({initialAlbums}: ArtistAlbumsGridProps) {\n  const query = useArtistAlbums(initialAlbums, 'grid');\n\n  if (!query.isInitialLoading && !query.items.length) {\n    return <NoDiscographyMessage />;\n  }\n\n  return (\n    <ContentGrid>\n      {query.items.map(album => (\n        <AlbumGridItem key={album.id} album={album} />\n      ))}\n      <InfiniteScrollSentinel query={query} />\n    </ContentGrid>\n  );\n}\n","import {Artist} from '@app/web-player/artists/artist';\nimport {Trans} from '@common/i18n/trans';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {Link} from 'react-router-dom';\nimport {getArtistLink} from '@app/web-player/artists/artist-link';\nimport {TopTracksTable} from '@app/web-player/artists/artist-page/discography-panel/top-tracks-table';\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {Album} from '@app/web-player/albums/album';\nimport {ArtistAlbumsList} from '@app/web-player/artists/artist-page/discography-panel/artist-albums-list';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {ViewAgendaIcon} from '@common/icons/material/ViewAgenda';\nimport {GridViewIcon} from '@common/icons/material/GridView';\nimport {useLocalStorage} from '@common/utils/hooks/local-storage';\nimport {ArtistAlbumsGrid} from '@app/web-player/artists/artist-page/discography-panel/artist-albums-grid';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {\n  albumGridViewPerPage,\n  albumListViewPerPage,\n  AlbumViewMode,\n} from '@app/web-player/artists/requests/use-artist-albums';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {AdHost} from '@common/admin/ads/ad-host';\nimport React from 'react';\n\ninterface DiscographyTabProps {\n  artist: Artist;\n  initialAlbums?: PaginationResponse<Album>;\n}\nexport function DiscographyTab({artist, initialAlbums}: DiscographyTabProps) {\n  const {player} = useSettings();\n  const [viewMode, setViewMode] = useLocalStorage<AlbumViewMode>(\n    'artistPage.albumLayout',\n    player?.default_artist_view || 'list'\n  );\n  return (\n    <div>\n      <Header artist={artist} />\n      <AdHost slot=\"artist_bottom\" className=\"mt-34\" />\n      <div className=\"mt-44\">\n        <div className=\"flex items-center border-b pb-4 mb-30 text-muted\">\n          <h2 className=\"text-base mr-auto\">\n            <Trans message=\"Albums\" />\n          </h2>\n          <Tooltip label={<Trans message=\"List view\" />}>\n            <IconButton\n              className=\"ml-24 flex-shrink-0\"\n              color={viewMode === 'list' ? 'primary' : undefined}\n              onClick={() => setViewMode('list')}\n            >\n              <ViewAgendaIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip label={<Trans message=\"Grid view\" />}>\n            <IconButton\n              className=\"flex-shrink-0\"\n              color={viewMode === 'grid' ? 'primary' : undefined}\n              onClick={() => setViewMode('grid')}\n            >\n              <GridViewIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n        {viewMode === 'list' ? (\n          <ArtistAlbumsList\n            artist={artist}\n            initialAlbums={\n              initialAlbums?.per_page === albumListViewPerPage\n                ? initialAlbums\n                : null\n            }\n          />\n        ) : (\n          <ArtistAlbumsGrid\n            artist={artist}\n            initialAlbums={\n              initialAlbums?.per_page === albumGridViewPerPage\n                ? initialAlbums\n                : null\n            }\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\ninterface HeaderProps {\n  artist: Artist;\n}\nfunction Header({artist}: HeaderProps) {\n  const isMobile = useIsMobileMediaQuery();\n  if (!artist.top_tracks?.length) return null;\n  const similarArtists = artist.similar?.slice(0, 4) || [];\n\n  return (\n    <div className=\"flex items-start gap-30\">\n      <TopTracksTable tracks={artist.top_tracks} />\n      {!isMobile && (\n        <div className=\"w-1/3 max-w-320\">\n          <h2 className=\"text-muted text-base my-16\">\n            <Trans message=\"Similar artists\" />\n          </h2>\n          <div>\n            {similarArtists.map(similar => (\n              <Link\n                key={similar.id}\n                to={getArtistLink(similar)}\n                className=\"flex items-center gap-14 block p-4 mb-4 rounded hover:bg-hover cursor-pointer\"\n              >\n                <SmallArtistImage\n                  artist={similar}\n                  className=\"w-44 h-44 object-cover rounded-full\"\n                />\n                <div className=\"text-sm\">{similar.name}</div>\n              </Link>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import {Artist} from '@app/web-player/artists/artist';\nimport {ArtistGridItem} from '@app/web-player/artists/artist-grid-item';\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\n\ninterface SimilarArtistsTabProps {\n  artist: Artist;\n}\nexport function SimilarArtistsPanel({artist}: SimilarArtistsTabProps) {\n  return (\n    <ContentGrid>\n      {artist.similar?.map(similar => (\n        <ArtistGridItem key={similar.id} artist={similar} />\n      ))}\n    </ContentGrid>\n  );\n}\n","import { Options, tokenize } from 'linkifyjs';\n\n/**\n\tConvert strings of text into linkable HTML text\n*/\nfunction escapeText(text) {\n  return text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\nfunction escapeAttr(href) {\n  return href.replace(/\"/g, '&quot;');\n}\nfunction attributesToString(attributes) {\n  const result = [];\n  for (const attr in attributes) {\n    let val = attributes[attr] + '';\n    result.push(`${attr}=\"${escapeAttr(val)}\"`);\n  }\n  return result.join(' ');\n}\nfunction defaultRender(_ref) {\n  let {\n    tagName,\n    attributes,\n    content\n  } = _ref;\n  return `<${tagName} ${attributesToString(attributes)}>${escapeText(content)}</${tagName}>`;\n}\n\n/**\n * Convert a plan text string to an HTML string with links. Expects that the\n * given strings does not contain any HTML entities. Use the linkify-html\n * interface if you need to parse HTML entities.\n *\n * @param {string} str string to linkify\n * @param {import('linkifyjs').Opts} [opts] overridable options\n * @returns {string}\n */\nfunction linkifyStr(str, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  opts = new Options(opts, defaultRender);\n  const tokens = tokenize(str);\n  const result = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.t === 'nl' && opts.get('nl2br')) {\n      result.push('<br>\\n');\n    } else if (!token.isLink || !opts.check(token)) {\n      result.push(escapeText(token.toString()));\n    } else {\n      result.push(opts.render(token));\n    }\n  }\n  return result.join('');\n}\nif (!String.prototype.linkify) {\n  Object.defineProperty(String.prototype, 'linkify', {\n    writable: false,\n    value: function linkify(options) {\n      return linkifyStr(this, options);\n    }\n  });\n}\n\nexport { linkifyStr as default };\n","import {useMemo} from 'react';\nimport linkifyStr from 'linkify-string';\n\nexport function useLinkifiedString(text: string | null | undefined) {\n  return useMemo(() => {\n    if (!text) {\n      return text;\n    }\n    return linkifyStr(text, {\n      nl2br: true,\n      attributes: {rel: 'nofollow'},\n    });\n  }, [text]);\n}\n","import {Artist} from '@app/web-player/artists/artist';\nimport {ImageZoomDialog} from '@common/ui/overlays/dialog/image-zoom-dialog';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {useLinkifiedString} from '@common/utils/hooks/use-linkified-string';\nimport {useMemo} from 'react';\n\ninterface ArtistAboutTabProps {\n  artist: Artist;\n}\nexport function ArtistAboutPanel({artist}: ArtistAboutTabProps) {\n  const description = useLinkifiedString(artist.profile?.description);\n\n  const images = useMemo(() => {\n    return artist.profile_images?.map(img => img.url) || [];\n  }, [artist.profile_images]);\n\n  return (\n    <div className=\"\">\n      <div className=\"grid grid-cols-3 lg:grid-cols-4 gap-24\">\n        {images.map((src, index) => (\n          <DialogTrigger key={src} type=\"modal\">\n            <button\n              type=\"button\"\n              className=\"outline-none focus-visible:ring cursor-zoom-in rounded overflow-hidden hover:scale-105 transition\"\n            >\n              <img\n                className=\"aspect-video object-cover rounded shadow cursor-zoom-in\"\n                src={src}\n                alt=\"\"\n              />\n            </button>\n            <ImageZoomDialog images={images} defaultActiveIndex={index} />\n          </DialogTrigger>\n        ))}\n      </div>\n      <div\n        className=\"py-24 text-sm whitespace-pre-wrap\"\n        dangerouslySetInnerHTML={{__html: description || ''}}\n      />\n    </div>\n  );\n}\n","import {Artist} from '@app/web-player/artists/artist';\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {Track} from '@app/web-player/tracks/track';\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {AudiotrackIcon} from '@common/icons/material/Audiotrack';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {TrackList} from '@app/web-player/tracks/track-list/track-list';\n\ninterface Props {\n  artist: Artist;\n  initialTracks?: PaginationResponse<Track>;\n}\nexport function ArtistTracksPanel({artist, initialTracks}: Props) {\n  const query = useInfiniteData<Track>({\n    queryKey: ['tracks', artist.id],\n    endpoint: `artists/${artist.id}/tracks`,\n    initialPage: initialTracks,\n  });\n\n  if (query.isInitialLoading) {\n    return <FullPageLoader className=\"min-h-100\" />;\n  }\n\n  if (!query.items.length) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<AudiotrackIcon size=\"lg\" className=\"text-muted\" />}\n        title={<Trans message=\"No tracks yet\" />}\n        description={\n          <Trans\n            message=\"Follow :artist for updates on their latest releases.\"\n            values={{artist: artist.name}}\n          />\n        }\n      />\n    );\n  }\n\n  return <TrackList query={query} />;\n}\n","import {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {Track} from '@app/web-player/tracks/track';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {TrackSeekbar} from '@app/web-player/player-controls/seekbar/track-seekbar';\nimport {trackIsLocallyUploaded} from '@app/web-player/tracks/utils/track-is-locally-uploaded';\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\nimport {CommentBarContextProvider} from '@app/web-player/tracks/waveform/comment-bar-context';\nimport React, {Fragment, memo} from 'react';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {GenreLink} from '@app/web-player/genres/genre-link';\nimport {Album} from '@app/web-player/albums/album';\nimport {RepeatIcon} from '@common/icons/material/Repeat';\nimport clsx from 'clsx';\nimport {User} from '@common/auth/user';\nimport {UserProfileLink} from '@app/web-player/users/user-profile-link';\nimport {useAlbumPermissions} from '@app/web-player/albums/use-album-permissions';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {FormattedNumber} from '@common/i18n/formatted-number';\nimport {PlayArrowFilledIcon} from '@app/web-player/tracks/play-arrow-filled';\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\nimport {queueGroupId} from '@app/web-player/queue-group-id';\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\nimport {tracksToMediaItems} from '@app/web-player/tracks/utils/track-to-media-item';\nimport {WaveformWithComments} from '@app/web-player/tracks/track-list/track-list-item';\nimport {TrackActionsBar} from '@app/web-player/tracks/track-actions-bar';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\n\ninterface TrackListItemProps {\n  album: Album;\n  reposter?: User;\n  className?: string;\n  hideArtwork?: boolean;\n  hideActions?: boolean;\n  linksInNewTab?: boolean;\n  maxHeight?: string;\n}\nexport const AlbumListItem = memo(\n  ({\n    album,\n    reposter,\n    className,\n    hideArtwork,\n    hideActions,\n    linksInNewTab,\n    maxHeight,\n  }: TrackListItemProps) => {\n    const queueId = queueGroupId(album);\n    const {player} = useSettings();\n    const isMobile = useIsMobileMediaQuery();\n    hideArtwork = hideArtwork || !!isMobile;\n    const {managesAlbum} = useAlbumPermissions(album);\n    const tracks = album?.tracks || [];\n\n    const media = usePlayerStore(s => s.cuedMedia);\n    const activeTrack = tracks.find(t => t.id === media?.meta.id) || tracks[0];\n\n    const showWave =\n      player?.seekbar_type === 'waveform' &&\n      trackIsLocallyUploaded(activeTrack);\n\n    return (\n      <div\n        key={album.id}\n        className={clsx(\n          'overflow-hidden',\n          !hideArtwork && 'flex gap-24',\n          className,\n          maxHeight\n        )}\n      >\n        {!hideArtwork && (\n          <AlbumImage\n            album={album}\n            className=\"flex-shrink-0 rounded\"\n            size=\"w-184 h-184\"\n          />\n        )}\n        <div\n          className={clsx(\n            'flex-auto min-w-0',\n            maxHeight && 'flex flex-col h-full'\n          )}\n        >\n          <div className=\"flex-shrink-0\">\n            <div className=\"flex items-center gap-14\">\n              <PlaybackToggleButton\n                queueId={queueId}\n                track={activeTrack}\n                tracks={album.tracks}\n                buttonType=\"icon\"\n                color=\"primary\"\n                variant=\"flat\"\n                radius=\"rounded-full\"\n                equalizerColor=\"white\"\n              />\n              <div>\n                <div className=\"text-sm text-muted flex items-center gap-6\">\n                  <ArtistLinks\n                    artists={album.artists}\n                    target={linksInNewTab ? '_blank' : undefined}\n                  />\n                  {reposter && (\n                    <Fragment>\n                      <RepeatIcon size=\"xs\" />\n                      <UserProfileLink\n                        user={reposter}\n                        target={linksInNewTab ? '_blank' : undefined}\n                      />\n                    </Fragment>\n                  )}\n                </div>\n                <div>\n                  <AlbumLink\n                    album={album}\n                    target={linksInNewTab ? '_blank' : undefined}\n                  />\n                </div>\n              </div>\n              <div className=\"ml-auto text-sm\">\n                <FormattedRelativeTime date={album.created_at} />\n                {album.genres?.length && (\n                  <Chip className=\"mt-6 w-max\" size=\"xs\">\n                    <GenreLink\n                      genre={album.genres[0]}\n                      target={linksInNewTab ? '_blank' : undefined}\n                    />\n                  </Chip>\n                )}\n              </div>\n            </div>\n            <div className=\"my-20\">\n              {showWave ? (\n                <CommentBarContextProvider disableCommenting={hideActions}>\n                  <WaveformWithComments\n                    track={activeTrack}\n                    queue={album.tracks}\n                  />\n                </CommentBarContextProvider>\n              ) : (\n                <TrackSeekbar track={activeTrack} queue={album.tracks} />\n              )}\n            </div>\n          </div>\n          <div className=\"flex-auto overflow-y-auto\">\n            {tracks.map((track, index) => {\n              const isLast = index - 1 === album.tracks?.length;\n              const isActive = activeTrack?.id === track.id;\n              return (\n                <TrackItem\n                  key={track.id}\n                  track={track}\n                  album={album}\n                  index={index}\n                  isLast={isLast}\n                  isActive={isActive}\n                />\n              );\n            })}\n          </div>\n          {!hideActions && (\n            <TrackActionsBar\n              className=\"mt-20\"\n              item={album}\n              managesItem={managesAlbum}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\ninterface TrackItemProps {\n  track: Track;\n  album: Album;\n  index: number;\n  isLast: boolean;\n  isActive: boolean;\n}\nfunction TrackItem({track, index, isLast, isActive, album}: TrackItemProps) {\n  const playerActions = usePlayerActions();\n  return (\n    <div\n      key={track.id}\n      className={clsx(\n        'flex items-center text-[13px] gap-8 p-8 cursor-pointer hover:bg-hover',\n        !isLast && 'border-b',\n        isActive && 'text-primary'\n      )}\n      onClick={() => {\n        if (album.tracks?.length) {\n          playerActions.overrideQueueAndPlay(\n            tracksToMediaItems(album.tracks),\n            index\n          );\n        }\n      }}\n    >\n      <TrackImage track={track} size=\"w-20 h-20\" className=\"rounded\" />\n      <div>{index + 1}</div>\n      <div className=\"mx-10 flex-auto\">{track.name}</div>\n      {track.plays && track.plays > 0 ? (\n        <Fragment>\n          <PlayArrowFilledIcon size=\"xs\" className=\"text-muted ml-auto\" />\n          <div className=\"text-muted\">\n            <FormattedNumber value={track.plays} />\n          </div>\n        </Fragment>\n      ) : null}\n    </div>\n  );\n}\n","import {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport React from 'react';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {UseInfiniteDataResult} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {Album} from '@app/web-player/albums/album';\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\nimport {AlbumGridItem} from '@app/web-player/albums/album-grid-item';\nimport {AlbumListItem} from '@app/web-player/albums/album-list/album-list-item';\n\ninterface Props {\n  albums?: Album[];\n  query?: UseInfiniteDataResult<Album>;\n}\nexport function AlbumList({albums, query}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n  if (!albums && query) {\n    albums = query.items;\n  } else {\n    albums = [];\n  }\n\n  if (isMobile) {\n    return (\n      <div>\n        <ContentGrid>\n          {albums.map(album => (\n            <AlbumGridItem album={album} key={album.id} />\n          ))}\n        </ContentGrid>\n        {query && <InfiniteScrollSentinel query={query} />}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {albums.map(album => (\n        <AlbumListItem key={album.id} album={album} className=\"mb-40\" />\n      ))}\n      {query && <InfiniteScrollSentinel query={query} />}\n    </div>\n  );\n}\n","import {Artist} from '@app/web-player/artists/artist';\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {Album} from '@app/web-player/albums/album';\nimport {AlbumIcon} from '@common/icons/material/Album';\nimport {AlbumList} from '@app/web-player/albums/album-list/album-list';\n\ninterface Props {\n  artist: Artist;\n}\nexport function ArtistAlbumsPanel({artist}: Props) {\n  const query = useInfiniteData<Album>({\n    queryKey: ['albums', artist.id],\n    endpoint: `artists/${artist.id}/albums`,\n  });\n\n  if (query.isInitialLoading) {\n    return <FullPageLoader className=\"min-h-100\" />;\n  }\n\n  if (!query.items.length) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<AlbumIcon size=\"lg\" className=\"text-muted\" />}\n        title={<Trans message=\"No albums yet\" />}\n        description={\n          <Trans\n            message=\"Follow :artist for updates on their latest releases.\"\n            values={{artist: artist.name}}\n          />\n        }\n      />\n    );\n  }\n\n  return <AlbumList query={query} />;\n}\n","import {Artist} from '@app/web-player/artists/artist';\nimport {useSearchParams} from 'react-router-dom';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {useMemo} from 'react';\nimport {artistPageTabs} from '@app/web-player/artists/artist-page-tabs';\n\nexport function useArtistPageTabs(artist: Artist) {\n  const [searchParams] = useSearchParams();\n  const {artistPage} = useSettings();\n\n  return useMemo(() => {\n    const haveSimilar = artist.similar?.length;\n    const haveBio =\n      artist.profile_images?.length || artist.profile?.description;\n    const activeTabs = artistPage?.tabs?.filter(tab => {\n      if (!tab.active) {\n        return false;\n      }\n      if (tab.id === artistPageTabs.similar && !haveSimilar) {\n        return false;\n      }\n      if (tab.id === artistPageTabs.about && !haveBio) {\n        return false;\n      }\n      return true;\n    });\n    const selectedTabId =\n      artistPageTabs[searchParams.get('tab') as keyof typeof artistPageTabs];\n    const i = activeTabs?.findIndex(t => t.id === selectedTabId);\n    const selectedIndex = i > -1 ? i : 0;\n    return {\n      selectedIndex,\n      activeTabs,\n    };\n  }, [artist, artistPage.tabs, searchParams]);\n}\n","import {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport create from 'zustand';\nimport {immer} from 'zustand/middleware/immer';\n\ninterface State {\n  followedUsers: number[];\n  isFollowing: (id: number) => boolean;\n  add: (id: number) => void;\n  remove: (id: number) => void;\n}\n\nexport const userFollowsStore = create<State>()(\n  immer((set, get) => ({\n    followedUsers:\n      getBootstrapData().user?.followed_users?.map(u => u.id) || [],\n    isFollowing: (id: number) => get().followedUsers.includes(id),\n    add: (id: number) => {\n      set(draft => {\n        draft.followedUsers.push(id);\n      });\n    },\n    remove: (id: number) => {\n      set(draft => {\n        draft.followedUsers = draft.followedUsers.filter(i => i !== id);\n      });\n    },\n  }))\n);\n\nexport const userFollows = userFollowsStore.getState;\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {User} from '@common/auth/user';\nimport {userFollows} from '@app/web-player/users/user-follows-store';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  user: User;\n}\n\nexport function useFollowUser() {\n  return useMutation((payload: Payload) => followUser(payload), {\n    onSuccess: (response, {user}) => {\n      userFollows().add(user.id);\n      toast(message('Following :name', {values: {name: user.display_name}}));\n      queryClient.invalidateQueries(['users']);\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction followUser({user}: Payload): Promise<Response> {\n  return apiClient.post(`users/${user.id}/follow`).then(r => r.data);\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {User} from '@common/auth/user';\nimport {userFollows} from '@app/web-player/users/user-follows-store';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  user: User;\n}\n\nexport function useUnfollowUser() {\n  return useMutation((payload: Payload) => unfollowUser(payload), {\n    onSuccess: (response, {user}) => {\n      userFollows().remove(user.id);\n      toast(\n        message('Stopped following :name', {values: {name: user.display_name}})\n      );\n      queryClient.invalidateQueries(['users']);\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction unfollowUser({user}: Payload): Promise<Response> {\n  return apiClient.post(`users/${user.id}/unfollow`).then(r => r.data);\n}\n","import {User} from '@common/auth/user';\nimport {userFollowsStore} from '@app/web-player/users/user-follows-store';\nimport {UserImage} from '@app/web-player/users/user-image';\nimport {UserProfileLink} from '@app/web-player/users/user-profile-link';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {useFollowUser} from '@app/web-player/users/use-follow-user';\nimport {useAuth} from '@common/auth/use-auth';\nimport {Button} from '@common/ui/buttons/button';\nimport {useUnfollowUser} from '@app/web-player/users/use-unfollow-user';\n\ninterface Props {\n  follower: User;\n}\nexport function FollowerListItem({follower}: Props) {\n  const isFollowing = userFollowsStore(s => s.isFollowing(follower.id));\n  return (\n    <div\n      key={follower.id}\n      className=\"flex items-center gap-16 mb-16 pb-16 border-b\"\n    >\n      <UserImage user={follower} className=\"w-64 h-64 rounded\" />\n      <div className=\"text-sm\">\n        <UserProfileLink user={follower} />\n        {follower.followers_count && follower.followers_count > 0 ? (\n          <div className=\"text-xs text-muted\">\n            <Trans\n              message=\"[one 1 followers|other :count followers]\"\n              values={{count: follower.followers_count}}\n            />\n          </div>\n        ) : null}\n      </div>\n      {isFollowing ? (\n        <UnfollowUserButton user={follower} />\n      ) : (\n        <FollowUserButton user={follower} />\n      )}\n    </div>\n  );\n}\n\ninterface FollowUserButtonProps {\n  user: User;\n}\nfunction FollowUserButton({user}: FollowUserButtonProps) {\n  const followUser = useFollowUser();\n  const {user: currentUser} = useAuth();\n  if (currentUser?.id === user.id) return null;\n  return (\n    <Button\n      variant=\"outline\"\n      radius=\"rounded-full\"\n      className=\"flex-shrink-0 ml-auto\"\n      onClick={() => followUser.mutate({user})}\n      disabled={followUser.isLoading}\n    >\n      <Trans message=\"Follow\" />\n    </Button>\n  );\n}\n\nfunction UnfollowUserButton({user}: FollowUserButtonProps) {\n  const unfollowUser = useUnfollowUser();\n  const {user: currentUser} = useAuth();\n  if (currentUser?.id === user.id) return null;\n  return (\n    <Button\n      variant=\"outline\"\n      radius=\"rounded-full\"\n      className=\"flex-shrink-0 ml-auto\"\n      onClick={() => unfollowUser.mutate({user})}\n      disabled={unfollowUser.isLoading}\n    >\n      <Trans message=\"Unfollow\" />\n    </Button>\n  );\n}\n","import {Artist} from '@app/web-player/artists/artist';\nimport {Trans} from '@common/i18n/trans';\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {User} from '@common/auth/user';\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\nimport React from 'react';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {BookmarkBorderIcon} from '@common/icons/material/BookmarkBorder';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {FollowerListItem} from '@app/web-player/artists/artist-page/followers-panel/follower-list-item';\n\ninterface Props {\n  artist: Artist;\n}\nexport function ArtistFollowersPanel({artist}: Props) {\n  const query = useInfiniteData<User>({\n    queryKey: ['artists', artist.id, 'followers'],\n    endpoint: `artists/${artist.id}/followers`,\n  });\n\n  if (query.isInitialLoading) {\n    return <FullPageLoader className=\"min-h-100\" />;\n  }\n\n  if (!query.items.length) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<BookmarkBorderIcon size=\"lg\" className=\"text-muted\" />}\n        description={\n          <Trans\n            message=\"Seems like no one is following :name yet.\"\n            values={{name: artist.name}}\n          />\n        }\n      />\n    );\n  }\n\n  return (\n    <div>\n      {query.items.map(follower => (\n        <FollowerListItem key={follower.id} follower={follower} />\n      ))}\n      <InfiniteScrollSentinel query={query} />\n    </div>\n  );\n}\n","import {Link} from 'react-router-dom';\nimport {artistPageTabs} from '@app/web-player/artists/artist-page-tabs';\nimport {Tabs} from '@common/ui/tabs/tabs';\nimport {TabList} from '@common/ui/tabs/tab-list';\nimport {Tab} from '@common/ui/tabs/tab';\nimport {Trans} from '@common/i18n/trans';\nimport {TabPanel, TabPanels} from '@common/ui/tabs/tab-panels';\nimport {DiscographyTab} from '@app/web-player/artists/artist-page/discography-panel/discography-tab';\nimport {SimilarArtistsPanel} from '@app/web-player/artists/artist-page/similar-artists-panel';\nimport {ArtistAboutPanel} from '@app/web-player/artists/artist-page/artist-about-panel';\nimport {ArtistTracksPanel} from '@app/web-player/artists/artist-page/artist-tracks-panel';\nimport {ArtistAlbumsPanel} from '@app/web-player/artists/artist-page/artist-albums-panel';\nimport React from 'react';\nimport {UseArtistResponse} from '@app/web-player/artists/requests/use-artist';\nimport {useArtistPageTabs} from '@app/web-player/artists/artist-page/use-artist-page-tabs';\nimport {ArtistFollowersPanel} from '@app/web-player/artists/artist-page/artist-followers-panel';\n\ninterface Props {\n  data: UseArtistResponse;\n}\nexport function ArtistPageTabs({data}: Props) {\n  const {selectedIndex, activeTabs} = useArtistPageTabs(data.artist);\n  return (\n    <Tabs className=\"mt-24 md:mt-48\" selectedTab={selectedIndex} isLazy>\n      <TabList>\n        {activeTabs.map(tab => {\n          switch (tab.id) {\n            case artistPageTabs.discography:\n              return (\n                <Tab elementType={Link} key={artistPageTabs.discography}>\n                  <Trans message=\"Discography\" />\n                </Tab>\n              );\n            case artistPageTabs.similar:\n              return (\n                <Tab\n                  elementType={Link}\n                  to={{search: '?tab=similar'}}\n                  key={artistPageTabs.similar}\n                >\n                  <Trans message=\"Similar artists\" />\n                </Tab>\n              );\n            case artistPageTabs.about:\n              return (\n                <Tab\n                  elementType={Link}\n                  to={{search: '?tab=about'}}\n                  key={artistPageTabs.about}\n                >\n                  <Trans message=\"About\" />\n                </Tab>\n              );\n            case artistPageTabs.tracks:\n              return (\n                <Tab\n                  elementType={Link}\n                  to={{search: '?tab=tracks'}}\n                  key={artistPageTabs.tracks}\n                >\n                  <Trans message=\"Tracks\" />\n                </Tab>\n              );\n            case artistPageTabs.albums:\n              return (\n                <Tab\n                  elementType={Link}\n                  to={{search: '?tab=albums'}}\n                  key={artistPageTabs.albums}\n                >\n                  <Trans message=\"Albums\" />\n                </Tab>\n              );\n            case artistPageTabs.followers:\n              return (\n                <Tab\n                  elementType={Link}\n                  to={{search: '?tab=followers'}}\n                  key={artistPageTabs.followers}\n                >\n                  <Trans message=\"Followers\" />\n                </Tab>\n              );\n          }\n        })}\n      </TabList>\n      <TabPanels className=\"mt-12 md:mt-24\">\n        {activeTabs.map(tab => {\n          switch (tab.id) {\n            case artistPageTabs.discography:\n              return (\n                <TabPanel key={artistPageTabs.discography}>\n                  <DiscographyTab\n                    artist={data.artist}\n                    initialAlbums={data.albums}\n                  />\n                </TabPanel>\n              );\n            case artistPageTabs.similar:\n              return (\n                <TabPanel key={artistPageTabs.similar}>\n                  <SimilarArtistsPanel artist={data.artist} />\n                </TabPanel>\n              );\n            case artistPageTabs.about:\n              return (\n                <TabPanel key={artistPageTabs.about}>\n                  <ArtistAboutPanel artist={data.artist} />\n                </TabPanel>\n              );\n            case artistPageTabs.tracks:\n              return (\n                <TabPanel key={artistPageTabs.tracks}>\n                  <ArtistTracksPanel\n                    artist={data.artist}\n                    initialTracks={data.tracks}\n                  />\n                </TabPanel>\n              );\n            case artistPageTabs.albums:\n              return (\n                <TabPanel key={artistPageTabs.albums}>\n                  <ArtistAlbumsPanel artist={data.artist} />\n                </TabPanel>\n              );\n            case artistPageTabs.followers:\n              return (\n                <TabPanel key={artistPageTabs.followers}>\n                  <ArtistFollowersPanel artist={data.artist} />\n                </TabPanel>\n              );\n          }\n        })}\n      </TabPanels>\n    </Tabs>\n  );\n}\n","import {\n  albumLayoutKey,\n  useArtist,\n  UseArtistParams,\n} from '@app/web-player/artists/requests/use-artist';\nimport {ArtistPageHeader} from '@app/web-player/artists/artist-page/artist-page-header';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {PageStatus} from '@common/http/page-status';\nimport {getFromLocalStorage} from '@common/utils/hooks/local-storage';\nimport React from 'react';\nimport {ArtistPageTabs} from '@app/web-player/artists/artist-page/artist-page-tabs';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {artistPageTabs} from '@app/web-player/artists/artist-page-tabs';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\nexport function ArtistPage() {\n  const isListView = getFromLocalStorage(albumLayoutKey, 'list') === 'list';\n  const {artistPage} = useSettings();\n  const tabIds = artistPage.tabs.filter(tab => tab.active).map(tab => tab.id);\n\n  let load = ['similar', 'genres', 'profile'];\n  if (tabIds.includes(artistPageTabs.tracks)) {\n    load.push('tracks');\n  }\n  if (tabIds.includes(artistPageTabs.discography)) {\n    load = [...load, 'albums', 'topTracks'];\n  }\n  const params: UseArtistParams = {\n    with: load,\n    withCount: 'likes',\n    autoUpdate: true,\n    loadAlbumTracks: isListView,\n    albumsPerPage: isListView ? 5 : 25,\n  };\n  const query = useArtist(params);\n\n  if (query.data) {\n    return (\n      <div>\n        <PageMetaTags query={query} />\n        <AdHost slot=\"general_top\" className=\"mb-34\" />\n        <ArtistPageHeader artist={query.data.artist} />\n        <AdHost slot=\"artist_top\" className=\"mt-14\" />\n        <ArtistPageTabs data={query.data} />\n        <AdHost slot=\"general_bottom\" className=\"mt-34\" />\n      </div>\n    );\n  }\n\n  return <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />;\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useParams} from 'react-router-dom';\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {Track} from '@app/web-player/tracks/track';\nimport {Playlist} from '@app/web-player/playlists/playlist';\n\ninterface GetPlaylistResponse extends BackendResponse {\n  playlist: Playlist;\n  tracks: PaginationResponse<Track>;\n  totalDuration: number;\n}\n\nexport function usePlaylist() {\n  const {playlistId} = useParams();\n  return useQuery(['playlists', +playlistId!], () =>\n    fetchPlaylist(playlistId!)\n  );\n}\n\nfunction fetchPlaylist(\n  playlistId: number | string\n): Promise<GetPlaylistResponse> {\n  return apiClient\n    .get(`playlists/${playlistId}`)\n    .then(response => response.data);\n}\n","import React, {Children, Fragment, ReactElement, ReactNode} from 'react';\nimport {AvatarProps} from '@common/ui/images/avatar';\nimport clsx from 'clsx';\nimport {Trans} from '@common/i18n/trans';\nimport {Link} from 'react-router-dom';\n\ninterface AvatarGroupProps {\n  children: ReactNode;\n  className?: string;\n}\nexport function AvatarGroup(props: AvatarGroupProps) {\n  const children = Children.toArray(\n    props.children\n  ) as ReactElement<AvatarProps>[];\n\n  const firstLink = children[0].props.link;\n  const label = children[0].props.label;\n\n  return (\n    <div className={clsx('pl-10 flex isolate items-center', props.className)}>\n      <Fragment>\n        {children.map((avatar, index) => (\n          <div\n            key={index}\n            style={{zIndex: 5 - index}}\n            className={clsx(\n              'relative border-2 border-bg-alt bg-alt rounded-full -ml-10 overflow-hidden flex-shrink-0'\n            )}\n          >\n            {avatar}\n          </div>\n        ))}\n      </Fragment>\n      <div className=\"text-sm whitespace-nowrap ml-10\">\n        {firstLink && label ? (\n          <Link to={firstLink} className=\"hover:underline\">\n            {label}\n          </Link>\n        ) : null}\n        {children.length > 1 && (\n          <span>\n            {' '}\n            <Trans\n              message=\"+ :count more\"\n              values={{count: children.length - 1}}\n            />\n          </span>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, {Children, Fragment, ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface BulletSeparatedItemsProps {\n  children: ReactNode;\n  className?: string;\n}\n\nexport function BulletSeparatedItems({\n  children,\n  className,\n}: BulletSeparatedItemsProps) {\n  const items = Children.toArray(children);\n  return (\n    <div className={clsx('flex items-center gap-4', className)}>\n      {items.map((child, index) => (\n        <Fragment key={index}>\n          <div>{child}</div>\n          {index < items.length - 1 ? <div>&bull;</div> : null}\n        </Fragment>\n      ))}\n    </div>\n  );\n}\n","import {Playlist} from '@app/web-player/playlists/playlist';\nimport {\n  getPlaylistImageSrc,\n  PlaylistImage,\n} from '@app/web-player/playlists/playlist-image';\nimport {Trans} from '@common/i18n/trans';\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\nimport React, {Fragment} from 'react';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {ImageSelector} from '@common/ui/images/image-selector';\nimport {ImageIcon} from '@common/icons/material/Image';\nimport {useUpdatePlaylist} from '@app/web-player/playlists/requests/use-update-playlist';\nimport {usePlaylistPermissions} from '@app/web-player/playlists/hooks/use-playlist-permissions';\nimport {Button} from '@common/ui/buttons/button';\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {PlaylistContextDialog} from '@app/web-player/playlists/playlist-context-dialog';\nimport {FollowPlaylistButton} from '@app/web-player/playlists/playlist-page/follow-playlist-button';\nimport {AvatarGroup} from '@common/ui/images/avatar-group';\nimport {Avatar} from '@common/ui/images/avatar';\nimport {getUserProfileLink} from '@app/web-player/users/user-profile-link';\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\nimport {\n  actionButtonClassName,\n  MediaPageHeaderLayout,\n} from '@app/web-player/layout/media-page-header-layout';\nimport {BulletSeparatedItems} from '@app/web-player/layout/bullet-separated-items';\n\ninterface PlaylistPageHeaderProps {\n  playlist: Playlist;\n  totalDuration: number;\n  queueId: string;\n}\nexport function PlaylistPageHeader({\n  playlist,\n  totalDuration,\n  queueId,\n}: PlaylistPageHeaderProps) {\n  return (\n    <Fragment>\n      <MediaPageHeaderLayout\n        image={<EditableImage playlist={playlist} />}\n        title={playlist.name}\n        subtitle={\n          <AvatarGroup>\n            {playlist.editors?.map(editor => (\n              <Avatar\n                key={editor.id}\n                circle\n                src={editor.avatar}\n                label={editor.display_name}\n                link={getUserProfileLink(editor)}\n              />\n            ))}\n          </AvatarGroup>\n        }\n        description={\n          <Fragment>\n            {playlist.description}\n            {playlist.tracks_count ? (\n              <BulletSeparatedItems className=\"mt-14 text-sm text-muted\">\n                <Trans\n                  message=\"[one 1 track|other :count tracks]\"\n                  values={{count: playlist.tracks_count}}\n                />\n                <FormattedDuration ms={totalDuration} verbose />\n                {playlist.collaborative && <Trans message=\"Collaborative\" />}\n              </BulletSeparatedItems>\n            ) : null}\n          </Fragment>\n        }\n        actionButtons={\n          <ActionButtons\n            playlist={playlist}\n            hasTracks={totalDuration > 0}\n            queueId={queueId}\n          />\n        }\n      />\n    </Fragment>\n  );\n}\n\ninterface ImageContainerProps {\n  playlist: Playlist;\n  size?: string;\n  className?: string;\n}\nfunction EditableImage({playlist, size, className}: ImageContainerProps) {\n  const updatePlaylist = useUpdatePlaylist();\n  const canEdit = usePlaylistPermissions(playlist);\n\n  if (!canEdit) {\n    return (\n      <PlaylistImage\n        className={`${size} ${className} object-cover rounded`}\n        playlist={playlist}\n      />\n    );\n  }\n\n  return (\n    <FileUploadProvider>\n      <ImageSelector\n        showEditButtonOnHover\n        diskPrefix=\"playlist_media\"\n        variant=\"square\"\n        previewSize={size}\n        className={className}\n        value={getPlaylistImageSrc(playlist)}\n        onChange={newValue => {\n          updatePlaylist.mutate({image: newValue});\n        }}\n        placeholderIcon={<ImageIcon />}\n        stretchPreview\n      />\n    </FileUploadProvider>\n  );\n}\n\ninterface ActionButtonsProps {\n  playlist: Playlist;\n  hasTracks: boolean;\n  queueId: string;\n}\nfunction ActionButtons({playlist, hasTracks, queueId}: ActionButtonsProps) {\n  return (\n    <div className=\"text-center md:text-start\">\n      <PlaybackToggleButton\n        disabled={!hasTracks}\n        buttonType=\"text\"\n        queueId={queueId}\n        className={actionButtonClassName({isFirst: true})}\n      />\n      <FollowPlaylistButton\n        buttonType=\"text\"\n        playlist={playlist}\n        className={actionButtonClassName()}\n      />\n      <DialogTrigger type=\"popover\">\n        <Button\n          variant=\"outline\"\n          radius=\"rounded-full\"\n          endIcon={<ArrowDropDownIcon />}\n          className={actionButtonClassName()}\n        >\n          <Trans message=\"More\" />\n        </Button>\n        <PlaylistContextDialog playlist={playlist} />\n      </DialogTrigger>\n    </div>\n  );\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Playlist} from '@app/web-player/playlists/playlist';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {Track} from '@app/web-player/tracks/track';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  playlist: Playlist;\n}\n\ninterface Payload {\n  playlistId: number;\n  tracks: Track[];\n}\n\nexport function useRemoveTracksFromPlaylist() {\n  return useMutation((payload: Payload) => removeTracks(payload), {\n    onSuccess: (response, {tracks}) => {\n      toast(\n        message('Removed [one 1 track|other :count tracks] from playlist', {\n          values: {count: tracks.length},\n        })\n      );\n      queryClient.invalidateQueries(['playlists', response.playlist.id]);\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction removeTracks(payload: Payload): Promise<Response> {\n  const backendPayload = {\n    ids: payload.tracks.map(track => track.id),\n  };\n  return apiClient\n    .post(`playlists/${payload.playlistId}/tracks/remove`, backendPayload)\n    .then(r => r.data);\n}\n","import {Playlist} from '@app/web-player/playlists/playlist';\nimport {Trans} from '@common/i18n/trans';\nimport {ContextMenuButton} from '@app/web-player/context-dialog/context-dialog-layout';\nimport {useRemoveTracksFromPlaylist} from '@app/web-player/playlists/requests/use-remove-tracks-from-playlist';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {TableTrackContextDialog} from '@app/web-player/tracks/context-dialog/table-track-context-dialog';\n\ninterface PlaylistTrackContextDialogProps {\n  playlist: Playlist;\n}\nexport function PlaylistTrackContextDialog({\n  playlist,\n  ...props\n}: PlaylistTrackContextDialogProps) {\n  const {close: closeMenu} = useDialogContext();\n  const removeTracks = useRemoveTracksFromPlaylist();\n\n  return (\n    <TableTrackContextDialog {...props}>\n      {tracks => (\n        <ContextMenuButton\n          onClick={() => {\n            if (!removeTracks.isLoading) {\n              removeTracks.mutate({playlistId: playlist.id, tracks});\n              closeMenu();\n            }\n          }}\n        >\n          <Trans message=\"Remove from this playlist\" />\n        </ContextMenuButton>\n      )}\n    </TableTrackContextDialog>\n  );\n}\n","export function moveMultipleItemsInArray<T>(\n  array: T[],\n  indexOrIndexes: number | number[],\n  newIndex: number\n) {\n  const indexes = Array.isArray(indexOrIndexes)\n    ? indexOrIndexes\n    : [indexOrIndexes];\n  const insertBefore = array[newIndex + (newIndex < indexes[0] ? 0 : 1)];\n  const itemsToBeMoved = indexes.map(i => array[i]);\n\n  // in original sequence order, check for presence in the removal\n  // list, *and* remove them from the original array\n  const moved = [];\n  for (let i = 0; i < array.length; ) {\n    const value = array[i];\n    if (itemsToBeMoved.indexOf(value) >= 0) {\n      moved.push(value);\n      array.splice(i, 1);\n    } else {\n      ++i;\n    }\n  }\n\n  // find the new index of the insertion point\n  let insertionIndex = array.indexOf(insertBefore);\n  if (insertionIndex < 0) {\n    insertionIndex = array.length;\n  }\n\n  // and add the elements back in\n  array.splice(insertionIndex, 0, ...moved);\n\n  return array;\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {Track} from '@app/web-player/tracks/track';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {useParams} from 'react-router-dom';\nimport {\n  moveMultipleItemsInArray\n} from '@common/utils/array/move-multiple-items-in-array';\n\ninterface Response extends BackendResponse {\n  //\n}\n\ninterface Payload {\n  tracks: Track[];\n  oldIndexes: number | number[];\n  newIndex: number;\n}\n\nexport function useReorderPlaylistTracks() {\n  const {playlistId} = useParams();\n  return useMutation(\n    (payload: Payload) => reorderTracks(playlistId!, payload),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['playlists', +playlistId!, 'tracks']);\n      },\n      onError: err => showHttpErrorToast(err),\n    }\n  );\n}\n\nfunction reorderTracks(\n  playlistId: number | string,\n  {tracks, oldIndexes, newIndex}: Payload\n): Promise<Response> {\n  const ids = tracks.map(t => t.id);\n  moveMultipleItemsInArray(ids, oldIndexes, newIndex);\n  return apiClient\n    .post(`playlists/${playlistId}/tracks/order`, {ids})\n    .then(r => r.data);\n}\n","import {RowElementProps} from '@common/ui/tables/table-row';\nimport {Track} from '@app/web-player/tracks/track';\nimport {useIsTouchDevice} from '@common/utils/hooks/is-touch-device';\nimport React, {Fragment, useContext, useRef} from 'react';\nimport {TableContext} from '@common/ui/tables/table-context';\nimport {DragPreviewRenderer} from '@common/ui/interactions/dnd/use-draggable';\nimport {useReorderPlaylistTracks} from '@app/web-player/playlists/requests/use-reorder-playlist-tracks';\nimport {useSortable} from '@common/ui/interactions/dnd/use-sortable';\nimport {usePlaylist} from '@app/web-player/playlists/requests/use-playlist';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {mergeProps} from '@react-aria/utils';\nimport {PlaylistTrackContextDialog} from '@app/web-player/playlists/playlist-page/playlist-track-context-dialog';\nimport {Trans} from '@common/i18n/trans';\nimport {DragPreview} from '@common/ui/interactions/dnd/drag-preview';\n\nexport function PlaylistTableRow({\n  item,\n  children,\n  className,\n  ...domProps\n}: RowElementProps<Track>) {\n  const isTouchDevice = useIsTouchDevice();\n  const {\n    data: tracks,\n    selectRow,\n    selectedRows,\n    sortDescriptor,\n  } = useContext(TableContext);\n  const domRef = useRef<HTMLTableRowElement>(null);\n  const previewRef = useRef<DragPreviewRenderer>(null);\n  const reorderTracks = useReorderPlaylistTracks();\n  const {data} = usePlaylist();\n\n  const {sortableProps} = useSortable({\n    ref: domRef,\n    disabled:\n      (isTouchDevice ?? false) ||\n      reorderTracks.isLoading ||\n      // disable drag and drop if table is sorted via header\n      sortDescriptor?.orderBy !== 'position',\n    item: item,\n    items: tracks,\n    type: 'playlistTrack',\n    preview: previewRef,\n    previewVariant: 'line',\n    onDragEnd: () => {\n      selectRow(null);\n    },\n    onSortStart: () => {\n      // if dragging a row that is already selected, do nothing,\n      // otherwise deselect all other rows and select this one\n      if (!selectedRows.includes(item.id)) {\n        selectRow(item);\n      }\n    },\n    onSortEnd: (oldIndex, newIndex) => {\n      reorderTracks.mutate({\n        tracks: tracks as Track[],\n        oldIndexes:\n          selectedRows.length > 1\n            ? selectedRows.map(id => tracks.findIndex(t => t.id === id))\n            : oldIndex,\n        newIndex,\n      });\n    },\n  });\n\n  return (\n    <Fragment>\n      <DialogTrigger\n        type=\"popover\"\n        triggerOnContextMenu\n        placement=\"bottom-start\"\n      >\n        <tr\n          className={className}\n          ref={domRef}\n          {...mergeProps(sortableProps, domProps)}\n        >\n          {children}\n        </tr>\n        <PlaylistTrackContextDialog playlist={data!.playlist} />\n      </DialogTrigger>\n      {!item.isPlaceholder && <RowDragPreview track={item} ref={previewRef} />}\n    </Fragment>\n  );\n}\n\ninterface RowDragPreviewProps {\n  track: Track;\n}\nconst RowDragPreview = React.forwardRef<\n  DragPreviewRenderer,\n  RowDragPreviewProps\n>(({track}, ref) => {\n  const {selectedRows} = useContext(TableContext);\n\n  const content =\n    selectedRows.length > 1 ? (\n      <Trans message=\":count tracks\" values={{count: selectedRows.length}} />\n    ) : (\n      `${track.name} - ${track.artists?.[0].name}`\n    );\n\n  return (\n    <DragPreview ref={ref}>\n      {() => (\n        <div className=\"p-8 rounded shadow bg-chip text-base\">{content}</div>\n      )}\n    </DragPreview>\n  );\n});\n","import {Trans} from '@common/i18n/trans';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport React, {ReactElement} from 'react';\n\ninterface MediaPageNoResultsMessage {\n  description: ReactElement;\n  searchQuery?: string;\n  className?: string;\n}\nexport function MediaPageNoResultsMessage({\n  description,\n  searchQuery,\n  className,\n}: MediaPageNoResultsMessage) {\n  if (searchQuery) {\n    return (\n      <IllustratedMessage\n        className={className}\n        title={<Trans message=\"No results found\" />}\n        description={\n          <Trans message=\"Try another search query or different filters\" />\n        }\n      />\n    );\n  }\n  return (\n    <IllustratedMessage\n      className={className}\n      title={<Trans message=\"Nothing to display\" />}\n      description={description}\n    />\n  );\n}\n","import {usePlaylist} from '@app/web-player/playlists/requests/use-playlist';\nimport {Trans} from '@common/i18n/trans';\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {Track} from '@app/web-player/tracks/track';\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\nimport React from 'react';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {VirtualTableBody} from '@app/web-player/playlists/virtual-table-body';\nimport {PlaylistPageHeader} from '@app/web-player/playlists/playlist-page/playlist-page-header';\nimport {PlaylistTrackContextDialog} from '@app/web-player/playlists/playlist-page/playlist-track-context-dialog';\nimport {Playlist} from '@app/web-player/playlists/playlist';\nimport {queueGroupId} from '@app/web-player/queue-group-id';\nimport {PlaylistTableRow} from '@app/web-player/playlists/playlist-page/playlist-table-row';\nimport {MediaPageNoResultsMessage} from '@app/web-player/layout/media-page-no-results-message';\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {PageStatus} from '@common/http/page-status';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\nexport function PlaylistPage() {\n  const query = usePlaylist();\n\n  if (query.data) {\n    return (\n      <div>\n        <PageMetaTags query={query} />\n        <PageContent\n          initialTracks={query.data.tracks}\n          playlist={query.data.playlist}\n          totalDuration={query.data.totalDuration}\n        />\n      </div>\n    );\n  }\n\n  return <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />;\n}\n\ninterface PageContentProps {\n  initialTracks: PaginationResponse<Track>;\n  playlist: Playlist;\n  totalDuration: number;\n}\nfunction PageContent({\n  initialTracks,\n  playlist,\n  totalDuration,\n}: PageContentProps) {\n  const {trans} = useTrans();\n  const query = useInfiniteData({\n    initialPage: initialTracks,\n    queryKey: ['playlists', playlist.id],\n    endpoint: `playlists/${playlist.id}/tracks`,\n    defaultOrderBy: 'position',\n    defaultOrderDir: 'asc',\n    paginate: 'simple',\n    willSortOrFilter: true,\n  });\n  const {\n    isInitialLoading,\n    sortDescriptor,\n    setSortDescriptor,\n    searchQuery,\n    setSearchQuery,\n    items,\n  } = query;\n  const totalItems = playlist.tracks_count || 0;\n  const queueId = queueGroupId(playlist, '*', sortDescriptor);\n\n  return (\n    <div>\n      <AdHost slot=\"general_top\" className=\"mb-44\" />\n      <PlaylistPageHeader\n        playlist={playlist}\n        totalDuration={totalDuration}\n        queueId={queueId}\n      />\n      <TextField\n        value={searchQuery}\n        onChange={e => setSearchQuery(e.target.value)}\n        className=\"max-w-512 mt-28 mb-44 md:mb-24\"\n        size=\"sm\"\n        startAdornment={<SearchIcon />}\n        placeholder={trans(message('Search within playlist'))}\n      />\n      <TrackTable\n        queueGroupId={queueId}\n        tracks={items}\n        sortDescriptor={sortDescriptor}\n        onSortChange={setSortDescriptor}\n        renderRowAs={PlaylistTableRow}\n        contextDialog={<PlaylistTrackContextDialog playlist={playlist} />}\n        tableBody={<VirtualTableBody query={query} totalItems={totalItems} />}\n      />\n      {!items.length && !isInitialLoading && (\n        <MediaPageNoResultsMessage\n          className=\"mt-34\"\n          searchQuery={searchQuery}\n          description={\n            <Trans message=\"This playlist does not have any tracks yet\" />\n          }\n        />\n      )}\n      <AdHost slot=\"general_bottom\" className=\"mt-44\" />\n    </div>\n  );\n}\n","import {Commentable} from '@common/comments/commentable';\nimport {Comment} from '@common/comments/comment';\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\n\nexport function commentsQueryKey(commentable: Commentable) {\n  return ['comment', `${commentable.id}-${commentable.model_type}`];\n}\n\nexport function useComments(commentable: Commentable) {\n  return useInfiniteData<Comment>({\n    queryKey: commentsQueryKey(commentable),\n    endpoint: 'commentable/comments',\n    //paginate: 'cursor',\n    queryParams: {\n      commentable_type: commentable.model_type,\n      commentable_id: commentable.id,\n    },\n  });\n}\n","import React, {memo, useContext, useState} from 'react';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\nimport {Link} from 'react-router-dom';\nimport {Comment} from '@common/comments/comment';\nimport {useAuth} from '@common/auth/use-auth';\nimport {UserAvatar} from '@common/ui/images/user-avatar';\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {DeleteIcon} from '@common/icons/material/Delete';\nimport {NewCommentForm} from '@common/comments/new-comment-form';\nimport {User} from '@common/auth/user';\nimport {Commentable} from '@common/comments/commentable';\nimport {useDeleteComments} from '@common/comments/requests/use-delete-comments';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {queryClient} from '@common/http/query-client';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\n\ninterface CommentListItemProps {\n  comment: Comment;\n  commentable: Commentable;\n  canDelete?: boolean;\n}\nexport function CommentListItem({\n  comment,\n  commentable,\n  // user can delete comment if they have created it, or they have relevant permissions on commentable\n  canDelete,\n}: CommentListItemProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const {user, hasPermission} = useAuth();\n  const [replyFormVisible, setReplyFormVisible] = useState(false);\n\n  return (\n    <div\n      style={{paddingLeft: `${comment.depth * 20}px`}}\n      onClick={() => {\n        if (isMobile) {\n          setReplyFormVisible(!replyFormVisible);\n        }\n      }}\n    >\n      <div className=\"flex items-start gap-10 py-10 min-h-70 group\">\n        <UserAvatar className=\"flex-shrink-0\" user={comment.user} size=\"lg\" />\n        {comment.deleted ? (\n          <span className=\"text-muted text-sm italic pt-10\">\n            <Trans message=\"This comment has been deleted.\" />\n          </span>\n        ) : (\n          <div className=\"text-sm flex-auto\">\n            <div className=\"flex items-center gap-4\">\n              {comment.user && <UserDisplayName user={comment.user} />}\n              {comment.position ? (\n                <Position\n                  commentable={commentable}\n                  position={comment.position}\n                />\n              ) : null}\n            </div>\n            <div>{comment.content}</div>\n          </div>\n        )}\n        <div className=\"ml-auto md:min-w-86 flex-shrink-0 text-end\">\n          <time className=\"text-muted text-xs\">\n            <FormattedRelativeTime\n              date={comment.created_at}\n              style={isMobile ? 'narrow' : 'long'}\n            />\n          </time>\n          {user != null && !comment.deleted && !isMobile && (\n            <div className=\"mt-2 flex items-center gap-6 justify-end invisible group-hover:visible\">\n              {comment.depth < 5 && hasPermission('comments.create') && (\n                <Button\n                  variant=\"outline\"\n                  size=\"2xs\"\n                  onClick={() => setReplyFormVisible(!replyFormVisible)}\n                >\n                  <Trans message=\"Reply\" />\n                </Button>\n              )}\n              {(comment.user_id === user.id || canDelete) && (\n                <DeleteCommentButton comment={comment} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      {replyFormVisible ? (\n        <NewCommentForm\n          className={!comment?.depth ? 'pl-20' : undefined}\n          commentable={commentable}\n          inReplyTo={comment}\n          autoFocus\n          onSuccess={() => {\n            setReplyFormVisible(false);\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n\ninterface PositionProps {\n  commentable: Commentable;\n  position: number;\n}\nconst Position = memo(({commentable, position}: PositionProps) => {\n  if (!commentable.duration) return null;\n  const seconds = (position / 100) * (commentable.duration / 1000);\n  return (\n    <span className=\"text-muted text-xs\">\n      <Trans\n        message=\"at :position\"\n        values={{\n          position: <FormattedDuration seconds={seconds} />,\n        }}\n      />\n    </span>\n  );\n});\n\ninterface DeleteCommentsButtonProps {\n  comment: Comment;\n}\nexport function DeleteCommentButton({comment}: DeleteCommentsButtonProps) {\n  const deleteComments = useDeleteComments();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          deleteComments.mutate(\n            {commentIds: [comment.id]},\n            {\n              onSuccess: () => {\n                queryClient.invalidateQueries(['comment']);\n              },\n            }\n          );\n        }\n      }}\n    >\n      <IconButton\n        size=\"2xs\"\n        variant=\"outline\"\n        radius=\"rounded\"\n        disabled={deleteComments.isLoading}\n      >\n        <DeleteIcon />\n      </IconButton>\n      <ConfirmationDialog\n        isDanger\n        title={<Trans message=\"Delete comment?\" />}\n        body={<Trans message=\"Are you sure you want to delete this comment?\" />}\n        confirm={<Trans message=\"Delete\" />}\n      />\n    </DialogTrigger>\n  );\n}\n\ninterface UserDisplayNameProps {\n  user: User;\n}\nfunction UserDisplayName({user}: UserDisplayNameProps) {\n  const {auth} = useContext(SiteConfigContext);\n  if (auth.getUserProfileLink) {\n    return (\n      <Link to={auth.getUserProfileLink(user)} className=\"hover:underline\">\n        {user.display_name}\n      </Link>\n    );\n  }\n  return <div className=\"text-muted\">{user.display_name}</div>;\n}\n","import {Comment} from '@common/comments/comment';\nimport {Trans} from '@common/i18n/trans';\nimport {CommentIcon} from '@common/icons/material/Comment';\nimport {Commentable} from '@common/comments/commentable';\nimport {useComments} from '@common/comments/requests/use-comments';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {FormattedNumber} from '@common/i18n/formatted-number';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {CommentListItem} from '@common/comments/comment-list/comment-list-item';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\n\ninterface CommentListProps {\n  commentable: Commentable;\n  canDeleteAllComments?: boolean;\n  className?: string;\n}\nexport function CommentList({\n  className,\n  commentable,\n  canDeleteAllComments = false,\n}: CommentListProps) {\n  const {items, totalItems, ...query} = useComments(commentable);\n\n  if (query.isError) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <div className=\"mb-8 pb-8 border-b flex items-center gap-8\">\n        <CommentIcon size=\"sm\" className=\"text-muted\" />\n        {query.isInitialLoading ? (\n          <Trans message=\"Loading comments...\" />\n        ) : (\n          <Trans\n            message=\":count comments\"\n            values={{count: <FormattedNumber value={totalItems || 0} />}}\n          />\n        )}\n      </div>\n      <AnimatePresence initial={false} mode=\"wait\">\n        {query.isInitialLoading ? (\n          <CommentSkeletons count={4} />\n        ) : (\n          <CommentListItems\n            comments={items}\n            canDeleteAllComments={canDeleteAllComments}\n            commentable={commentable}\n          />\n        )}\n      </AnimatePresence>\n      <InfiniteScrollSentinel query={query} />\n    </div>\n  );\n}\n\ninterface CommentListItemsProps {\n  comments: Comment[];\n  canDeleteAllComments: boolean;\n  commentable: Commentable;\n}\nfunction CommentListItems({\n  comments,\n  commentable,\n  canDeleteAllComments,\n}: CommentListItemsProps) {\n  if (!comments.length) {\n    return (\n      <IllustratedMessage\n        className=\"mt-24\"\n        size=\"sm\"\n        title={<Trans message=\"Seems a little quiet over here\" />}\n        description={<Trans message=\"Be the first to comment\" />}\n      />\n    );\n  }\n\n  return (\n    <m.div key=\"comments\" {...opacityAnimation}>\n      {comments.map(comment => (\n        <CommentListItem\n          key={comment.id}\n          comment={comment}\n          commentable={commentable}\n          canDelete={canDeleteAllComments}\n        />\n      ))}\n    </m.div>\n  );\n}\n\ninterface CommentSkeletonsProps {\n  count: number;\n}\nexport function CommentSkeletons({count}: CommentSkeletonsProps) {\n  return (\n    <m.div key=\"loading-skeleton\" {...opacityAnimation}>\n      {[...new Array(count).keys()].map(index => (\n        <div\n          key={index}\n          className=\"flex items-start gap-10 py-10 min-h-70 group\"\n        >\n          <Skeleton variant=\"avatar\" />\n          <div className=\"flex-auto max-w-384\">\n            <Skeleton className=\"leading-3 max-w-120\" />\n            <Skeleton className=\"leading-3\" />\n          </div>\n          <div className=\"w-64 ml-auto\">\n            <Skeleton className=\"leading-3\" />\n          </div>\n        </div>\n      ))}\n    </m.div>\n  );\n}\n","import {useLinkifiedString} from '@common/utils/hooks/use-linkified-string';\nimport {Fragment, useLayoutEffect, useRef, useState} from 'react';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport clsx from 'clsx';\n\ninterface TruncatedDescriptionProps {\n  description?: string;\n  className?: string;\n}\n\nexport function TruncatedDescription({\n  description,\n  className,\n}: TruncatedDescriptionProps) {\n  const linkifiedDescription = useLinkifiedString(description);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n  const [isOverflowing, setIsOverflowing] = useState(false);\n  const [isShowingAll, setIsShowingAll] = useState(false);\n\n  useLayoutEffect(() => {\n    const wrapperHeight =\n      wrapperRef.current?.getBoundingClientRect().height || 0;\n    const contentHeight = wrapperRef.current?.scrollHeight || 0;\n    if (contentHeight > wrapperHeight) {\n      setIsOverflowing(true);\n    }\n  }, []);\n\n  if (!linkifiedDescription) return null;\n\n  return (\n    <Fragment>\n      <div\n        ref={wrapperRef}\n        className={clsx(\n          'relative',\n          className,\n          !isShowingAll && 'max-h-160 overflow-hidden',\n          !isShowingAll &&\n            'after:absolute after:bottom-0 after:left-0 after:w-full after:h-20 after:bg-gradient-to-b after:from-transparent after:to-background'\n        )}\n      >\n        <div\n          ref={contentRef}\n          dangerouslySetInnerHTML={{__html: linkifiedDescription}}\n        />\n      </div>\n      {isOverflowing && (\n        <Button\n          size=\"xs\"\n          className=\"mt-20\"\n          variant=\"outline\"\n          onClick={() => setIsShowingAll(!isShowingAll)}\n        >\n          {isShowingAll ? (\n            <Trans message=\"Show less\" />\n          ) : (\n            <Trans message=\"Show more\" />\n          )}\n        </Button>\n      )}\n    </Fragment>\n  );\n}\n","import {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {Trans} from '@common/i18n/trans';\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\nimport React, {Fragment} from 'react';\nimport {queueGroupId} from '@app/web-player/queue-group-id';\nimport {useAlbum} from '@app/web-player/albums/requests/use-album';\nimport {\n  actionButtonClassName,\n  MediaPageHeaderLayout,\n} from '@app/web-player/layout/media-page-header-layout';\nimport {AvatarGroup} from '@common/ui/images/avatar-group';\nimport {Avatar} from '@common/ui/images/avatar';\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {Album} from '@app/web-player/albums/album';\nimport {getSmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {getArtistLink} from '@app/web-player/artists/artist-link';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {useSortableTableData} from '@common/ui/tables/use-sortable-table-data';\nimport {BulletSeparatedItems} from '@app/web-player/layout/bullet-separated-items';\nimport {CommentList} from '@common/comments/comment-list/comment-list';\nimport {useAlbumPermissions} from '@app/web-player/albums/use-album-permissions';\nimport {PageStatus} from '@common/http/page-status';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {TrackActionsBar} from '@app/web-player/tracks/track-actions-bar';\nimport {FocusScope} from '@react-aria/focus';\nimport {ChipList} from '@common/ui/forms/input-field/chip-field/chip-list';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {Link} from 'react-router-dom';\nimport {TruncatedDescription} from '@app/web-player/tracks/truncated-description';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {CommentBarContextProvider} from '@app/web-player/tracks/waveform/comment-bar-context';\nimport {CommentBarNewCommentForm} from '@app/web-player/tracks/waveform/comment-bar-new-comment-form';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\nexport function AlbumPage() {\n  const {player} = useSettings();\n  const query = useAlbum({\n    autoUpdate: true,\n    defaultRelations: true,\n  });\n  const {canEdit} = useAlbumPermissions(query.data?.album);\n\n  if (query.data) {\n    return (\n      <Fragment>\n        <CommentBarContextProvider>\n          <PageMetaTags query={query} />\n          <AdHost slot=\"general_top\" className=\"mb-44\" />\n          <AlbumPageHeader album={query.data.album} />\n          {player?.track_comments ? (\n            <CommentBarNewCommentForm\n              className=\"mb-16\"\n              commentable={query.data.album}\n            />\n          ) : null}\n        </CommentBarContextProvider>\n        {query.data.album.tags?.length ? (\n          <FocusScope>\n            <ChipList className=\"mb-16\" selectable>\n              {query.data.album.tags.map(tag => (\n                <Chip elementType={Link} to={`/tag/${tag.name}`} key={tag.id}>\n                  #{tag.display_name || tag.name}\n                </Chip>\n              ))}\n            </ChipList>\n          </FocusScope>\n        ) : null}\n        <TruncatedDescription\n          description={query.data.album.description}\n          className=\"text-sm mt-24\"\n        />\n        <AdHost slot=\"album_above\" className=\"mt-34\" />\n        <AlbumTrackTable album={query.data.album} />\n        <CommentList\n          className=\"mt-34\"\n          commentable={query.data.album}\n          canDeleteAllComments={canEdit}\n        />\n        <AdHost slot=\"general_bottom\" className=\"mt-44\" />\n      </Fragment>\n    );\n  }\n\n  return <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />;\n}\n\ninterface AlbumTrackTableProps {\n  album: Album;\n}\nfunction AlbumTrackTable({album}: AlbumTrackTableProps) {\n  const {data, sortDescriptor, onSortChange} = useSortableTableData(\n    album.tracks\n  );\n  return (\n    <div className=\"mt-44\">\n      <TrackTable\n        queueGroupId={queueGroupId(album)}\n        tracks={data}\n        sortDescriptor={sortDescriptor}\n        onSortChange={onSortChange}\n        hideTrackImage\n        hideArtist\n        hideAlbum\n        hidePopularity={false}\n      />\n      {!album.tracks?.length && (\n        <IllustratedMessage\n          className=\"mt-34\"\n          title={<Trans message=\"Nothing to display\" />}\n          description={\n            <Trans message=\"This album does not have any tracks yet\" />\n          }\n        />\n      )}\n    </div>\n  );\n}\n\ninterface PlaylistPageHeaderProps {\n  album: Album;\n}\nfunction AlbumPageHeader({album}: PlaylistPageHeaderProps) {\n  const totalDuration = album.tracks?.reduce(\n    (t, track) => t + (track.duration || 0),\n    0\n  );\n\n  return (\n    <Fragment>\n      <MediaPageHeaderLayout\n        className=\"mb-28\"\n        image={<AlbumImage album={album} className=\"rounded\" />}\n        title={album.name}\n        subtitle={\n          <AvatarGroup>\n            {album.artists?.map(artist => (\n              <Avatar\n                key={artist.id}\n                circle\n                src={getSmallArtistImage(artist)}\n                label={artist.name}\n                link={getArtistLink(artist)}\n              />\n            ))}\n          </AvatarGroup>\n        }\n        description={\n          <BulletSeparatedItems className=\"text-sm text-muted\">\n            {album.tracks?.length ? (\n              <Trans\n                message=\"[one 1 track|other :count tracks]\"\n                values={{count: album.tracks.length}}\n              />\n            ) : null}\n            {album.tracks?.length ? (\n              <FormattedDuration ms={totalDuration} verbose />\n            ) : null}\n            <FormattedDate date={album.release_date} />\n          </BulletSeparatedItems>\n        }\n        actionButtons={\n          <TrackActionsBar\n            item={album}\n            managesItem={false}\n            buttonGap={undefined}\n            buttonSize=\"sm\"\n            buttonRadius=\"rounded-full\"\n            buttonClassName={actionButtonClassName()}\n          >\n            <PlaybackToggleButton\n              disabled={!album.tracks?.length}\n              buttonType=\"text\"\n              queueId={queueGroupId(album)}\n              className={actionButtonClassName({isFirst: true})}\n            />\n          </TrackActionsBar>\n        }\n      />\n    </Fragment>\n  );\n}\n","import {\n  useInfiniteData,\n  UseInfiniteDataProps,\n} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {Track} from '@app/web-player/tracks/track';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\nexport const libraryTracksQueryKey = (userId: number | 'me') => {\n  const user = getBootstrapData().user;\n  // make sure we are using \"me\" as ID for current user\n  // everywhere, so it's easier to invalidate queries\n  if (userId === user?.id) {\n    userId = 'me';\n  }\n  return ['tracks', 'library', userId];\n};\n\nexport function useUserLikedTracks(\n  userId: number | 'me',\n  options?: Partial<UseInfiniteDataProps<Track>>\n) {\n  return useInfiniteData<Track>({\n    queryKey: libraryTracksQueryKey(userId),\n    endpoint: `users/${userId}/liked-tracks`,\n    defaultOrderBy: 'likes.created_at',\n    defaultOrderDir: 'desc',\n    ...options,\n  });\n}\n","import {StaticPageTitle} from '@common/seo/static-page-title';\nimport {Trans} from '@common/i18n/trans';\nimport {useLibraryStore} from '@app/web-player/library/state/likes-store';\nimport React from 'react';\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\nimport {VirtualTableBody} from '@app/web-player/playlists/virtual-table-body';\nimport {queueGroupId} from '@app/web-player/queue-group-id';\nimport {useAuth} from '@common/auth/use-auth';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {message} from '@common/i18n/message';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\nimport {PageErrorMessage} from '@common/errors/page-error-message';\nimport {TableDataItem} from '@common/ui/tables/types/table-data-item';\nimport {MediaPageNoResultsMessage} from '@app/web-player/layout/media-page-no-results-message';\nimport {useUserLikedTracks} from '@app/web-player/library/requests/use-user-liked-tracks';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\nexport function LibraryTracksPage() {\n  const trackCount = useLibraryStore(s => Object.keys(s.track).length);\n\n  const query = useUserLikedTracks('me', {willSortOrFilter: true});\n  const {\n    isInitialLoading,\n    sortDescriptor,\n    setSortDescriptor,\n    searchQuery,\n    setSearchQuery,\n    items,\n    isError,\n  } = query;\n\n  const {user} = useAuth();\n  const {trans} = useTrans();\n  const queueId = queueGroupId(user!, 'libraryTracks', sortDescriptor);\n\n  if (isError) {\n    return <PageErrorMessage />;\n  }\n\n  return (\n    <div>\n      <StaticPageTitle>\n        <Trans message=\"Your tracks\" />\n      </StaticPageTitle>\n      <AdHost slot=\"general_top\" className=\"mb-34\" />\n      <div className=\"flex flex-wrap items-center gap-24 justify-between mb-34\">\n        <h1 className=\"text-2xl font-semibold w-max md:w-full whitespace-nowrap\">\n          {trackCount ? (\n            <Trans\n              message=\"[one 1 liked song|other :count liked songs]\"\n              values={{count: trackCount}}\n            />\n          ) : (\n            <Trans message=\"My songs\" />\n          )}\n        </h1>\n        <PlaybackToggleButton\n          queueId={queueId}\n          buttonType=\"text\"\n          className=\"min-w-128 flex-shrink-0\"\n        />\n        <TextField\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n          className=\"max-w-512 flex-auto\"\n          size=\"sm\"\n          startAdornment={<SearchIcon />}\n          placeholder={trans(message('Search within tracks'))}\n        />\n      </div>\n      <TrackTable\n        queueGroupId={queueId}\n        tracks={isInitialLoading ? getPlaceholderItems(trackCount) : items}\n        sortDescriptor={sortDescriptor}\n        onSortChange={setSortDescriptor}\n        hideAddedAtColumn={false}\n        tableBody={<VirtualTableBody query={query} totalItems={trackCount} />}\n      />\n      {!items.length && !isInitialLoading && (\n        <MediaPageNoResultsMessage\n          className=\"mt-34\"\n          searchQuery={searchQuery}\n          description={\n            <Trans message=\"You have not added any songs to your library yet.\" />\n          }\n        />\n      )}\n      <AdHost slot=\"general_bottom\" className=\"mt-34\" />\n    </div>\n  );\n}\n\nfunction getPlaceholderItems(totalTracks: number): TableDataItem[] {\n  // 30 tracks per page by default\n  return [...new Array(Math.min(totalTracks, 30)).keys()].map((key, index) => {\n    return {\n      isPlaceholder: true,\n      id: `placeholder-${key}`,\n    };\n  });\n}\n","import {SortDescriptor} from '@common/ui/tables/types/sort-descriptor';\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\nimport {Button} from '@common/ui/buttons/button';\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\nimport {Trans} from '@common/i18n/trans';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport React from 'react';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {SortIcon} from '@common/icons/material/Sort';\n\ninterface Props {\n  items: Record<string, MessageDescriptor>;\n  sortDescriptor: SortDescriptor;\n  setSortDescriptor: (sort: SortDescriptor) => void;\n}\nexport function LibraryPageSortDropdown({\n  items,\n  sortDescriptor,\n  setSortDescriptor,\n}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n  const selectedValue = `${sortDescriptor.orderBy}:${sortDescriptor.orderDir}`;\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      selectedValue={selectedValue}\n      onSelectionChange={newValue => {\n        const [orderBy, orderDir] = (newValue as string).split(':');\n        setSortDescriptor({\n          orderBy,\n          orderDir: orderDir as SortDescriptor['orderDir'],\n        });\n      }}\n    >\n      {isMobile ? (\n        <IconButton>\n          <SortIcon />\n        </IconButton>\n      ) : (\n        <Button\n          variant=\"outline\"\n          className=\"flex-shrink-0\"\n          endIcon={<ArrowDropDownIcon />}\n        >\n          <Trans {...items[selectedValue]} />\n        </Button>\n      )}\n      <Menu>\n        {Object.entries(items).map(([value, label]) => (\n          <Item key={value} value={value}>\n            <Trans {...label} />\n          </Item>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {\n  useInfiniteData,\n  UseInfiniteDataProps,\n} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {Album} from '@app/web-player/albums/album';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\nexport const libraryAlbumsQueryKey = (\n  userId: number | 'me',\n  queryParams?: Record<string, string | number>\n) => {\n  const user = getBootstrapData().user;\n  // make sure we are using \"me\" as ID for current user\n  // everywhere, so it's easier to invalidate queries\n  if (userId === user?.id) {\n    userId = 'me';\n  }\n  const key: any[] = ['albums', 'library', userId];\n  if (queryParams) {\n    key.push(queryParams);\n  }\n  return key;\n};\n\nexport function useUserLikedAlbums(\n  userId: number | 'me',\n  options?: Partial<UseInfiniteDataProps<Album>>\n) {\n  return useInfiniteData<Album>({\n    queryKey: libraryAlbumsQueryKey(userId),\n    endpoint: `users/${userId}/liked-albums`,\n    defaultOrderBy: 'likes.created_at',\n    defaultOrderDir: 'desc',\n    ...options,\n  });\n}\n","import {StaticPageTitle} from '@common/seo/static-page-title';\nimport {Trans} from '@common/i18n/trans';\nimport {useLibraryStore} from '@app/web-player/library/state/likes-store';\nimport React from 'react';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {message} from '@common/i18n/message';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {PageErrorMessage} from '@common/errors/page-error-message';\nimport {AlbumGridItem} from '@app/web-player/albums/album-grid-item';\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {MediaPageNoResultsMessage} from '@app/web-player/layout/media-page-no-results-message';\nimport {PlayableMediaGridSkeleton} from '@app/web-player/playable-item/player-media-grid-skeleton';\nimport {LibraryPageSortDropdown} from '@app/web-player/library/library-page-sort-dropdown';\nimport {useUserLikedAlbums} from '@app/web-player/library/requests/use-user-liked-albums';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\nconst sortItems = {\n  'likes.created_at:desc': message('Recently added'),\n  'name:asc': message('A-Z'),\n  'release_date:desc': message('Release date'),\n};\n\nexport function LibraryAlbumsPage() {\n  const {trans} = useTrans();\n  const totalItems = useLibraryStore(s => Object.keys(s.album).length);\n  const query = useUserLikedAlbums('me', {willSortOrFilter: true});\n  const {\n    isInitialLoading,\n    sortDescriptor,\n    setSortDescriptor,\n    searchQuery,\n    setSearchQuery,\n    items,\n    isError,\n  } = query;\n\n  if (isError) {\n    return <PageErrorMessage />;\n  }\n\n  return (\n    <div>\n      <StaticPageTitle>\n        <Trans message=\"Your albums\" />\n      </StaticPageTitle>\n      <AdHost slot=\"general_top\" className=\"mb-34\" />\n      <h1 className=\"text-2xl font-semibold mb-20\">\n        {totalItems ? (\n          <Trans\n            message=\"[one 1 liked album|other :count liked albums]\"\n            values={{count: totalItems}}\n          />\n        ) : (\n          <Trans message=\"My albums\" />\n        )}\n      </h1>\n      <div className=\"flex items-center gap-24 justify-between\">\n        <TextField\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n          className=\"max-w-512 flex-auto\"\n          size=\"sm\"\n          startAdornment={<SearchIcon />}\n          placeholder={trans(message('Search within albums'))}\n        />\n        <LibraryPageSortDropdown\n          items={sortItems}\n          sortDescriptor={sortDescriptor}\n          setSortDescriptor={setSortDescriptor}\n        />\n      </div>\n      <div className=\"mt-34\">\n        <AnimatePresence initial={false} mode=\"wait\">\n          {isInitialLoading ? (\n            <PlayableMediaGridSkeleton itemCount={totalItems} />\n          ) : (\n            <m.div key=\"media-grid\" {...opacityAnimation}>\n              <ContentGrid>\n                {items.map(album => (\n                  <AlbumGridItem key={album.id} album={album} />\n                ))}\n                <InfiniteScrollSentinel query={query} />\n              </ContentGrid>\n            </m.div>\n          )}\n        </AnimatePresence>\n      </div>\n      {!items.length && !isInitialLoading && (\n        <MediaPageNoResultsMessage\n          className=\"mt-34\"\n          searchQuery={searchQuery}\n          description={\n            <Trans message=\"You have not added any albums to your library yet.\" />\n          }\n        />\n      )}\n      <AdHost slot=\"general_bottom\" className=\"mt-34\" />\n    </div>\n  );\n}\n","import {\n  useInfiniteData,\n  UseInfiniteDataProps,\n} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {Artist} from '@app/web-player/artists/artist';\n\nexport const libraryArtistsQueryKey = (userId: number | 'me') => {\n  const user = getBootstrapData().user;\n  // make sure we are using \"me\" as ID for current user\n  // everywhere, so it's easier to invalidate queries\n  if (userId === user?.id) {\n    userId = 'me';\n  }\n  return ['artists', 'library', userId];\n};\n\nexport function useUserLikedArtists(\n  userId: number | 'me',\n  options?: Partial<UseInfiniteDataProps<Artist>>\n) {\n  return useInfiniteData<Artist>({\n    queryKey: libraryArtistsQueryKey(userId),\n    endpoint: `users/${userId}/liked-artists`,\n    defaultOrderBy: 'likes.created_at',\n    defaultOrderDir: 'desc',\n    ...options,\n  });\n}\n","import {StaticPageTitle} from '@common/seo/static-page-title';\nimport {Trans} from '@common/i18n/trans';\nimport {useLibraryStore} from '@app/web-player/library/state/likes-store';\nimport React from 'react';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {message} from '@common/i18n/message';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {PageErrorMessage} from '@common/errors/page-error-message';\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {MediaPageNoResultsMessage} from '@app/web-player/layout/media-page-no-results-message';\nimport {ArtistGridItem} from '@app/web-player/artists/artist-grid-item';\nimport {PlayableMediaGridSkeleton} from '@app/web-player/playable-item/player-media-grid-skeleton';\nimport {LibraryPageSortDropdown} from '@app/web-player/library/library-page-sort-dropdown';\nimport {useUserLikedArtists} from '@app/web-player/library/requests/use-user-liked-artists';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\nconst sortItems = {\n  'likes.created_at:desc': message('Recently added'),\n  'name:asc': message('A-Z'),\n};\n\nexport function LibraryArtistsPage() {\n  const {trans} = useTrans();\n  const totalItems = useLibraryStore(s => Object.keys(s.artist).length);\n  const query = useUserLikedArtists('me', {willSortOrFilter: true});\n  const {\n    isInitialLoading,\n    sortDescriptor,\n    setSortDescriptor,\n    searchQuery,\n    setSearchQuery,\n    items,\n    isError,\n  } = query;\n\n  if (isError) {\n    return <PageErrorMessage />;\n  }\n\n  return (\n    <div>\n      <StaticPageTitle>\n        <Trans message=\"Your artists\" />\n      </StaticPageTitle>\n      <AdHost slot=\"general_top\" className=\"mb-34\" />\n      <h1 className=\"text-2xl font-semibold mb-20\">\n        {totalItems ? (\n          <Trans\n            message=\"[one 1 liked artist|other :count liked artists]\"\n            values={{count: totalItems}}\n          />\n        ) : (\n          <Trans message=\"My artists\" />\n        )}\n      </h1>\n      <div className=\"flex items-center gap-24 justify-between\">\n        <TextField\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n          className=\"max-w-512 flex-auto\"\n          size=\"sm\"\n          startAdornment={<SearchIcon />}\n          placeholder={trans(message('Search within artists'))}\n        />\n        <LibraryPageSortDropdown\n          items={sortItems}\n          sortDescriptor={sortDescriptor}\n          setSortDescriptor={setSortDescriptor}\n        />\n      </div>\n      <div className=\"mt-34\">\n        <AnimatePresence initial={false} mode=\"wait\">\n          {isInitialLoading ? (\n            <PlayableMediaGridSkeleton\n              itemCount={totalItems}\n              itemRadius=\"rounded-full\"\n              showDescription={false}\n            />\n          ) : (\n            <m.div key=\"media-grid\" {...opacityAnimation}>\n              <ContentGrid>\n                {items.map(artist => (\n                  <ArtistGridItem key={artist.id} artist={artist} />\n                ))}\n                <InfiniteScrollSentinel query={query} />\n              </ContentGrid>\n            </m.div>\n          )}\n        </AnimatePresence>\n      </div>\n      {!items.length && !isInitialLoading && (\n        <MediaPageNoResultsMessage\n          className=\"mt-34\"\n          searchQuery={searchQuery}\n          description={\n            <Trans message=\"You have not added any artists to your library yet.\" />\n          }\n        />\n      )}\n      <AdHost slot=\"general_bottom\" className=\"mt-34\" />\n    </div>\n  );\n}\n","import {StaticPageTitle} from '@common/seo/static-page-title';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\nimport {VirtualTableBody} from '@app/web-player/playlists/virtual-table-body';\nimport {queueGroupId} from '@app/web-player/queue-group-id';\nimport {useAuth} from '@common/auth/use-auth';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {message} from '@common/i18n/message';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\nimport {PageErrorMessage} from '@common/errors/page-error-message';\nimport {TableDataItem} from '@common/ui/tables/types/table-data-item';\nimport {MediaPageNoResultsMessage} from '@app/web-player/layout/media-page-no-results-message';\nimport {Track} from '@app/web-player/tracks/track';\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\nexport const libraryHistoryQueryKey = ['tracks', 'history', 'me'];\n\nexport function LibraryHistoryPage() {\n  const {user} = useAuth();\n\n  const query = useInfiniteData<Track>({\n    queryKey: libraryHistoryQueryKey,\n    endpoint: `track/plays/${user!.id}`,\n    defaultOrderBy: 'track_plays.created_at',\n    defaultOrderDir: 'desc',\n    paginate: 'simple',\n    willSortOrFilter: true,\n  });\n  const {\n    isInitialLoading,\n    sortDescriptor,\n    setSortDescriptor,\n    searchQuery,\n    setSearchQuery,\n    items,\n    isError,\n  } = query;\n\n  const {trans} = useTrans();\n  const queueId = queueGroupId(user!, 'playHistory', sortDescriptor);\n\n  if (isError) {\n    return <PageErrorMessage />;\n  }\n\n  return (\n    <div>\n      <StaticPageTitle>\n        <Trans message=\"Listening history\" />\n      </StaticPageTitle>\n      <AdHost slot=\"general_top\" className=\"mb-34\" />\n      <div className=\"flex flex-wrap items-center gap-24 justify-between mb-34\">\n        <h1 className=\"text-2xl font-semibold w-max md:w-full whitespace-nowrap\">\n          <Trans message=\"Listening history\" />\n        </h1>\n        <PlaybackToggleButton\n          queueId={queueId}\n          buttonType=\"text\"\n          className=\"min-w-128 flex-shrink-0\"\n        />\n        <TextField\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n          className=\"max-w-512 flex-auto\"\n          size=\"sm\"\n          startAdornment={<SearchIcon />}\n          placeholder={trans(message('Search within history'))}\n        />\n      </div>\n      <TrackTable\n        queueGroupId={queueId}\n        tracks={isInitialLoading ? getPlaceholderItems() : items}\n        sortDescriptor={sortDescriptor}\n        onSortChange={setSortDescriptor}\n        hideAddedAtColumn={false}\n        tableBody={<VirtualTableBody query={query} />}\n      />\n      {!items.length && !isInitialLoading && (\n        <MediaPageNoResultsMessage\n          className=\"mt-34\"\n          searchQuery={searchQuery}\n          description={<Trans message=\"You have not played any songs yet.\" />}\n        />\n      )}\n      <AdHost slot=\"general_bottom\" className=\"mt-34\" />\n    </div>\n  );\n}\n\nfunction getPlaceholderItems(): TableDataItem[] {\n  // 30 tracks per page by default\n  return [...new Array(10).keys()].map(key => {\n    return {\n      isPlaceholder: true,\n      id: `placeholder-${key}`,\n    };\n  });\n}\n","import {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {Trans} from '@common/i18n/trans';\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\nimport React, {Fragment} from 'react';\nimport {queueGroupId} from '@app/web-player/queue-group-id';\nimport {\n  actionButtonClassName,\n  MediaPageHeaderLayout,\n} from '@app/web-player/layout/media-page-header-layout';\nimport {AvatarGroup} from '@common/ui/images/avatar-group';\nimport {Avatar} from '@common/ui/images/avatar';\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\nimport {Album} from '@app/web-player/albums/album';\nimport {getSmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {getArtistLink} from '@app/web-player/artists/artist-link';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {useSortableTableData} from '@common/ui/tables/use-sortable-table-data';\nimport {BulletSeparatedItems} from '@app/web-player/layout/bullet-separated-items';\nimport {CommentList} from '@common/comments/comment-list/comment-list';\nimport {useTrack} from '@app/web-player/tracks/requests/use-track';\nimport {useTrackPermissions} from '@app/web-player/tracks/hooks/use-track-permissions';\nimport {Track} from '@app/web-player/tracks/track';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {FormattedNumber} from '@common/i18n/formatted-number';\nimport {TruncatedDescription} from '@app/web-player/tracks/truncated-description';\nimport {Waveform} from '@app/web-player/tracks/waveform/waveform';\nimport {CommentBarContextProvider} from '@app/web-player/tracks/waveform/comment-bar-context';\nimport {CommentBarNewCommentForm} from '@app/web-player/tracks/waveform/comment-bar-new-comment-form';\nimport {GenreLink} from '@app/web-player/genres/genre-link';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {PageStatus} from '@common/http/page-status';\nimport {TrackActionsBar} from '@app/web-player/tracks/track-actions-bar';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {ChipList} from '@common/ui/forms/input-field/chip-field/chip-list';\nimport {Link} from 'react-router-dom';\nimport {FocusScope} from '@react-aria/focus';\nimport {trackIsLocallyUploaded} from '@app/web-player/tracks/utils/track-is-locally-uploaded';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\nexport function TrackPage() {\n  const query = useTrack({autoUpdate: true});\n  const {canEdit} = useTrackPermissions([query.data?.track]);\n  const {player} = useSettings();\n\n  if (query.data) {\n    return (\n      <Fragment>\n        <CommentBarContextProvider>\n          <PageMetaTags query={query} />\n          <AdHost slot=\"general_top\" className=\"mb-44\" />\n          <TrackPageHeader track={query.data.track} />\n          {player?.track_comments ? (\n            <CommentBarNewCommentForm\n              className=\"mb-16\"\n              commentable={query.data.track}\n            />\n          ) : null}\n        </CommentBarContextProvider>\n        {query.data.track.tags.length ? (\n          <FocusScope>\n            <ChipList className=\"mb-16\" selectable>\n              {query.data.track.tags.map(tag => (\n                <Chip elementType={Link} to={`/tag/${tag.name}`} key={tag.id}>\n                  #{tag.display_name || tag.name}\n                </Chip>\n              ))}\n            </ChipList>\n          </FocusScope>\n        ) : null}\n        <TruncatedDescription\n          description={query.data.track.description}\n          className=\"text-sm mt-24\"\n        />\n        {player?.track_comments ? (\n          <CommentList\n            className=\"mt-34\"\n            commentable={query.data.track}\n            canDeleteAllComments={canEdit}\n          />\n        ) : null}\n        {query.data.track.album && (\n          <AlbumTrackTable album={query.data.track.album} />\n        )}\n        <AdHost slot=\"general_bottom\" className=\"mt-44\" />\n      </Fragment>\n    );\n  }\n\n  return <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />;\n}\n\ninterface AlbumTrackTableProps {\n  album: Album;\n}\nfunction AlbumTrackTable({album}: AlbumTrackTableProps) {\n  const {data, sortDescriptor, onSortChange} = useSortableTableData(\n    album.tracks\n  );\n  return (\n    <div className=\"mt-44\">\n      <div className=\"flex items-center gap-16 bg-hover rounded overflow-hidden mb-14\">\n        <AlbumImage\n          album={album}\n          className=\"flex-shrink-0 rounded\"\n          size=\"w-70 h-70\"\n        />\n        <div className=\"flex-auto\">\n          <div className=\"text-sm\">\n            <Trans message=\"From the album\" />\n          </div>\n          <div className=\"font-semibold text-sm\">{album.name}</div>\n        </div>\n      </div>\n      <TrackTable\n        queueGroupId={queueGroupId(album)}\n        tracks={data}\n        sortDescriptor={sortDescriptor}\n        onSortChange={onSortChange}\n        hideTrackImage\n        hideArtist\n        hideAlbum\n        hidePopularity={false}\n      />\n      {!album.tracks?.length && (\n        <IllustratedMessage\n          className=\"mt-34\"\n          title={<Trans message=\"Nothing to display\" />}\n          description={\n            <Trans message=\"This album does not have any tracks yet\" />\n          }\n        />\n      )}\n    </div>\n  );\n}\n\ninterface TrackPageHeaderProps {\n  track: Track;\n}\nfunction TrackPageHeader({track}: TrackPageHeaderProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const {player} = useSettings();\n  const releaseDate = track.album?.release_date || track.created_at;\n  const genre = track.genres?.[0];\n\n  const showWave =\n    !isMobile &&\n    player?.seekbar_type === 'waveform' &&\n    trackIsLocallyUploaded(track);\n\n  return (\n    <Fragment>\n      <MediaPageHeaderLayout\n        className=\"mb-28\"\n        image={<TrackImage track={track} />}\n        title={track.name}\n        subtitle={\n          <AvatarGroup>\n            {track.artists?.map(artist => (\n              <Avatar\n                key={artist.id}\n                circle\n                src={getSmallArtistImage(artist)}\n                label={artist.name}\n                link={getArtistLink(artist)}\n              />\n            ))}\n          </AvatarGroup>\n        }\n        description={\n          <BulletSeparatedItems className=\"text-sm text-muted\">\n            {track.duration ? (\n              <FormattedDuration ms={track.duration} verbose />\n            ) : null}\n            {releaseDate && <FormattedDate date={releaseDate} />}\n            {genre && <GenreLink genre={genre} />}\n            {track.plays && !player?.enable_repost ? (\n              <Trans\n                message=\":count plays\"\n                values={{count: <FormattedNumber value={track.plays} />}}\n              />\n            ) : null}\n          </BulletSeparatedItems>\n        }\n        actionButtons={\n          <TrackActionsBar\n            item={track}\n            managesItem={false}\n            buttonGap={undefined}\n            buttonSize=\"sm\"\n            buttonRadius=\"rounded-full\"\n            buttonClassName={actionButtonClassName()}\n          >\n            <PlaybackToggleButton\n              buttonType=\"text\"\n              track={track}\n              className={actionButtonClassName({isFirst: true})}\n            />\n          </TrackActionsBar>\n        }\n        footer={showWave ? <Waveform track={track} /> : undefined}\n      />\n    </Fragment>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useParams} from 'react-router-dom';\nimport {User} from '@common/auth/user';\n\ninterface getTrackResponse extends BackendResponse {\n  user: User;\n}\n\nexport function useUserProfile() {\n  const {userId} = useParams();\n  return useQuery(userProfileQueryKey(userId!), () => fetchUser(userId!));\n}\n\nfunction fetchUser(userId: number | string) {\n  return apiClient\n    .get<getTrackResponse>(`users/${userId}`)\n    .then(response => response.data);\n}\n\nexport function userProfileQueryKey(userId: number | string) {\n  return ['users', +userId, 'profile'];\n}\n","import {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {Repost} from '@app/web-player/reposts/repost';\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {AudiotrackIcon} from '@common/icons/material/Audiotrack';\nimport {Trans} from '@common/i18n/trans';\nimport {TrackListItem} from '@app/web-player/tracks/track-list/track-list-item';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport React from 'react';\nimport {ProfileContentProps} from '@app/web-player/user-profile/user-profile-page';\nimport {AlbumListItem} from '@app/web-player/albums/album-list/album-list-item';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\nimport {TrackGridItem} from '@app/web-player/tracks/track-grid-item';\nimport {AlbumGridItem} from '@app/web-player/albums/album-grid-item';\n\nexport function ProfileRepostsPanel({user}: ProfileContentProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const query = useInfiniteData<Repost>({\n    queryKey: ['reposts', user.id],\n    endpoint: `users/${user.id}/reposts`,\n  });\n\n  if (query.isInitialLoading) {\n    return <FullPageLoader className=\"min-h-100\" />;\n  }\n\n  if (!query.items.length) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<AudiotrackIcon size=\"lg\" className=\"text-muted\" />}\n        title={<Trans message=\"No reposts yet\" />}\n        description={\n          <Trans\n            message=\"Follow :user for updates on tracks and albums they repost in the future.\"\n            values={{user: user.display_name}}\n          />\n        }\n      />\n    );\n  }\n\n  if (isMobile) {\n    return (\n      <div>\n        <ContentGrid>\n          {query.items.map(repost => {\n            if (repost.repostable?.model_type === 'track') {\n              return (\n                <TrackGridItem track={repost.repostable} key={repost.id} />\n              );\n            } else if (repost.repostable?.model_type === 'album') {\n              return (\n                <AlbumGridItem album={repost.repostable} key={repost.id} />\n              );\n            }\n            return null;\n          })}\n        </ContentGrid>\n        <InfiniteScrollSentinel query={query} />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {query.items.map(repost => {\n        if (repost.repostable?.model_type === 'track') {\n          return (\n            <TrackListItem\n              className=\"mb-40\"\n              key={repost.id}\n              track={repost.repostable}\n              reposter={user}\n            />\n          );\n        } else if (repost.repostable?.model_type === 'album') {\n          return (\n            <AlbumListItem\n              key={repost.id}\n              album={repost.repostable}\n              className=\"mb-40\"\n            />\n          );\n        }\n        return null;\n      })}\n      <InfiniteScrollSentinel query={query} />\n    </div>\n  );\n}\n","import {useUserLikedTracks} from '@app/web-player/library/requests/use-user-liked-tracks';\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {AudiotrackIcon} from '@common/icons/material/Audiotrack';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {ProfileContentProps} from '@app/web-player/user-profile/user-profile-page';\nimport {TrackList} from '@app/web-player/tracks/track-list/track-list';\n\nexport function ProfileTracksPanel({user}: ProfileContentProps) {\n  const query = useUserLikedTracks(user.id);\n\n  if (query.isInitialLoading) {\n    return <FullPageLoader className=\"min-h-100\" />;\n  }\n\n  if (!query.items.length) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<AudiotrackIcon size=\"lg\" className=\"text-muted\" />}\n        title={<Trans message=\"No tracks yet\" />}\n        description={\n          <Trans\n            message=\"Follow :user for updates on tracks they like in the future.\"\n            values={{user: user.display_name}}\n          />\n        }\n      />\n    );\n  }\n\n  return <TrackList query={query} />;\n}\n","import {\n  useInfiniteData,\n  UseInfiniteDataProps,\n} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {Playlist} from '@app/web-player/playlists/playlist';\n\nexport const libraryPlaylistsQueryKey = (\n  userId: number | 'me',\n  queryParams?: Record<string, string | number>\n) => {\n  const user = getBootstrapData().user;\n  // make sure we are using \"me\" as ID for current user\n  // everywhere, so it's easier to invalidate queries\n  if (userId === user?.id) {\n    userId = 'me';\n  }\n  const key: any[] = ['playlists', 'library', userId];\n  if (queryParams) {\n    key.push(queryParams);\n  }\n  return key;\n};\n\nexport function useUserPlaylists(\n  userId: number | 'me',\n  options?: Partial<UseInfiniteDataProps<Playlist>>\n) {\n  return useInfiniteData<Playlist>({\n    queryKey: libraryPlaylistsQueryKey(userId),\n    endpoint: `users/${userId}/playlists`,\n    defaultOrderBy: 'updated_at',\n    defaultOrderDir: 'desc',\n    ...options,\n  });\n}\n","import {FullPageLoader} from '@common/ui/progress/full-page-loader';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {Trans} from '@common/i18n/trans';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport React from 'react';\nimport {ProfileContentProps} from '@app/web-player/user-profile/user-profile-page';\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\nimport {PlaylistGridItem} from '@app/web-player/playlists/playlist-grid-item';\nimport {QueueMusicIcon} from '@common/icons/material/QueueMusic';\nimport {useUserPlaylists} from '@app/web-player/library/requests/use-user-playlists';\n\nexport function ProfilePlaylistsPanel({user}: ProfileContentProps) {\n  const query = useUserPlaylists(user.id);\n\n  if (query.isInitialLoading) {\n    return <FullPageLoader className=\"min-h-100\" />;\n  }\n\n  if (!query.items.length) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<QueueMusicIcon size=\"lg\" className=\"text-muted\" />}\n        title={<Trans message=\"No playlists yet\" />}\n        description={\n          <Trans\n            message=\"Follow :user for updates on playlists they create in the future.\"\n            values={{user: user.display_name}}\n          />\n        }\n      />\n    );\n  }\n\n  return (\n    <div>\n      <ContentGrid>\n        {query.items.map(playlist => (\n          <PlaylistGridItem key={playlist.id} playlist={playlist} />\n        ))}\n      </ContentGrid>\n      <InfiniteScrollSentinel query={query} />\n    </div>\n  );\n}\n","import {FullPageLoader} from '@common/ui/progress/full-page-loader';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {ProfileContentProps} from '@app/web-player/user-profile/user-profile-page';\nimport {useUserLikedAlbums} from '@app/web-player/library/requests/use-user-liked-albums';\nimport {AlbumIcon} from '@common/icons/material/Album';\nimport {AlbumList} from '@app/web-player/albums/album-list/album-list';\n\nexport function ProfileAlbumsPanel({user}: ProfileContentProps) {\n  const query = useUserLikedAlbums(user.id, {\n    queryParams: {\n      with: 'tracks',\n    },\n  });\n\n  if (query.isInitialLoading) {\n    return <FullPageLoader className=\"min-h-100\" />;\n  }\n\n  if (!query.items.length) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<AlbumIcon size=\"lg\" className=\"text-muted\" />}\n        title={<Trans message=\"No albums yet\" />}\n        description={\n          <Trans\n            message=\"Follow :user for updates on albums they like in the future.\"\n            values={{user: user.display_name}}\n          />\n        }\n      />\n    );\n  }\n\n  return <AlbumList query={query} />;\n}\n","import {FullPageLoader} from '@common/ui/progress/full-page-loader';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {Trans} from '@common/i18n/trans';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport React from 'react';\nimport {ProfileContentProps} from '@app/web-player/user-profile/user-profile-page';\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\nimport {useUserLikedArtists} from '@app/web-player/library/requests/use-user-liked-artists';\nimport {MicIcon} from '@common/icons/material/Mic';\nimport {ArtistGridItem} from '@app/web-player/artists/artist-grid-item';\n\nexport function ProfileArtistsPanel({user}: ProfileContentProps) {\n  const query = useUserLikedArtists(user.id);\n\n  if (query.isInitialLoading) {\n    return <FullPageLoader className=\"min-h-100\" />;\n  }\n\n  if (!query.items.length) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<MicIcon size=\"lg\" className=\"text-muted\" />}\n        title={<Trans message=\"No artists yet\" />}\n        description={\n          <Trans\n            message=\"Follow :user for updates on artists they like in the future.\"\n            values={{user: user.display_name}}\n          />\n        }\n      />\n    );\n  }\n\n  return (\n    <div>\n      <ContentGrid>\n        {query.items.map(artist => (\n          <ArtistGridItem key={artist.id} artist={artist} />\n        ))}\n      </ContentGrid>\n      <InfiniteScrollSentinel query={query} />\n    </div>\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {User} from '@common/auth/user';\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\nimport React from 'react';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {BookmarkBorderIcon} from '@common/icons/material/BookmarkBorder';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {FollowerListItem} from '@app/web-player/artists/artist-page/followers-panel/follower-list-item';\n\ninterface Props {\n  user: User;\n}\nexport function ProfileFollowersPanel({user}: Props) {\n  const query = useInfiniteData<User>({\n    queryKey: ['users', user.id, 'followers'],\n    endpoint: `users/${user.id}/followers`,\n  });\n\n  if (query.isInitialLoading) {\n    return <FullPageLoader className=\"min-h-100\" />;\n  }\n\n  if (!query.items.length) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<BookmarkBorderIcon size=\"lg\" className=\"text-muted\" />}\n        description={\n          <Trans\n            message=\"Seems like no one is following :name yet.\"\n            values={{name: user.display_name}}\n          />\n        }\n      />\n    );\n  }\n\n  return (\n    <div>\n      {query.items.map(follower => (\n        <FollowerListItem key={follower.id} follower={follower} />\n      ))}\n      <InfiniteScrollSentinel query={query} />\n    </div>\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {User} from '@common/auth/user';\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\nimport React from 'react';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {BookmarkBorderIcon} from '@common/icons/material/BookmarkBorder';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {FollowerListItem} from '@app/web-player/artists/artist-page/followers-panel/follower-list-item';\n\ninterface Props {\n  user: User;\n}\nexport function ProfileFollowedUsersPanel({user}: Props) {\n  const query = useInfiniteData<User>({\n    queryKey: ['users', user.id, 'followed-users'],\n    endpoint: `users/${user.id}/followed-users`,\n  });\n\n  if (query.isInitialLoading) {\n    return <FullPageLoader className=\"min-h-100\" />;\n  }\n\n  if (!query.items.length) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<BookmarkBorderIcon size=\"lg\" className=\"text-muted\" />}\n        description={\n          <Trans\n            message=\"Seems like :name is not following anyone yet.\"\n            values={{name: user.display_name}}\n          />\n        }\n      />\n    );\n  }\n\n  return (\n    <div>\n      {query.items.map(follower => (\n        <FollowerListItem key={follower.id} follower={follower} />\n      ))}\n      <InfiniteScrollSentinel query={query} />\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Album} from '@app/web-player/albums/album';\nimport {useAuth} from '@common/auth/use-auth';\nimport {UserLink} from '@app/web-player/user-profile/user-link';\nimport {userProfileQueryKey} from '@app/web-player/user-profile/requests/use-user-profile';\n\ninterface Response extends BackendResponse {\n  album: Album;\n}\n\nexport interface UpdateProfilePayload {\n  user: {\n    avatar?: string;\n    first_name?: string;\n    last_name?: string;\n    username?: string;\n  };\n  profile: {\n    city?: string;\n    country?: string;\n    description?: string;\n  };\n  links: UserLink[];\n}\n\nexport function useUpdateUserProfile(\n  form: UseFormReturn<UpdateProfilePayload>\n) {\n  const {user} = useAuth();\n  const {trans} = useTrans();\n  return useMutation(\n    (payload: UpdateProfilePayload) => updateProfile(payload),\n    {\n      onSuccess: () => {\n        toast(trans(message('Profile updated')));\n        if (user) {\n          queryClient.invalidateQueries(userProfileQueryKey(user.id));\n        }\n      },\n      onError: err => onFormQueryError(err, form),\n    }\n  );\n}\n\nfunction updateProfile(payload: UpdateProfilePayload): Promise<Response> {\n  return apiClient.put('users/profile/update', payload).then(r => r.data);\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {\n  UpdateProfilePayload,\n  useUpdateUserProfile,\n} from '@app/web-player/user-profile/requests/use-update-user-profile';\nimport {useForm} from 'react-hook-form';\nimport {User} from '@common/auth/user';\nimport {Form} from '@common/ui/forms/form';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {FormImageSelector} from '@common/ui/images/image-selector';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {ProfileLinksForm} from '@app/admin/artist-datatable-page/artist-form/profile-links-form';\n\ninterface Props {\n  user: User;\n}\nexport function EditProfileDialog({user}: Props) {\n  const {close, formId} = useDialogContext();\n  const form = useForm<UpdateProfilePayload>({\n    defaultValues: {\n      user: {\n        username: user.username,\n        avatar: user.avatar,\n        first_name: user.first_name,\n        last_name: user.last_name,\n      },\n      profile: {\n        city: user.profile?.city,\n        country: user.profile?.country,\n        description: user.profile?.description,\n      },\n      links: user.links,\n    },\n  });\n  const updateProfile = useUpdateUserProfile(form);\n  return (\n    <Dialog size=\"xl\">\n      <DialogHeader>\n        <Trans message=\"Edit your profile\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values =>\n            updateProfile.mutate(values, {onSuccess: () => close()})\n          }\n        >\n          <FileUploadProvider>\n            <div className=\"flex items-start gap-30\">\n              <FormImageSelector\n                label={<Trans message=\"Avatar\" />}\n                name=\"user.avatar\"\n                diskPrefix=\"avatars\"\n                variant=\"square\"\n                previewSize=\"w-200 h-200\"\n              />\n              <div className=\"flex-auto\">\n                <FormTextField\n                  name=\"user.username\"\n                  label={<Trans message=\"Username\" />}\n                  className=\"mb-24\"\n                />\n                <div className=\"flex items-center gap-24\">\n                  <FormTextField\n                    name=\"user.first_name\"\n                    label={<Trans message=\"First name\" />}\n                    className=\"flex-auto mb-24\"\n                  />\n                  <FormTextField\n                    name=\"user.last_name\"\n                    label={<Trans message=\"Last name\" />}\n                    className=\"flex-auto mb-24\"\n                  />\n                </div>\n                <div className=\"flex items-center gap-24\">\n                  <FormTextField\n                    name=\"profile.city\"\n                    label={<Trans message=\"City\" />}\n                    className=\"flex-auto mb-24\"\n                  />\n                  <FormTextField\n                    name=\"profile.country\"\n                    label={<Trans message=\"Country\" />}\n                    className=\"flex-auto mb-24\"\n                  />\n                </div>\n                <FormTextField\n                  name=\"profile.description\"\n                  label={<Trans message=\"Description\" />}\n                  inputElementType=\"textarea\"\n                  rows={4}\n                />\n              </div>\n            </div>\n            <div className=\"mt-24\">\n              <div className=\"mb-16 pb-16 border-b\">\n                <Trans message=\"Your links\" />\n              </div>\n              <ProfileLinksForm />\n            </div>\n          </FileUploadProvider>\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          type=\"button\"\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={updateProfile.isLoading}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useAuth} from '@common/auth/use-auth';\nimport {\n  actionButtonClassName,\n  MediaPageHeaderLayout,\n} from '@app/web-player/layout/media-page-header-layout';\nimport {UserImage} from '@app/web-player/users/user-image';\nimport {BulletSeparatedItems} from '@app/web-player/layout/bullet-separated-items';\nimport {Link} from 'react-router-dom';\nimport {Trans} from '@common/i18n/trans';\nimport {ProfileDescription} from '@app/web-player/user-profile/profile-description';\nimport React from 'react';\nimport {User} from '@common/auth/user';\nimport {userFollowsStore} from '@app/web-player/users/user-follows-store';\nimport {useFollowUser} from '@app/web-player/users/use-follow-user';\nimport {useUnfollowUser} from '@app/web-player/users/use-unfollow-user';\nimport {Button} from '@common/ui/buttons/button';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {EditIcon} from '@common/icons/material/Edit';\nimport {EditProfileDialog} from '@app/web-player/user-profile/edit-profile-dialog';\n\ninterface ProfileHeaderProps {\n  user: User;\n  tabLink: (tabName: string) => string;\n}\n\nexport function ProfileHeader({user, tabLink}: ProfileHeaderProps) {\n  const {user: currentUser} = useAuth();\n\n  return (\n    <MediaPageHeaderLayout\n      image={\n        <UserImage\n          user={user}\n          size=\"w-240 h-240\"\n          className=\"rounded\"\n          showProBadge\n        />\n      }\n      title={user.display_name}\n      subtitle={\n        <BulletSeparatedItems className=\"text-sm text-muted z-20 w-max mx-auto\">\n          {user.followers_count && user.followers_count > 0 ? (\n            <Link to={tabLink('followers')} className=\"hover:underline\">\n              <Trans\n                message=\":count followers\"\n                values={{count: user.followers_count}}\n              />\n            </Link>\n          ) : null}\n          {user.followed_users_count && user.followed_users_count > 0 ? (\n            <Link to={tabLink('following')} className=\"hover:underline\">\n              <Trans\n                message=\"Following :count\"\n                values={{count: user.followed_users_count}}\n              />\n            </Link>\n          ) : null}\n        </BulletSeparatedItems>\n      }\n      actionButtons={\n        <div className=\"flex items-center justify-center md:justify-start\">\n          <FollowButton user={user} />\n          {currentUser?.id === user.id && <EditButton user={user} />}\n        </div>\n      }\n      footer={<ProfileDescription profile={user.profile} links={user.links} />}\n    />\n  );\n}\n\ninterface EditButtonProps {\n  user: User;\n}\n\nfunction EditButton({user}: EditButtonProps) {\n  return (\n    <DialogTrigger type=\"modal\">\n      <Button\n        variant=\"outline\"\n        radius=\"rounded-full\"\n        startIcon={<EditIcon />}\n        className={actionButtonClassName()}\n      >\n        <Trans message=\"Edit\" />\n      </Button>\n      <EditProfileDialog user={user} />\n    </DialogTrigger>\n  );\n}\n\nfunction FollowButton({user}: EditButtonProps) {\n  const {user: currentUser} = useAuth();\n  const isFollowing = userFollowsStore(s => s.isFollowing(user.id));\n  const followUser = useFollowUser();\n  const unfollowUser = useUnfollowUser();\n\n  if (isFollowing) {\n    return (\n      <Button\n        variant=\"flat\"\n        color=\"primary\"\n        className={actionButtonClassName({isFirst: true})}\n        radius=\"rounded-full\"\n        onClick={() => unfollowUser.mutate({user})}\n        disabled={currentUser?.id === user.id || unfollowUser.isLoading}\n      >\n        <Trans message=\"Unfollow\" />\n      </Button>\n    );\n  }\n\n  return (\n    <Button\n      variant=\"flat\"\n      color=\"primary\"\n      className={actionButtonClassName({isFirst: true})}\n      radius=\"rounded-full\"\n      onClick={() => followUser.mutate({user})}\n      disabled={currentUser?.id === user.id || followUser.isLoading}\n    >\n      <Trans message=\"Follow\" />\n    </Button>\n  );\n}\n","import {useUserProfile} from '@app/web-player/user-profile/requests/use-user-profile';\nimport {User} from '@common/auth/user';\nimport {PageStatus} from '@common/http/page-status';\nimport React, {Fragment, useCallback} from 'react';\nimport {Tabs} from '@common/ui/tabs/tabs';\nimport {TabList} from '@common/ui/tabs/tab-list';\nimport {Tab} from '@common/ui/tabs/tab';\nimport {Trans} from '@common/i18n/trans';\nimport {TabPanel, TabPanels} from '@common/ui/tabs/tab-panels';\nimport {Link, useParams} from 'react-router-dom';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {ProfileRepostsPanel} from '@app/web-player/user-profile/panels/profile-reposts-panel';\nimport {ProfileTracksPanel} from '@app/web-player/user-profile/panels/profile-tracks-panel';\nimport {ProfilePlaylistsPanel} from '@app/web-player/user-profile/panels/profile-playlists-panel';\nimport {ProfileAlbumsPanel} from '@app/web-player/user-profile/panels/profile-albums-panel';\nimport {ProfileArtistsPanel} from '@app/web-player/user-profile/panels/profile-artists-panel';\nimport {ProfileFollowersPanel} from '@app/web-player/user-profile/panels/profile-followers-panel';\nimport {ProfileFollowedUsersPanel} from '@app/web-player/user-profile/panels/profile-followed-users-panel';\nimport {ProfileHeader} from '@app/web-player/user-profile/header/profile-header';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\nconst profileTabs = [\n  'tracks',\n  'playlists',\n  'reposts',\n  'albums',\n  'artists',\n  'followers',\n  'following',\n];\n\nif (!getBootstrapData().settings.player?.enable_repost) {\n  profileTabs.splice(2, 1);\n}\n\nexport function UserProfilePage() {\n  const query = useUserProfile();\n\n  if (query.data) {\n    return <PageContent user={query.data.user} />;\n  }\n\n  return <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />;\n}\n\nexport interface ProfileContentProps {\n  user: User;\n}\nfunction PageContent({user}: ProfileContentProps) {\n  const {player} = useSettings();\n  const {tabName = 'tracks'} = useParams();\n\n  const selectedTab = profileTabs.indexOf(tabName) || 0;\n\n  const tabLink = useCallback(\n    (tabName: string) => {\n      return `/user/${user.id}/${user.display_name}/${tabName}`;\n    },\n    [user]\n  );\n\n  return (\n    <Fragment>\n      <ProfileHeader user={user} tabLink={tabLink} />\n      <Tabs className=\"mt-48\" isLazy selectedTab={selectedTab}>\n        <TabList>\n          <Tab elementType={Link} to={tabLink('tracks')}>\n            <Trans message=\"Liked tracks\" />\n          </Tab>\n          <Tab elementType={Link} to={tabLink('playlists')}>\n            <Trans message=\"Public playlists\" />\n          </Tab>\n          {player?.enable_repost && (\n            <Tab elementType={Link} to={tabLink('reposts')}>\n              <Trans message=\"Reposts\" />\n            </Tab>\n          )}\n          <Tab elementType={Link} to={tabLink('albums')}>\n            <Trans message=\"Liked albums\" />\n          </Tab>\n          <Tab elementType={Link} to={tabLink('artists')}>\n            <Trans message=\"Liked artists\" />\n          </Tab>\n          <Tab elementType={Link} to={tabLink('followers')}>\n            <Trans message=\"Followers\" />\n          </Tab>\n          <Tab elementType={Link} to={tabLink('following')}>\n            <Trans message=\"Following\" />\n          </Tab>\n        </TabList>\n        <TabPanels className=\"mt-24\">\n          <TabPanel>\n            <ProfileTracksPanel user={user} />\n          </TabPanel>\n          <TabPanel>\n            <ProfilePlaylistsPanel user={user} />\n          </TabPanel>\n          {player?.enable_repost && (\n            <TabPanel>\n              <ProfileRepostsPanel user={user} />\n            </TabPanel>\n          )}\n          <TabPanel>\n            <ProfileAlbumsPanel user={user} />\n          </TabPanel>\n          <TabPanel>\n            <ProfileArtistsPanel user={user} />\n          </TabPanel>\n          <TabPanel>\n            <ProfileFollowersPanel user={user} />\n          </TabPanel>\n          <TabPanel>\n            <ProfileFollowedUsersPanel user={user} />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </Fragment>\n  );\n}\n","import {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {Track} from '@app/web-player/tracks/track';\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {AudiotrackIcon} from '@common/icons/material/Audiotrack';\nimport {Trans} from '@common/i18n/trans';\nimport React, {Fragment, useState} from 'react';\nimport {Link, useParams} from 'react-router-dom';\nimport {Album} from '@app/web-player/albums/album';\nimport {AlbumIcon} from '@common/icons/material/Album';\nimport {Tabs} from '@common/ui/tabs/tabs';\nimport {TabList} from '@common/ui/tabs/tab-list';\nimport {Tab} from '@common/ui/tabs/tab';\nimport {TabPanel, TabPanels} from '@common/ui/tabs/tab-panels';\nimport {TrackList} from '@app/web-player/tracks/track-list/track-list';\nimport {AlbumList} from '@app/web-player/albums/album-list/album-list';\n\nconst tagTabNames = {\n  tracks: 0,\n  albums: 1,\n};\n\nexport function TagMediaPage() {\n  const params = useParams();\n  const tagName = params.tagName!;\n  const tabName = params['*']?.split('/').pop() || tagTabNames.tracks;\n  const [selectedTab, setSelectedTab] = useState(\n    tagTabNames[tabName as keyof typeof tagTabNames] || 0\n  );\n  return (\n    <Fragment>\n      <h1 className=\"text-3xl mb-40\">\n        {tabName === 'albums' ? (\n          <Trans\n            message=\"Most popular albums for #:tag\"\n            values={{tag: tagName}}\n          />\n        ) : (\n          <Trans\n            message=\"Most popular tracks for #:tag\"\n            values={{tag: tagName}}\n          />\n        )}\n      </h1>\n      <Tabs selectedTab={selectedTab} onTabChange={setSelectedTab}>\n        <TabList>\n          <Tab elementType={Link} to={`/tag/${tagName}`}>\n            <Trans message=\"Tracks\" />\n          </Tab>\n          <Tab elementType={Link} to={`/tag/${tagName}/albums`}>\n            <Trans message=\"Albums\" />\n          </Tab>\n        </TabList>\n        <TabPanels className=\"pt-24\">\n          <TabPanel>\n            <TracksPanel tagName={tagName!} />\n          </TabPanel>\n          <TabPanel>\n            <AlbumsPanel tagName={tagName!} />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </Fragment>\n  );\n}\n\ninterface TracksPanelProps {\n  tagName: string;\n}\nfunction AlbumsPanel({tagName}: TracksPanelProps) {\n  const query = useInfiniteData<Album>({\n    queryKey: ['albums', 'tags', tagName],\n    endpoint: `tags/${tagName}/albums`,\n  });\n\n  if (query.isInitialLoading) {\n    return <FullPageLoader className=\"min-h-100\" />;\n  }\n\n  if (!query.items.length) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<AlbumIcon size=\"lg\" className=\"text-muted\" />}\n        title={<Trans message=\"No albums yet\" />}\n        description={\n          <Trans message=\"This tag is not attached to any albums yet, check back later.\" />\n        }\n      />\n    );\n  }\n\n  return <AlbumList query={query} />;\n}\n\nfunction TracksPanel({tagName}: TracksPanelProps) {\n  const query = useInfiniteData<Track>({\n    queryKey: ['tracks', 'tags', tagName],\n    endpoint: `tags/${tagName}/tracks`,\n  });\n\n  if (query.isInitialLoading) {\n    return <FullPageLoader className=\"min-h-100\" />;\n  }\n\n  if (!query.items.length) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<AudiotrackIcon size=\"lg\" className=\"text-muted\" />}\n        title={<Trans message=\"No tracks yet\" />}\n        description={\n          <Trans message=\"This tag is not attached to any tracks yet, check back later.\" />\n        }\n      />\n    );\n  }\n\n  return <TrackList query={query} />;\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useParams} from 'react-router-dom';\nimport {Track} from '@app/web-player/tracks/track';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {Genre} from '@app/web-player/genres/genre';\n\nexport type RadioSeed = Artist | Track | Genre;\n\ninterface Response extends BackendResponse {\n  type: 'artist' | 'genre' | 'track';\n  seed: RadioSeed;\n  recommendations: Track[];\n}\n\nexport function useRadioRecommendations() {\n  const {seedType, seedId} = useParams();\n  return useQuery(\n    ['radio', seedType, +seedId!],\n    () => fetchRecommendations(seedType!, seedId!),\n    // different suggestions are returned every time, don't reload in background\n    {staleTime: Infinity}\n  );\n}\n\nfunction fetchRecommendations(seedType: string, seedId: string | number) {\n  return apiClient\n    .get<Response>(`radio/${seedType}/${seedId}`)\n    .then(response => response.data);\n}\n","import React, {Fragment, useMemo} from 'react';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {PageStatus} from '@common/http/page-status';\nimport {\n  RadioSeed,\n  useRadioRecommendations,\n} from '@app/web-player/radio/requests/use-radio-recommendations';\nimport {useSortableTableData} from '@common/ui/tables/use-sortable-table-data';\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\nimport {\n  actionButtonClassName,\n  MediaPageHeaderLayout,\n} from '@app/web-player/layout/media-page-header-layout';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {Trans} from '@common/i18n/trans';\nimport {BulletSeparatedItems} from '@app/web-player/layout/bullet-separated-items';\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\nimport {queueGroupId} from '@app/web-player/queue-group-id';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {GenreImage} from '@app/web-player/genres/genre-image';\nimport {useParams} from 'react-router-dom';\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\nconst validSeeds: RadioSeed['model_type'][] = ['artist', 'track', 'genre'];\n\nexport function RadioPage() {\n  const {seedType} = useParams();\n  const query = useRadioRecommendations();\n  const {data, onSortChange, sortDescriptor} = useSortableTableData(\n    query.data?.recommendations\n  );\n\n  const totalDuration = useMemo(() => {\n    return data.reduce((total, track) => {\n      return total + (track.duration || 0);\n    }, 0);\n  }, [data]);\n\n  if (!validSeeds.includes(seedType as any)) {\n    return <NotFoundPage />;\n  }\n\n  if (query.data) {\n    const seed = query.data.seed;\n    const queueId = queueGroupId(seed, 'radio');\n    return (\n      <Fragment>\n        <PageMetaTags query={query} />\n        <AdHost slot=\"general_top\" className=\"mb-44\" />\n        <MediaPageHeaderLayout\n          image={<Image seed={seed} />}\n          title={\n            <Trans\n              message=\":name radio\"\n              values={{\n                name:\n                  'display_name' in seed && seed.display_name\n                    ? seed.display_name\n                    : seed.name,\n              }}\n            />\n          }\n          subtitle={\n            <BulletSeparatedItems className=\"text-sm text-muted justify-center md:justify-start\">\n              <RadioType seed={seed} />\n              <Trans\n                message=\"[one 1 song|other :count songs]\"\n                values={{count: data.length}}\n              />\n              <FormattedDuration ms={totalDuration} verbose />\n            </BulletSeparatedItems>\n          }\n          actionButtons={\n            <div className=\"text-center md:text-start\">\n              <PlaybackToggleButton\n                tracks={data}\n                disabled={!data.length}\n                buttonType=\"text\"\n                queueId={queueId}\n                className={actionButtonClassName({isFirst: true})}\n              />\n            </div>\n          }\n        />\n        <TrackTable\n          className=\"mt-34\"\n          tracks={data}\n          queueGroupId={queueId}\n          onSortChange={onSortChange}\n          sortDescriptor={sortDescriptor}\n        />\n        <AdHost slot=\"general_bottom\" className=\"mt-44\" />\n      </Fragment>\n    );\n  }\n\n  return <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />;\n}\n\ninterface SeedImageProps {\n  seed: RadioSeed;\n}\nfunction Image({seed}: SeedImageProps) {\n  switch (seed.model_type) {\n    case 'artist':\n      return (\n        <SmallArtistImage\n          artist={seed}\n          size=\"w-240 h-240\"\n          className=\"rounded mx-auto\"\n        />\n      );\n    case 'genre':\n      return (\n        <GenreImage\n          genre={seed}\n          size=\"w-240 h-240 mx-auto\"\n          className=\"rounded\"\n        />\n      );\n    default:\n      return (\n        <TrackImage\n          track={seed}\n          size=\"w-240 h-240 mx-auto\"\n          className=\"rounded\"\n        />\n      );\n  }\n}\n\nfunction RadioType({seed}: SeedImageProps) {\n  switch (seed.model_type) {\n    case 'artist':\n      return <Trans message=\"Artist radio\" />;\n    case 'genre':\n      return <Trans message=\"Genre radio\" />;\n    default:\n      return <Trans message=\"Track radio\" />;\n  }\n}\n","import {\n  SearchResponse,\n  useSearchResults,\n} from '@app/web-player/search/requests/use-search-results';\nimport {mainSearchModels} from '@app/web-player/search/search-autocomplete';\nimport {Link, useParams} from 'react-router-dom';\nimport {PageStatus} from '@common/http/page-status';\nimport React, {Fragment, ReactNode, useMemo, useState} from 'react';\nimport {Tabs} from '@common/ui/tabs/tabs';\nimport {TabList} from '@common/ui/tabs/tab-list';\nimport {Tab} from '@common/ui/tabs/tab';\nimport {Trans} from '@common/i18n/trans';\nimport {TabPanel, TabPanels} from '@common/ui/tabs/tab-panels';\nimport {Track} from '@app/web-player/tracks/track';\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\nimport {KeyboardArrowRightIcon} from '@common/icons/material/KeyboardArrowRight';\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\nimport {ArtistGridItem} from '@app/web-player/artists/artist-grid-item';\nimport {AlbumGridItem} from '@app/web-player/albums/album-grid-item';\nimport {PlaylistGridItem} from '@app/web-player/playlists/playlist-grid-item';\nimport {UserGridItem} from '@app/web-player/users/user-grid-item';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {Album} from '@app/web-player/albums/album';\nimport {Playlist} from '@app/web-player/playlists/playlist';\nimport {User} from '@common/auth/user';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\nexport function SearchResultsPage() {\n  const {searchQuery} = useParams();\n  const query = useSearchResults({\n    query: searchQuery,\n    types: mainSearchModels,\n    limit: 20,\n  });\n\n  return (\n    <Fragment>\n      <MobileSearchBar />\n      <PageContent query={query} />\n    </Fragment>\n  );\n}\n\nfunction MobileSearchBar() {\n  const isMobile = useIsMobileMediaQuery();\n  const {searchQuery = ''} = useParams();\n  const navigate = useNavigate();\n  const {trans} = useTrans();\n  if (!isMobile) {\n    return null;\n  }\n\n  return (\n    <TextField\n      defaultValue={searchQuery}\n      onChange={e => {\n        navigate(`/search/${e.target.value}`, {replace: true});\n      }}\n      autoFocus\n      className=\"w-full\"\n      placeholder={trans(message('Search...'))}\n    />\n  );\n}\n\ninterface PageContentProps {\n  query: UseQueryResult<SearchResponse>;\n}\nfunction PageContent({query}: PageContentProps) {\n  const {branding} = useSettings();\n\n  if (query.data) {\n    return <SearchResults results={query.data?.results} />;\n  }\n\n  if (query.fetchStatus === 'idle') {\n    return (\n      <IllustratedMessage\n        className=\"mt-40\"\n        image={<SearchIcon size=\"xl\" />}\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-12\"\n        title={\n          <Trans\n            message=\"Search :siteName\"\n            values={{siteName: branding.site_name}}\n          />\n        }\n        description={\n          <Trans message=\"Find songs, artists, albums, playlists and more.\" />\n        }\n      />\n    );\n  }\n\n  return <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />;\n}\n\ninterface SearchResultsProps {\n  results: SearchResponse['results'];\n}\nfunction SearchResults({results}: SearchResultsProps) {\n  const {tabName = 'all', searchQuery} = useParams();\n  const tabNames = useMemo(() => {\n    const names = ['tracks', 'artists', 'albums', 'playlists', 'users'].filter(\n      tabName => results[tabName as keyof SearchResponse['results']]?.length\n    );\n    return ['all', ...names];\n  }, [results]);\n\n  const tabIndex = tabNames.indexOf(tabName as any);\n  const [selectedTab, setSelectedTab] = useState(tabIndex > -1 ? tabIndex : 0);\n\n  const tabLink = (tabName?: string) => {\n    let base = `/search/${searchQuery}`;\n    if (tabName) {\n      base += `/${tabName}`;\n    }\n    return base;\n  };\n\n  const haveResults = Object.entries(results).some(\n    ([, items]) => items?.length\n  );\n\n  if (!haveResults) {\n    return (\n      <IllustratedMessage\n        className=\"mt-40\"\n        image={<SearchIcon size=\"xl\" />}\n        imageHeight=\"h-auto\"\n        title={\n          <Trans\n            message=\"Not results for “:query“\"\n            values={{query: searchQuery}}\n          />\n        }\n        description={<Trans message=\"Please try a different search query\" />}\n      />\n    );\n  }\n\n  return (\n    <Tabs selectedTab={selectedTab} onTabChange={setSelectedTab}>\n      <TabList>\n        <Tab elementType={Link} to={tabLink()}>\n          <Trans message=\"Top results\" />\n        </Tab>\n        {results.tracks?.length && (\n          <Tab elementType={Link} to={tabLink('tracks')}>\n            <Trans message=\"Tracks\" />\n          </Tab>\n        )}\n        {results.artists?.length && (\n          <Tab elementType={Link} to={tabLink('artists')}>\n            <Trans message=\"Artists\" />\n          </Tab>\n        )}\n        {results.albums?.length && (\n          <Tab elementType={Link} to={tabLink('albums')}>\n            <Trans message=\"Albums\" />\n          </Tab>\n        )}\n        {results.playlists?.length && (\n          <Tab elementType={Link} to={tabLink('playlists')}>\n            <Trans message=\"Playlists\" />\n          </Tab>\n        )}\n        {results.users?.length && (\n          <Tab elementType={Link} to={tabLink('users')}>\n            <Trans message=\"Profiles\" />\n          </Tab>\n        )}\n      </TabList>\n      <TabPanels className=\"pt-8\">\n        <TabPanel>\n          <TopResultsPanel results={results} />\n        </TabPanel>\n        {results.tracks?.length && (\n          <TabPanel>\n            <TrackResults tracks={results.tracks} />\n          </TabPanel>\n        )}\n        {results.artists?.length && (\n          <TabPanel>\n            <ArtistResults artists={results.artists} />\n          </TabPanel>\n        )}\n        {results.albums?.length && (\n          <TabPanel>\n            <AlbumResults albums={results.albums} />\n          </TabPanel>\n        )}\n        {results.playlists?.length && (\n          <TabPanel>\n            <PlaylistResults playlists={results.playlists} />\n          </TabPanel>\n        )}\n        {results.users?.length && (\n          <TabPanel>\n            <ProfileResults users={results.users} />\n          </TabPanel>\n        )}\n      </TabPanels>\n    </Tabs>\n  );\n}\n\nfunction TopResultsPanel({\n  results: {artists, albums, tracks, playlists, users},\n}: SearchResultsProps) {\n  return (\n    <Fragment>\n      {tracks?.length ? (\n        <TrackResults tracks={tracks.slice(0, 5)} showMore />\n      ) : null}\n      {artists?.length ? (\n        <ArtistResults artists={artists.slice(0, 5)} showMore />\n      ) : null}\n      {albums?.length ? (\n        <AlbumResults albums={albums.slice(0, 5)} showMore />\n      ) : null}\n      {playlists?.length ? (\n        <PlaylistResults playlists={playlists.slice(0, 5)} showMore />\n      ) : null}\n      {users?.length ? (\n        <ProfileResults users={users.slice(0, 5)} showMore />\n      ) : null}\n    </Fragment>\n  );\n}\n\ninterface TracksPanelProps {\n  tracks: Track[];\n  showMore?: boolean;\n}\nfunction TrackResults({tracks, showMore}: TracksPanelProps) {\n  return (\n    <div className=\"py-24\">\n      <PanelTitle to={showMore ? 'tracks' : undefined}>\n        <Trans message=\"Tracks\" />\n      </PanelTitle>\n      <TrackTable tracks={tracks} />\n    </div>\n  );\n}\n\ninterface ArtistResultsProps {\n  artists: Artist[];\n  showMore?: boolean;\n}\nfunction ArtistResults({artists, showMore}: ArtistResultsProps) {\n  return (\n    <div className=\"py-24\">\n      <PanelTitle to={showMore ? 'artists' : undefined}>\n        <Trans message=\"Artists\" />\n      </PanelTitle>\n      <ContentGrid>\n        {artists.map(artist => (\n          <ArtistGridItem key={artist.id} artist={artist} />\n        ))}\n      </ContentGrid>\n    </div>\n  );\n}\n\ninterface AlbumResultsProps {\n  albums: Album[];\n  showMore?: boolean;\n}\nfunction AlbumResults({albums, showMore}: AlbumResultsProps) {\n  return (\n    <div className=\"py-24\">\n      <PanelTitle to={showMore ? 'albums' : undefined}>\n        <Trans message=\"Albums\" />\n      </PanelTitle>\n      <ContentGrid>\n        {albums.map(album => (\n          <AlbumGridItem key={album.id} album={album} />\n        ))}\n      </ContentGrid>\n    </div>\n  );\n}\n\ninterface PlaylistResultsProps {\n  playlists: Playlist[];\n  showMore?: boolean;\n}\nfunction PlaylistResults({playlists, showMore}: PlaylistResultsProps) {\n  return (\n    <div className=\"py-24\">\n      <PanelTitle to={showMore ? 'playlists' : undefined}>\n        <Trans message=\"Playlists\" />\n      </PanelTitle>\n      <ContentGrid>\n        {playlists.map(album => (\n          <PlaylistGridItem key={album.id} playlist={album} />\n        ))}\n      </ContentGrid>\n    </div>\n  );\n}\n\ninterface ProfileResultsProps {\n  users: User[];\n  showMore?: boolean;\n}\nfunction ProfileResults({users, showMore}: ProfileResultsProps) {\n  return (\n    <div className=\"py-24\">\n      <PanelTitle to={showMore ? 'profiles' : undefined}>\n        <Trans message=\"Profiles\" />\n      </PanelTitle>\n      <ContentGrid>\n        {users.map(user => (\n          <UserGridItem key={user.id} user={user} />\n        ))}\n      </ContentGrid>\n    </div>\n  );\n}\n\ninterface PanelTitleProps {\n  children: ReactNode;\n  to?: string;\n}\nfunction PanelTitle({children, to}: PanelTitleProps) {\n  return (\n    <h2 className=\"text-2xl font-medium mb-24 w-max\">\n      {to ? (\n        <Link to={to} className=\"hover:text-primary flex items-center gap-2\">\n          {children}\n          <KeyboardArrowRightIcon className=\"mt-4\" />\n        </Link>\n      ) : (\n        children\n      )}\n    </h2>\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport {AudiotrackIcon} from '@common/icons/material/Audiotrack';\nimport {StaticPageTitle} from '@common/seo/static-page-title';\nimport React, {Fragment, ReactElement, ReactNode} from 'react';\nimport {Link, Navigate} from 'react-router-dom';\nimport {AlbumIcon} from '@common/icons/material/Album';\nimport {MicIcon} from '@common/icons/material/Mic';\nimport {PlaylistPlayIcon} from '@common/icons/material/PlaylistPlay';\nimport {HistoryIcon} from '@common/icons/material/History';\nimport {SvgIconProps} from '@common/icons/svg-icon';\nimport {getPlaylistLink} from '@app/web-player/playlists/playlist-link';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {PlaylistAddIcon} from '@common/icons/material/PlaylistAdd';\nimport {CreatePlaylistDialog} from '@app/web-player/playlists/crupdate-dialog/create-playlist-dialog';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useAuthClickCapture} from '@app/web-player/use-auth-click-capture';\nimport {useUserPlaylists} from '@app/web-player/library/requests/use-user-playlists';\nimport {PlaylistImage} from '@app/web-player/playlists/playlist-image';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\nexport function LibraryPage() {\n  const navigate = useNavigate();\n  const authHandler = useAuthClickCapture();\n  const query = useUserPlaylists('me');\n  const isMobile = useIsMobileMediaQuery();\n\n  if (!isMobile) {\n    return <Navigate to=\"/library/songs\" replace />;\n  }\n\n  return (\n    <Fragment>\n      <StaticPageTitle>\n        <Trans message=\"Your tracks\" />\n      </StaticPageTitle>\n      <AdHost slot=\"general_top\" className=\"mb-34\" />\n      <div className=\"flex items-center justify-between gap-24 mb-20\">\n        <h1 className=\"text-2xl font-semibold whitespace-nowrap\">\n          <Trans message=\"Your library\" />\n        </h1>\n        <DialogTrigger\n          type=\"modal\"\n          onClose={newPlaylist => {\n            if (newPlaylist) {\n              navigate(getPlaylistLink(newPlaylist));\n            }\n          }}\n        >\n          <IconButton className=\"flex-shrink-0\" onClickCapture={authHandler}>\n            <PlaylistAddIcon />\n          </IconButton>\n          <CreatePlaylistDialog />\n        </DialogTrigger>\n      </div>\n      <div>\n        <MenuItem\n          icon={<AudiotrackIcon className=\"text-main\" />}\n          to=\"/library/songs\"\n        >\n          <Trans message=\"Songs\" />\n        </MenuItem>\n        <MenuItem icon={<PlaylistPlayIcon />} to=\"/library/playlists\">\n          <Trans message=\"Playlists\" />\n        </MenuItem>\n        <MenuItem icon={<AlbumIcon />} to=\"/library/albums\">\n          <Trans message=\"Albums\" />\n        </MenuItem>\n        <MenuItem icon={<MicIcon />} to=\"/library/artists\">\n          <Trans message=\"Artists\" />\n        </MenuItem>\n        <MenuItem icon={<HistoryIcon />} to=\"/library/history\">\n          <Trans message=\"Play history\" />\n        </MenuItem>\n        {query.items.map(playlist => (\n          <MenuItem\n            key={playlist.id}\n            wrapIcon={false}\n            icon={\n              <PlaylistImage\n                size=\"w-42 h-42\"\n                className=\"rounded\"\n                playlist={playlist}\n              />\n            }\n            to={getPlaylistLink(playlist)}\n          >\n            {playlist.name}\n          </MenuItem>\n        ))}\n        <InfiniteScrollSentinel query={query} />\n      </div>\n    </Fragment>\n  );\n}\n\ninterface MenuItemProps {\n  icon: ReactElement<SvgIconProps>;\n  children: ReactNode;\n  to: string;\n  wrapIcon?: boolean;\n}\nfunction MenuItem({icon, children, to, wrapIcon = true}: MenuItemProps) {\n  return (\n    <Link className=\"flex items-center gap-14 mb-18 text-sm\" to={to}>\n      {wrapIcon ? (\n        <div className=\"rounded bg-chip p-8 w-42 h-42\">{icon}</div>\n      ) : (\n        icon\n      )}\n      {children}\n    </Link>\n  );\n}\n","import {StaticPageTitle} from '@common/seo/static-page-title';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {message} from '@common/i18n/message';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {PageErrorMessage} from '@common/errors/page-error-message';\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {MediaPageNoResultsMessage} from '@app/web-player/layout/media-page-no-results-message';\nimport {PlayableMediaGridSkeleton} from '@app/web-player/playable-item/player-media-grid-skeleton';\nimport {LibraryPageSortDropdown} from '@app/web-player/library/library-page-sort-dropdown';\nimport {useUserPlaylists} from '@app/web-player/library/requests/use-user-playlists';\nimport {PlaylistGridItem} from '@app/web-player/playlists/playlist-grid-item';\nimport {useAuthUserPlaylists} from '@app/web-player/playlists/requests/use-auth-user-playlists';\nimport {getPlaylistLink} from '@app/web-player/playlists/playlist-link';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {PlaylistAddIcon} from '@common/icons/material/PlaylistAdd';\nimport {CreatePlaylistDialog} from '@app/web-player/playlists/crupdate-dialog/create-playlist-dialog';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useAuthClickCapture} from '@app/web-player/use-auth-click-capture';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\nconst sortItems = {\n  'updated_at:desc': message('Recently updated'),\n  'name:asc': message('A-Z'),\n  'views:desc': message('Most viewed'),\n  'plays:desc': message('Most played'),\n};\n\nexport function LibraryPlaylistsPage() {\n  const navigate = useNavigate();\n  const authHandler = useAuthClickCapture();\n  const {trans} = useTrans();\n  const {data} = useAuthUserPlaylists();\n  const totalItems = data.playlists.length;\n  const query = useUserPlaylists('me', {willSortOrFilter: true});\n  const {\n    isInitialLoading,\n    sortDescriptor,\n    setSortDescriptor,\n    searchQuery,\n    setSearchQuery,\n    items,\n    isError,\n  } = query;\n\n  if (isError) {\n    return <PageErrorMessage />;\n  }\n\n  return (\n    <div>\n      <StaticPageTitle>\n        <Trans message=\"Your playlists\" />\n      </StaticPageTitle>\n      <AdHost slot=\"general_top\" className=\"mb-34\" />\n      <div className=\"flex items-center justify-between gap-24 mb-20\">\n        <h1 className=\"text-2xl font-semibold whitespace-nowrap\">\n          {totalItems ? (\n            <Trans\n              message=\"[one 1 playlist|other :count playlists]\"\n              values={{count: totalItems}}\n            />\n          ) : (\n            <Trans message=\"My playlists\" />\n          )}\n        </h1>\n        <DialogTrigger\n          type=\"modal\"\n          onClose={newPlaylist => {\n            if (newPlaylist) {\n              navigate(getPlaylistLink(newPlaylist));\n            }\n          }}\n        >\n          <IconButton className=\"flex-shrink-0\" onClickCapture={authHandler}>\n            <PlaylistAddIcon />\n          </IconButton>\n          <CreatePlaylistDialog />\n        </DialogTrigger>\n      </div>\n\n      <div className=\"flex items-center gap-24 justify-between\">\n        <TextField\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n          className=\"max-w-512 flex-auto\"\n          size=\"sm\"\n          startAdornment={<SearchIcon />}\n          placeholder={trans(message('Search within playlists'))}\n        />\n        <LibraryPageSortDropdown\n          items={sortItems}\n          sortDescriptor={sortDescriptor}\n          setSortDescriptor={setSortDescriptor}\n        />\n      </div>\n      <div className=\"mt-34\">\n        <AnimatePresence initial={false} mode=\"wait\">\n          {isInitialLoading ? (\n            <PlayableMediaGridSkeleton itemCount={totalItems} />\n          ) : (\n            <m.div key=\"media-grid\" {...opacityAnimation}>\n              <ContentGrid>\n                {items.map(playlist => (\n                  <PlaylistGridItem key={playlist.id} playlist={playlist} />\n                ))}\n                <InfiniteScrollSentinel query={query} />\n              </ContentGrid>\n            </m.div>\n          )}\n        </AnimatePresence>\n      </div>\n      {!items.length && !isInitialLoading && (\n        <MediaPageNoResultsMessage\n          className=\"mt-34\"\n          searchQuery={searchQuery}\n          description={\n            <Trans message=\"You have not added any playlists to your library yet.\" />\n          }\n        />\n      )}\n    </div>\n  );\n}\n","import React, {\n  memo,\n  MutableRefObject,\n  useContext,\n  useMemo,\n  useRef,\n} from 'react';\nimport {playerStoreOptions} from '@app/web-player/state/player-store-options';\nimport {PlayerContext, PlayerStoreContext} from '@common/player/player-context';\nimport {TrackListItem} from '@app/web-player/tracks/track-list/track-list-item';\nimport {useTrack} from '@app/web-player/tracks/requests/use-track';\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\nimport {Track} from '@app/web-player/tracks/track';\nimport {PlayerStoreOptions} from '@common/player/player-store-options';\nimport {trackToMediaItem} from '@app/web-player/tracks/utils/track-to-media-item';\n\nexport function TrackEmbed() {\n  const {data} = useTrack({\n    autoUpdate: false,\n  });\n  return (\n    <div className=\"rounded border bg-alt p-14 h-[174px]\">\n      {!data?.track ? <FullPageLoader /> : <EmbedContent track={data.track} />}\n    </div>\n  );\n}\n\ninterface EmbedContentProps {\n  track: Track;\n}\nfunction EmbedContent({track}: EmbedContentProps) {\n  const playerRef = useRef<HTMLDivElement>(null);\n  const options: PlayerStoreOptions = useMemo(() => {\n    const mediaItem = trackToMediaItem(track);\n    return {\n      ...playerStoreOptions,\n      ref: playerRef,\n      initialData: {\n        queue: [mediaItem],\n        cuedMediaId: mediaItem.id,\n        state: {\n          repeat: false,\n        },\n      },\n    };\n  }, [track]);\n  return (\n    <PlayerContext id=\"web-player\" options={options}>\n      <div className=\"flex gap-24\">\n        <div className=\"flex-shrink-0 rounded bg-black overflow-hidden\">\n          <PlayerContainer playerRef={playerRef} />\n        </div>\n        <TrackListItem track={track} hideArtwork hideActions linksInNewTab />\n      </div>\n    </PlayerContext>\n  );\n}\n\ninterface PlayerContainerProps {\n  playerRef: MutableRefObject<HTMLDivElement | null>;\n}\nconst PlayerContainer = memo(({playerRef}: PlayerContainerProps) => {\n  const {getState} = useContext(PlayerStoreContext);\n\n  return (\n    <div\n      className=\"w-144 h-144 player-container\"\n      ref={el => {\n        if (el) {\n          playerRef.current = el;\n          getState().init();\n        } else {\n          getState().destroy();\n        }\n      }}\n    />\n  );\n});\n","import React, {\n  memo,\n  MutableRefObject,\n  useContext,\n  useMemo,\n  useRef,\n} from 'react';\nimport {playerStoreOptions} from '@app/web-player/state/player-store-options';\nimport {PlayerContext, PlayerStoreContext} from '@common/player/player-context';\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\nimport {PlayerStoreOptions} from '@common/player/player-store-options';\nimport {\n  tracksToMediaItems,\n  trackToMediaItem,\n} from '@app/web-player/tracks/utils/track-to-media-item';\nimport {useAlbum} from '@app/web-player/albums/requests/use-album';\nimport {Album} from '@app/web-player/albums/album';\nimport {AlbumListItem} from '@app/web-player/albums/album-list/album-list-item';\n\nexport function AlbumEmbed() {\n  const {data} = useAlbum({\n    autoUpdate: false,\n    with: 'tracks',\n  });\n  return (\n    <div className=\"rounded border bg-alt p-14 h-384\">\n      {!data?.album ? <FullPageLoader /> : <EmbedContent album={data.album} />}\n    </div>\n  );\n}\n\ninterface EmbedContentProps {\n  album: Album;\n}\nfunction EmbedContent({album}: EmbedContentProps) {\n  const playerRef = useRef<HTMLDivElement>(null);\n  const options: PlayerStoreOptions = useMemo(() => {\n    return {\n      ...playerStoreOptions,\n      ref: playerRef,\n      initialData: {\n        queue: album.tracks?.length ? tracksToMediaItems(album.tracks) : [],\n        cuedMediaId: album.tracks?.length\n          ? trackToMediaItem(album.tracks[0]).id\n          : undefined,\n        state: {\n          repeat: false,\n        },\n      },\n    };\n  }, [album]);\n  return (\n    <PlayerContext id=\"web-player\" options={options}>\n      <div className=\"flex gap-24 items-start h-full\">\n        <div className=\"flex-shrink-0 rounded bg-black overflow-hidden\">\n          <PlayerContainer playerRef={playerRef} />\n        </div>\n        <AlbumListItem\n          album={album}\n          maxHeight=\"h-full\"\n          hideArtwork\n          hideActions\n          linksInNewTab\n        />\n      </div>\n    </PlayerContext>\n  );\n}\n\ninterface PlayerContainerProps {\n  playerRef: MutableRefObject<HTMLDivElement | null>;\n}\nconst PlayerContainer = memo(({playerRef}: PlayerContainerProps) => {\n  const {getState} = useContext(PlayerStoreContext);\n  return (\n    <div\n      className=\"w-144 h-144 player-container\"\n      ref={el => {\n        if (el) {\n          playerRef.current = el;\n          getState().init();\n        } else {\n          getState().destroy();\n        }\n      }}\n    />\n  );\n});\n","import {useSettings} from '@common/core/settings/use-settings';\nimport {ChannelPage} from '@app/web-player/channels/channel-page';\nimport React from 'react';\n\nexport function HomepageChannelPage() {\n  const {homepage} = useSettings();\n  let slugOrId = 'discover';\n  if (homepage.type === 'channel' && homepage.value) {\n    slugOrId = homepage.value;\n  }\n  return <ChannelPage slugOrId={slugOrId} />;\n}\n","import {RouteObject, useRoutes} from 'react-router-dom';\nimport {ChannelPage} from '@app/web-player/channels/channel-page';\nimport React from 'react';\nimport {WebPlayerLayout} from '@app/web-player/layout/web-player-layout';\nimport {ArtistPage} from '@app/web-player/artists/artist-page/artist-page';\nimport {PlaylistPage} from '@app/web-player/playlists/playlist-page/playlist-page';\nimport {AlbumPage} from '@app/web-player/albums/album-page';\nimport {LibraryTracksPage} from '@app/web-player/library/library-tracks-page';\nimport {AuthRoute} from '@common/auth/guards/auth-route';\nimport {LibraryAlbumsPage} from '@app/web-player/library/library-albums-page';\nimport {LibraryArtistsPage} from '@app/web-player/library/library-artists-page';\nimport {LibraryHistoryPage} from '@app/web-player/library/library-history-page';\nimport {TrackPage} from '@app/web-player/tracks/track-page';\nimport {UserProfilePage} from '@app/web-player/user-profile/user-profile-page';\nimport {TagMediaPage} from '@app/web-player/genres/tag-media-page';\nimport {RadioPage} from '@app/web-player/radio/radio-page';\nimport {SearchResultsPage} from '@app/web-player/search/search-results-page';\nimport {LibraryPage} from '@app/web-player/library/library-page';\nimport {LibraryPlaylistsPage} from '@app/web-player/library/library-playlists-page';\nimport {TrackEmbed} from '@app/web-player/tracks/track-embed';\nimport {AlbumEmbed} from '@app/web-player/albums/album-embed';\nimport {HomepageChannelPage} from '@app/web-player/channels/homepage-channel-page';\n\nconst RouteConfig: RouteObject[] = [\n  {\n    path: 'track/:trackId/:trackName/embed',\n    element: <TrackEmbed />,\n  },\n  {\n    path: 'album/:albumId/:artistName/:albumName/embed',\n    element: <AlbumEmbed />,\n  },\n  {\n    path: '/',\n    element: <WebPlayerLayout />,\n    children: [\n      {\n        index: true,\n        element: <HomepageChannelPage />,\n      },\n      {\n        path: ':slugOrId',\n        element: <ChannelPage />,\n      },\n      {\n        path: 'channel/:slugOrId',\n        element: <ChannelPage />,\n      },\n      {\n        path: 'channel/:slugOrId/:filter',\n        element: <ChannelPage />,\n      },\n      // artists\n      {\n        path: 'artist/:artistId/:artistName',\n        element: <ArtistPage />,\n      },\n      {\n        path: 'artist/:artistId',\n        element: <ArtistPage />,\n      },\n      // playlists\n      {\n        path: 'playlist/:playlistId/:playlistName',\n        element: <PlaylistPage />,\n      },\n      // albums\n      {\n        path: 'album/:albumId/:artistName/:albumName',\n        element: <AlbumPage />,\n      },\n      // tracks\n      {\n        path: 'track/:trackId/:trackName',\n        element: <TrackPage />,\n      },\n      // tags\n      {\n        path: 'tag/:tagName',\n        element: <TagMediaPage />,\n      },\n      {\n        path: 'tag/:tagName/tracks',\n        element: <TagMediaPage />,\n      },\n      {\n        path: 'tag/:tagName/albums',\n        element: <TagMediaPage />,\n      },\n      // user profile\n      {\n        path: 'user/:userId/:userName',\n        element: <UserProfilePage />,\n      },\n      {\n        path: 'user/:userId/:userName/:tabName',\n        element: <UserProfilePage />,\n      },\n      // radio\n      {\n        path: 'radio/:seedType/:seedId/:seeName',\n        element: <RadioPage />,\n      },\n      // search\n      {\n        path: 'search',\n        element: <SearchResultsPage />,\n      },\n      {\n        path: 'search/:searchQuery',\n        element: <SearchResultsPage />,\n      },\n      {\n        path: 'search/:searchQuery/:tabName',\n        element: <SearchResultsPage />,\n      },\n      // library\n      {\n        path: 'library',\n        element: (\n          <AuthRoute>\n            <LibraryPage />\n          </AuthRoute>\n        ),\n      },\n      {\n        path: 'library/songs',\n        element: (\n          <AuthRoute>\n            <LibraryTracksPage />\n          </AuthRoute>\n        ),\n      },\n      {\n        path: 'library/playlists',\n        element: (\n          <AuthRoute>\n            <LibraryPlaylistsPage />\n          </AuthRoute>\n        ),\n      },\n      {\n        path: 'library/albums',\n        element: (\n          <AuthRoute>\n            <LibraryAlbumsPage />\n          </AuthRoute>\n        ),\n      },\n      {\n        path: 'library/artists',\n        element: (\n          <AuthRoute>\n            <LibraryArtistsPage />\n          </AuthRoute>\n        ),\n      },\n      {\n        path: 'library/history',\n        element: (\n          <AuthRoute>\n            <LibraryHistoryPage />\n          </AuthRoute>\n        ),\n      },\n    ],\n  },\n];\n\nexport default function WebPlayerRoutes() {\n  return useRoutes(RouteConfig);\n}\n"],"names":["client","options","notifyOptions","pageParam","query","_state$fetchMeta","_state$fetchMeta$fetc","_state$fetchMeta2","_state$fetchMeta2$fet","_state$data","_state$data2","state","result","isFetching","isRefetching","isFetchingNextPage","isFetchingPreviousPage","arg1","arg2","arg3","queryKey","defaultOrderDir","defaultOrderBy","queryParams","sortDescriptor","searchQuery","props","initialPage","endpoint","paginate","transformResponse","willSortOrFilter","setSearchQuery","useState","setSortDescriptor","params","lastResponse","hasNextPage","items","useMemo","_a","p","firstPage","_b","totalItems","r","channel","filter","isInitialLoading","fetchNextPage","children","marginTop","renderSentinelAs","sentinelRef","useRef","useEffect","sentinelEl","observer","entry","content","jsx","Sentinel","Fragment","document","element","type","handler","val","el","fscreen","listeners","initialState","a","b","__publicField","media","time","number","value","resolvedMedia","_d","_c","currentYoutubeId","resolve","url","e","_f","_e","_h","_g","_j","_i","previous","keepFirst","first","currentIndex","temporaryValue","randomIndex","id","defaultVolume","volume","isMuted","array","toAdd","index","copyOfArray","tail","action","getPointer","item","actionHandlers","details","key","cuedMedia","initialData","deepMerge","setInLocalStorage","_setInLocalStorage","set","get","queue","keybindsHandler","selectAndCreateProvider","name","storeListeners","s","l","exactDuration","isFullscreen","currentState","initialQueue","newRepeat","currentRepeat","newQueue","newListeners","newProvider","listener","mediaItems","queuePointer","afterCuedMedia","shuffledNewItems","m","mediaToCue","createContext","store","selector","equalityFn","useContext","overrideQueueAndPlay","queueId","lastTrack","response","track","queueGroupId","tracks","album","className","color","isDarkMode","radius","variant","disabled","buttonType","equalizerColor","isHover","setIsHover","modelIsQueued","modelIsPlaying","player","statusIcon","sharedProps","newIndex","t","model","kind","base","image","title","subtitle","link","likeButton","contextDialog","navigate","jsxs","cloneElement","isLoggedIn","user","payload","backendPayload","create","dialog","data","dialogContext","useCallback","closeMenu","loadTracks","setPlaylistPanelIsActive","addToPlaylist","playlists","playlist","authHandler","playlistPanelIsActive","description","close","contextValue","pathname","previousPathname","header","forwardRef","endIcon","startIcon","to","buttonProps","ref","Element","addToLibrary","getMessage","likeables","likeable","removeFromLibrary","copyLink","artist","hasPermission","permissions","managesAlbum","artistId","getRedirectUri","seed","absolute","artist_provider","isMobile","height","code","inputRef","copied","size","showRadioButton","canEdit","DeleteButton","deleteArtist","canDelete","isLiked","isLoading","albumArtistIds","repostable","toggleRepost","isReposted","deleteAlbum","genre","trans","trackArtistIds","managesTrack","trackIds","trackId","showAddToQueueButton","firstTrack","shouldShowRadio","headerProps","deleteTracks","firstTrackImage","defaultImage","isCreator","playlistId","copyAlbumLink","isFollowing","followPlaylist","unFollowPlaylist","updatePlaylist","togglePublic","toggleCollaborative","deletePlaylist","follow","unfollow","owner","showProBadge","showBadge","isNested","margin","genreName","meta","groupId","isCued","isPlaying","rowIndex","isHovered","trackIndex","setHover","d","hideTrackImage","selectedRows","row","hideArtist","hideAlbum","hideHeaderRow","hidePopularity","hideAddedAtColumn","renderRowAs","tableProps","filteredColumns","col","domProps","hideBorder","placeholderRowCount","bodyRef","scrollableRef","scrollOffset","getScrollParent","virtualizer","instance","cb","offset","virtualRows","paddingTop","paddingBottom","virtualItem","dataCount","enabled","err","waveData","canvas","context","lineData","setTime","intervalRef","stopTimer","startTimer","prevTime","newTime","duration","unsubscribeFromPlayback","unsubscribeFromCuedTrack","pointer","disableCommenting","markerIsVisible","setMarkerIsVisible","newCommentInputRef","newCommentPositionRef","comments","commentBarContext","trackRef","getThumbPercent","useInteractOutside","comment","canvasRef","progressCanvasRef","isInView","setIsInView","isVisible","setIsVisible","themeSelector","entries","onChange","sliderProps","thumbIds","newValue","commentable","inReplyTo","other","onSuccess","autoFocus","createComment","useObjectRef","labels","showPlays","count","managesItem","buttonClassName","buttonGap","buttonSize","buttonRadius","memo","reposter","hideArtwork","hideActions","linksInNewTab","showWave","fn","wait","callFirst","timeout","debouncedFn","clear","flush","call","debounceWrapper","args","callNow","itemWidth","enablePrev","setEnablePrev","enableNext","setEnableNext","updateNavStatus","handleScroll","debounce","useLayoutEffect","firstGridItem","scrollAmount","contentModel","layout","nestedChannel","slot","settings","isSubscribed","adCode","dot","useId","parentEl","promises","pattern","match","slugOrId","artistName","results","site_name","provider","videoId","videoUrl","guest_role","isActive","branding","logoUrl","newPlaylist","mediaId","mediaIsCued","button","setQuery","isOpen","setIsOpen","ComboBox","groupName","collection","activeIndex","QueuedTrack","PlaybackButtons","isUninitialized","PlayButton","status","label","unsubscribe","menu","hasUnreadNotif","registration","isShuffling","repeating","base_url","rightSidenavStatus","setRightSidenavStatus","playerRef","isMaximized","isQueueOpen","overlayRef","handleKeyDown","PlayerContainer","getState","isMobileMode","primaryArtist","menuItems","MenuItem","ActionButtons","isOverlay","hideQueue","billing","showUploadButton","showTryProButton","DialogElement","actionButtons","footer","centerItems","isFirst","alt","src","links","profile","shortDescription","artistPage","genres","initialTracks","showingAll","setShowingAll","topTracks","viewMode","initialAlbums","AlbumTrackTable","onSortChange","setViewMode","similarArtists","similar","text","href","attributes","attr","_ref","tagName","str","opts","tokens","token","images","img","maxHeight","activeTrack","isLast","playerActions","albums","searchParams","haveSimilar","haveBio","activeTabs","tab","selectedTabId","i","u","draft","follower","followUser","currentUser","unfollowUser","selectedIndex","isListView","tabIds","load","Children","firstLink","avatar","child","totalDuration","editor","hasTracks","removeTracks","indexOrIndexes","indexes","insertBefore","itemsToBeMoved","moved","insertionIndex","oldIndexes","ids","isTouchDevice","selectRow","domRef","previewRef","reorderTracks","sortableProps","oldIndex","mergeProps","PageContent","replyFormVisible","setReplyFormVisible","position","seconds","deleteComments","isConfirmed","auth","canDeleteAllComments","linkifiedDescription","wrapperRef","contentRef","isOverflowing","setIsOverflowing","isShowingAll","setIsShowingAll","wrapperHeight","FocusScope","tag","userId","trackCount","isError","getPlaceholderItems","totalTracks","selectedValue","orderBy","orderDir","sortItems","releaseDate","repost","form","formId","updateProfile","values","tabLink","tabName","selectedTab","setSelectedTab","seedType","seedId","total","tabIndex","artists","users","showMore","icon","wrapIcon","EmbedContent","mediaItem","homepage"],"mappings":"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","x_google_ignoreList":[0,1,5,109,146]}